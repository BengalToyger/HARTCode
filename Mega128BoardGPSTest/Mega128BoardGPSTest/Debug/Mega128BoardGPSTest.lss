
Mega128BoardGPSTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  00001ba0  00001c34  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ba0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010e  00800162  00800162  00001c96  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c96  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001cf4  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001d30  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f47  00000000  00000000  00001e40  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dc7  00000000  00000000  00003d87  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d25  00000000  00000000  00004b4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000440  00000000  00000000  00005874  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000772  00000000  00000000  00005cb4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001132  00000000  00000000  00006426  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00007558  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	63 c0       	rjmp	.+198    	; 0xc8 <__ctors_end>
       2:	00 00       	nop
       4:	7f c0       	rjmp	.+254    	; 0x104 <__bad_interrupt>
       6:	00 00       	nop
       8:	7d c0       	rjmp	.+250    	; 0x104 <__bad_interrupt>
       a:	00 00       	nop
       c:	7b c0       	rjmp	.+246    	; 0x104 <__bad_interrupt>
       e:	00 00       	nop
      10:	79 c0       	rjmp	.+242    	; 0x104 <__bad_interrupt>
      12:	00 00       	nop
      14:	77 c0       	rjmp	.+238    	; 0x104 <__bad_interrupt>
      16:	00 00       	nop
      18:	75 c0       	rjmp	.+234    	; 0x104 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	73 c0       	rjmp	.+230    	; 0x104 <__bad_interrupt>
      1e:	00 00       	nop
      20:	71 c0       	rjmp	.+226    	; 0x104 <__bad_interrupt>
      22:	00 00       	nop
      24:	6f c0       	rjmp	.+222    	; 0x104 <__bad_interrupt>
      26:	00 00       	nop
      28:	6d c0       	rjmp	.+218    	; 0x104 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6b c0       	rjmp	.+214    	; 0x104 <__bad_interrupt>
      2e:	00 00       	nop
      30:	69 c0       	rjmp	.+210    	; 0x104 <__bad_interrupt>
      32:	00 00       	nop
      34:	67 c0       	rjmp	.+206    	; 0x104 <__bad_interrupt>
      36:	00 00       	nop
      38:	65 c0       	rjmp	.+202    	; 0x104 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	63 c0       	rjmp	.+198    	; 0x104 <__bad_interrupt>
      3e:	00 00       	nop
      40:	61 c0       	rjmp	.+194    	; 0x104 <__bad_interrupt>
      42:	00 00       	nop
      44:	5f c0       	rjmp	.+190    	; 0x104 <__bad_interrupt>
      46:	00 00       	nop
      48:	73 c0       	rjmp	.+230    	; 0x130 <__vector_18>
      4a:	00 00       	nop
      4c:	5b c0       	rjmp	.+182    	; 0x104 <__bad_interrupt>
      4e:	00 00       	nop
      50:	59 c0       	rjmp	.+178    	; 0x104 <__bad_interrupt>
      52:	00 00       	nop
      54:	57 c0       	rjmp	.+174    	; 0x104 <__bad_interrupt>
      56:	00 00       	nop
      58:	55 c0       	rjmp	.+170    	; 0x104 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	53 c0       	rjmp	.+166    	; 0x104 <__bad_interrupt>
      5e:	00 00       	nop
      60:	51 c0       	rjmp	.+162    	; 0x104 <__bad_interrupt>
      62:	00 00       	nop
      64:	4f c0       	rjmp	.+158    	; 0x104 <__bad_interrupt>
      66:	00 00       	nop
      68:	4d c0       	rjmp	.+154    	; 0x104 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4b c0       	rjmp	.+150    	; 0x104 <__bad_interrupt>
      6e:	00 00       	nop
      70:	49 c0       	rjmp	.+146    	; 0x104 <__bad_interrupt>
      72:	00 00       	nop
      74:	47 c0       	rjmp	.+142    	; 0x104 <__bad_interrupt>
      76:	00 00       	nop
      78:	45 c0       	rjmp	.+138    	; 0x104 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	43 c0       	rjmp	.+134    	; 0x104 <__bad_interrupt>
      7e:	00 00       	nop
      80:	41 c0       	rjmp	.+130    	; 0x104 <__bad_interrupt>
      82:	00 00       	nop
      84:	3f c0       	rjmp	.+126    	; 0x104 <__bad_interrupt>
      86:	00 00       	nop
      88:	3d c0       	rjmp	.+122    	; 0x104 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	4e 41       	sbci	r20, 0x1E	; 30
      8e:	4e 49       	Address 0x0000008e is out of bounds.
.word	0xffff	; ????

0000008f <pstr_inity>:
      8f:	49 4e 49 54 59                                      INITY

00000094 <pstr_inf>:
      94:	49 4e 46                                            INF

00000097 <pwr_m10>:
      97:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      a7:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000000af <pwr_p10>:
      af:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      bf:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000000c8 <__ctors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d0 e1       	ldi	r29, 0x10	; 16
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	11 e0       	ldi	r17, 0x01	; 1
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e0 ea       	ldi	r30, 0xA0	; 160
      dc:	fb e1       	ldi	r31, 0x1B	; 27
      de:	00 e0       	ldi	r16, 0x00	; 0
      e0:	0b bf       	out	0x3b, r16	; 59
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x14>
      e4:	07 90       	elpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a2 36       	cpi	r26, 0x62	; 98
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0x10>

000000ee <__do_clear_bss>:
      ee:	22 e0       	ldi	r18, 0x02	; 2
      f0:	a2 e6       	ldi	r26, 0x62	; 98
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a0 37       	cpi	r26, 0x70	; 112
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	16 d0       	rcall	.+44     	; 0x12c <main>
     100:	0c 94 ce 0d 	jmp	0x1b9c	; 0x1b9c <_exit>

00000104 <__bad_interrupt>:
     104:	7d cf       	rjmp	.-262    	; 0x0 <__vectors>

00000106 <time>:
     106:	fc 01       	movw	r30, r24
     108:	0f b6       	in	r0, 0x3f	; 63
     10a:	f8 94       	cli
     10c:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <__system_time>
     110:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <__system_time+0x1>
     114:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <__system_time+0x2>
     118:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <__system_time+0x3>
     11c:	0f be       	out	0x3f, r0	; 63
     11e:	30 97       	sbiw	r30, 0x00	; 0
     120:	21 f0       	breq	.+8      	; 0x12a <time+0x24>
     122:	60 83       	st	Z, r22
     124:	71 83       	std	Z+1, r23	; 0x01
     126:	82 83       	std	Z+2, r24	; 0x02
     128:	93 83       	std	Z+3, r25	; 0x03
     12a:	08 95       	ret

0000012c <main>:


int main(void)
{
	#ifdef DOUNITTEST
	beginUnitTest();
     12c:	26 d4       	rcall	.+2124   	; 0x97a <beginUnitTest>
	#endif

	while(1){};
     12e:	ff cf       	rjmp	.-2      	; 0x12e <main+0x2>

00000130 <__vector_18>:
	} else if (!checkPUBX(packet)){
		return 0;	
	} else {
		return 1;
	}
}
     130:	1f 92       	push	r1
     132:	0f 92       	push	r0
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	0f 92       	push	r0
     138:	11 24       	eor	r1, r1
     13a:	0b b6       	in	r0, 0x3b	; 59
     13c:	0f 92       	push	r0
     13e:	2f 93       	push	r18
     140:	3f 93       	push	r19
     142:	4f 93       	push	r20
     144:	5f 93       	push	r21
     146:	6f 93       	push	r22
     148:	7f 93       	push	r23
     14a:	8f 93       	push	r24
     14c:	9f 93       	push	r25
     14e:	af 93       	push	r26
     150:	bf 93       	push	r27
     152:	ef 93       	push	r30
     154:	ff 93       	push	r31
     156:	9c b1       	in	r25, 0x0c	; 12
     158:	c3 98       	cbi	0x18, 3	; 24
     15a:	28 b3       	in	r18, 0x18	; 24
     15c:	81 e0       	ldi	r24, 0x01	; 1
     15e:	82 27       	eor	r24, r18
     160:	88 bb       	out	0x18, r24	; 24
     162:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     166:	8e 3f       	cpi	r24, 0xFE	; 254
     168:	38 f0       	brcs	.+14     	; 0x178 <__vector_18+0x48>
     16a:	c2 98       	cbi	0x18, 2	; 24
     16c:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
     170:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <msgBeginFlag>
     174:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <msgEndFlag>
     178:	94 32       	cpi	r25, 0x24	; 36
     17a:	d9 f4       	brne	.+54     	; 0x1b2 <__vector_18+0x82>
     17c:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     180:	81 11       	cpse	r24, r1
     182:	61 c0       	rjmp	.+194    	; 0x246 <__vector_18+0x116>
     184:	c1 9a       	sbi	0x18, 1	; 24
     186:	c3 98       	cbi	0x18, 3	; 24
     188:	c2 98       	cbi	0x18, 2	; 24
     18a:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <__data_end>
     18e:	81 e0       	ldi	r24, 0x01	; 1
     190:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <msgBeginFlag>
     194:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
     198:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     19c:	f0 e0       	ldi	r31, 0x00	; 0
     19e:	ea 59       	subi	r30, 0x9A	; 154
     1a0:	fe 4f       	sbci	r31, 0xFE	; 254
     1a2:	84 e2       	ldi	r24, 0x24	; 36
     1a4:	80 83       	st	Z, r24
     1a6:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     1aa:	8f 5f       	subi	r24, 0xFF	; 255
     1ac:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <msgIndex>
     1b0:	62 c0       	rjmp	.+196    	; 0x276 <__vector_18+0x146>
     1b2:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     1b6:	88 23       	and	r24, r24
     1b8:	c9 f0       	breq	.+50     	; 0x1ec <__vector_18+0xbc>
     1ba:	9a 32       	cpi	r25, 0x2A	; 42
     1bc:	09 f0       	breq	.+2      	; 0x1c0 <__vector_18+0x90>
     1be:	53 c0       	rjmp	.+166    	; 0x266 <__vector_18+0x136>
     1c0:	47 c0       	rjmp	.+142    	; 0x250 <__vector_18+0x120>
     1c2:	c2 9a       	sbi	0x18, 2	; 24
     1c4:	c1 98       	cbi	0x18, 1	; 24
     1c6:	9c 32       	cpi	r25, 0x2C	; 44
     1c8:	29 f4       	brne	.+10     	; 0x1d4 <__vector_18+0xa4>
     1ca:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     1ce:	8f 5f       	subi	r24, 0xFF	; 255
     1d0:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__data_end>
     1d4:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     1d8:	f0 e0       	ldi	r31, 0x00	; 0
     1da:	ea 59       	subi	r30, 0x9A	; 154
     1dc:	fe 4f       	sbci	r31, 0xFE	; 254
     1de:	90 83       	st	Z, r25
     1e0:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     1e4:	8f 5f       	subi	r24, 0xFF	; 255
     1e6:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <msgIndex>
     1ea:	45 c0       	rjmp	.+138    	; 0x276 <__vector_18+0x146>
     1ec:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     1f0:	88 23       	and	r24, r24
     1f2:	09 f4       	brne	.+2      	; 0x1f6 <__vector_18+0xc6>
     1f4:	40 c0       	rjmp	.+128    	; 0x276 <__vector_18+0x146>
     1f6:	9a 32       	cpi	r25, 0x2A	; 42
     1f8:	09 f0       	breq	.+2      	; 0x1fc <__vector_18+0xcc>
     1fa:	3d c0       	rjmp	.+122    	; 0x276 <__vector_18+0x146>
     1fc:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     200:	81 11       	cpse	r24, r1
     202:	39 c0       	rjmp	.+114    	; 0x276 <__vector_18+0x146>
     204:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     208:	f0 e0       	ldi	r31, 0x00	; 0
     20a:	ea 59       	subi	r30, 0x9A	; 154
     20c:	fe 4f       	sbci	r31, 0xFE	; 254
     20e:	8a e2       	ldi	r24, 0x2A	; 42
     210:	80 83       	st	Z, r24
     212:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     216:	8f 5f       	subi	r24, 0xFF	; 255
     218:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <msgIndex>
     21c:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     220:	f0 e0       	ldi	r31, 0x00	; 0
     222:	ea 59       	subi	r30, 0x9A	; 154
     224:	fe 4f       	sbci	r31, 0xFE	; 254
     226:	10 82       	st	Z, r1
     228:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
     22c:	81 e0       	ldi	r24, 0x01	; 1
     22e:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <msgEndFlag>
     232:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <msgBeginFlag>
     236:	c3 9a       	sbi	0x18, 3	; 24
     238:	c1 98       	cbi	0x18, 1	; 24
     23a:	c2 98       	cbi	0x18, 2	; 24
     23c:	60 e0       	ldi	r22, 0x00	; 0
     23e:	8a e0       	ldi	r24, 0x0A	; 10
     240:	0e d4       	rcall	.+2076   	; 0xa5e <USARTTX>
     242:	f8 94       	cli
     244:	18 c0       	rjmp	.+48     	; 0x276 <__vector_18+0x146>
     246:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     24a:	81 11       	cpse	r24, r1
     24c:	09 c0       	rjmp	.+18     	; 0x260 <__vector_18+0x130>
     24e:	11 c0       	rjmp	.+34     	; 0x272 <__vector_18+0x142>
     250:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     254:	81 11       	cpse	r24, r1
     256:	d2 cf       	rjmp	.-92     	; 0x1fc <__vector_18+0xcc>
     258:	0e c0       	rjmp	.+28     	; 0x276 <__vector_18+0x146>
     25a:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     25e:	0b c0       	rjmp	.+22     	; 0x276 <__vector_18+0x146>
     260:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     264:	fa cf       	rjmp	.-12     	; 0x25a <__vector_18+0x12a>
     266:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     26a:	88 23       	and	r24, r24
     26c:	09 f4       	brne	.+2      	; 0x270 <__vector_18+0x140>
     26e:	a9 cf       	rjmp	.-174    	; 0x1c2 <__vector_18+0x92>
     270:	f4 cf       	rjmp	.-24     	; 0x25a <__vector_18+0x12a>
     272:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     276:	ff 91       	pop	r31
     278:	ef 91       	pop	r30
     27a:	bf 91       	pop	r27
     27c:	af 91       	pop	r26
     27e:	9f 91       	pop	r25
     280:	8f 91       	pop	r24
     282:	7f 91       	pop	r23
     284:	6f 91       	pop	r22
     286:	5f 91       	pop	r21
     288:	4f 91       	pop	r20
     28a:	3f 91       	pop	r19
     28c:	2f 91       	pop	r18
     28e:	0f 90       	pop	r0
     290:	0b be       	out	0x3b, r0	; 59
     292:	0f 90       	pop	r0
     294:	0f be       	out	0x3f, r0	; 63
     296:	0f 90       	pop	r0
     298:	1f 90       	pop	r1
     29a:	18 95       	reti

0000029c <SendGPS>:
     29c:	ef 92       	push	r14
     29e:	ff 92       	push	r15
     2a0:	1f 93       	push	r17
     2a2:	cf 93       	push	r28
     2a4:	df 93       	push	r29
     2a6:	1f 92       	push	r1
     2a8:	cd b7       	in	r28, 0x3d	; 61
     2aa:	de b7       	in	r29, 0x3e	; 62
     2ac:	7c 01       	movw	r14, r24
     2ae:	16 2f       	mov	r17, r22
     2b0:	60 e0       	ldi	r22, 0x00	; 0
     2b2:	84 e2       	ldi	r24, 0x24	; 36
     2b4:	d4 d3       	rcall	.+1960   	; 0xa5e <USARTTX>
     2b6:	19 82       	std	Y+1, r1	; 0x01
     2b8:	89 81       	ldd	r24, Y+1	; 0x01
     2ba:	81 17       	cp	r24, r17
     2bc:	68 f4       	brcc	.+26     	; 0x2d8 <SendGPS+0x3c>
     2be:	99 81       	ldd	r25, Y+1	; 0x01
     2c0:	f7 01       	movw	r30, r14
     2c2:	e9 0f       	add	r30, r25
     2c4:	f1 1d       	adc	r31, r1
     2c6:	60 e0       	ldi	r22, 0x00	; 0
     2c8:	80 81       	ld	r24, Z
     2ca:	c9 d3       	rcall	.+1938   	; 0xa5e <USARTTX>
     2cc:	99 81       	ldd	r25, Y+1	; 0x01
     2ce:	9f 5f       	subi	r25, 0xFF	; 255
     2d0:	99 83       	std	Y+1, r25	; 0x01
     2d2:	99 81       	ldd	r25, Y+1	; 0x01
     2d4:	91 17       	cp	r25, r17
     2d6:	98 f3       	brcs	.-26     	; 0x2be <SendGPS+0x22>
     2d8:	60 e0       	ldi	r22, 0x00	; 0
     2da:	8d e0       	ldi	r24, 0x0D	; 13
     2dc:	c0 d3       	rcall	.+1920   	; 0xa5e <USARTTX>
     2de:	60 e0       	ldi	r22, 0x00	; 0
     2e0:	8a e0       	ldi	r24, 0x0A	; 10
     2e2:	bd d3       	rcall	.+1914   	; 0xa5e <USARTTX>
     2e4:	0f 90       	pop	r0
     2e6:	df 91       	pop	r29
     2e8:	cf 91       	pop	r28
     2ea:	1f 91       	pop	r17
     2ec:	ff 90       	pop	r15
     2ee:	ef 90       	pop	r14
     2f0:	08 95       	ret

000002f2 <CheckSum>:

// Calculates and writes the checksum for an outgoing packet
void CheckSum(char* packet){
     2f2:	0f 93       	push	r16
     2f4:	1f 93       	push	r17
     2f6:	cf 93       	push	r28
     2f8:	df 93       	push	r29
     2fa:	00 d0       	rcall	.+0      	; 0x2fc <CheckSum+0xa>
     2fc:	00 d0       	rcall	.+0      	; 0x2fe <CheckSum+0xc>
     2fe:	1f 92       	push	r1
     300:	cd b7       	in	r28, 0x3d	; 61
     302:	de b7       	in	r29, 0x3e	; 62
     304:	8c 01       	movw	r16, r24
	uint8_t volatile i = 0;
     306:	19 82       	std	Y+1, r1	; 0x01
	uint8_t volatile checksum;
	char hexchar[3];
	while(!(packet[i] == '*')){
     308:	89 81       	ldd	r24, Y+1	; 0x01
     30a:	f8 01       	movw	r30, r16
     30c:	e8 0f       	add	r30, r24
     30e:	f1 1d       	adc	r31, r1
     310:	80 81       	ld	r24, Z
     312:	8a 32       	cpi	r24, 0x2A	; 42
     314:	91 f0       	breq	.+36     	; 0x33a <CheckSum+0x48>
		checksum ^= packet[i]; //XORs all the packet bytes together to get the checksum
     316:	99 81       	ldd	r25, Y+1	; 0x01
     318:	8a 81       	ldd	r24, Y+2	; 0x02
     31a:	f8 01       	movw	r30, r16
     31c:	e9 0f       	add	r30, r25
     31e:	f1 1d       	adc	r31, r1
     320:	90 81       	ld	r25, Z
     322:	98 27       	eor	r25, r24
     324:	9a 83       	std	Y+2, r25	; 0x02
		i++;
     326:	99 81       	ldd	r25, Y+1	; 0x01
     328:	9f 5f       	subi	r25, 0xFF	; 255
     32a:	99 83       	std	Y+1, r25	; 0x01
// Calculates and writes the checksum for an outgoing packet
void CheckSum(char* packet){
	uint8_t volatile i = 0;
	uint8_t volatile checksum;
	char hexchar[3];
	while(!(packet[i] == '*')){
     32c:	89 81       	ldd	r24, Y+1	; 0x01
     32e:	f8 01       	movw	r30, r16
     330:	e8 0f       	add	r30, r24
     332:	f1 1d       	adc	r31, r1
     334:	80 81       	ld	r24, Z
     336:	8a 32       	cpi	r24, 0x2A	; 42
     338:	71 f7       	brne	.-36     	; 0x316 <CheckSum+0x24>
		checksum ^= packet[i]; //XORs all the packet bytes together to get the checksum
		i++;
	}
	sprintf(hexchar, "%02X", checksum);
     33a:	8a 81       	ldd	r24, Y+2	; 0x02
     33c:	1f 92       	push	r1
     33e:	8f 93       	push	r24
     340:	80 e3       	ldi	r24, 0x30	; 48
     342:	91 e0       	ldi	r25, 0x01	; 1
     344:	9f 93       	push	r25
     346:	8f 93       	push	r24
     348:	ce 01       	movw	r24, r28
     34a:	03 96       	adiw	r24, 0x03	; 3
     34c:	9f 93       	push	r25
     34e:	8f 93       	push	r24
     350:	94 d7       	rcall	.+3880   	; 0x127a <sprintf>
	i++;
     352:	89 81       	ldd	r24, Y+1	; 0x01
     354:	8f 5f       	subi	r24, 0xFF	; 255
     356:	89 83       	std	Y+1, r24	; 0x01
	packet[i] = hexchar[0];
     358:	89 81       	ldd	r24, Y+1	; 0x01
     35a:	f8 01       	movw	r30, r16
     35c:	e8 0f       	add	r30, r24
     35e:	f1 1d       	adc	r31, r1
     360:	8b 81       	ldd	r24, Y+3	; 0x03
     362:	80 83       	st	Z, r24
	i++;
     364:	89 81       	ldd	r24, Y+1	; 0x01
     366:	8f 5f       	subi	r24, 0xFF	; 255
     368:	89 83       	std	Y+1, r24	; 0x01
	packet[i] = hexchar[1];
     36a:	89 81       	ldd	r24, Y+1	; 0x01
     36c:	f8 01       	movw	r30, r16
     36e:	e8 0f       	add	r30, r24
     370:	f1 1d       	adc	r31, r1
     372:	8c 81       	ldd	r24, Y+4	; 0x04
     374:	80 83       	st	Z, r24
     376:	0f 90       	pop	r0
     378:	0f 90       	pop	r0
     37a:	0f 90       	pop	r0
     37c:	0f 90       	pop	r0
     37e:	0f 90       	pop	r0
     380:	0f 90       	pop	r0
	return;
}
     382:	0f 90       	pop	r0
     384:	0f 90       	pop	r0
     386:	0f 90       	pop	r0
     388:	0f 90       	pop	r0
     38a:	0f 90       	pop	r0
     38c:	df 91       	pop	r29
     38e:	cf 91       	pop	r28
     390:	1f 91       	pop	r17
     392:	0f 91       	pop	r16
     394:	08 95       	ret

00000396 <PUBXCFGSetup>:
//	packet: The packet to be sent, consisting of the config message base. The message name gets modified.
//	msg: The particular identifier of the message to be turned off
// Returns:
//	Nothing

void PUBXCFGSetup(char* packet, char* msg){
     396:	cf 93       	push	r28
     398:	df 93       	push	r29
     39a:	00 d0       	rcall	.+0      	; 0x39c <PUBXCFGSetup+0x6>
     39c:	cd b7       	in	r28, 0x3d	; 61
     39e:	de b7       	in	r29, 0x3e	; 62
     3a0:	ac 01       	movw	r20, r24
	uint8_t volatile i = MSGSTT; //Sets up the configure message to turn off all the messages we don't want.
     3a2:	88 e0       	ldi	r24, 0x08	; 8
     3a4:	89 83       	std	Y+1, r24	; 0x01
	uint8_t volatile j = 0; //Takes the message name
     3a6:	1a 82       	std	Y+2, r1	; 0x02
	for (i; i < MSGEND; i++){
     3a8:	89 81       	ldd	r24, Y+1	; 0x01
     3aa:	89 81       	ldd	r24, Y+1	; 0x01
     3ac:	8b 30       	cpi	r24, 0x0B	; 11
     3ae:	98 f4       	brcc	.+38     	; 0x3d6 <PUBXCFGSetup+0x40>
		packet[i] = msg[j];
     3b0:	29 81       	ldd	r18, Y+1	; 0x01
     3b2:	9a 81       	ldd	r25, Y+2	; 0x02
     3b4:	fb 01       	movw	r30, r22
     3b6:	e9 0f       	add	r30, r25
     3b8:	f1 1d       	adc	r31, r1
     3ba:	90 81       	ld	r25, Z
     3bc:	fa 01       	movw	r30, r20
     3be:	e2 0f       	add	r30, r18
     3c0:	f1 1d       	adc	r31, r1
     3c2:	90 83       	st	Z, r25
		j++;
     3c4:	9a 81       	ldd	r25, Y+2	; 0x02
     3c6:	9f 5f       	subi	r25, 0xFF	; 255
     3c8:	9a 83       	std	Y+2, r25	; 0x02
//	Nothing

void PUBXCFGSetup(char* packet, char* msg){
	uint8_t volatile i = MSGSTT; //Sets up the configure message to turn off all the messages we don't want.
	uint8_t volatile j = 0; //Takes the message name
	for (i; i < MSGEND; i++){
     3ca:	99 81       	ldd	r25, Y+1	; 0x01
     3cc:	9f 5f       	subi	r25, 0xFF	; 255
     3ce:	99 83       	std	Y+1, r25	; 0x01
     3d0:	99 81       	ldd	r25, Y+1	; 0x01
     3d2:	9b 30       	cpi	r25, 0x0B	; 11
     3d4:	68 f3       	brcs	.-38     	; 0x3b0 <PUBXCFGSetup+0x1a>
		packet[i] = msg[j];
		j++;
	}
	CheckSum(packet);
     3d6:	ca 01       	movw	r24, r20
     3d8:	8c df       	rcall	.-232    	; 0x2f2 <CheckSum>
	return;
}
     3da:	0f 90       	pop	r0
     3dc:	0f 90       	pop	r0
     3de:	df 91       	pop	r29
     3e0:	cf 91       	pop	r28
     3e2:	08 95       	ret

000003e4 <InitGPS>:
		return;
	}
}

//Use RATE (PUBX,40)
uint16_t InitGPS(void){
     3e4:	cf 93       	push	r28
     3e6:	df 93       	push	r29
     3e8:	cd b7       	in	r28, 0x3d	; 61
     3ea:	de b7       	in	r29, 0x3e	; 62
     3ec:	6c 97       	sbiw	r28, 0x1c	; 28
     3ee:	0f b6       	in	r0, 0x3f	; 63
     3f0:	f8 94       	cli
     3f2:	de bf       	out	0x3e, r29	; 62
     3f4:	0f be       	out	0x3f, r0	; 63
     3f6:	cd bf       	out	0x3d, r28	; 61
	uint16_t volatile SetUBRR; //Turns off all the messages we don't want
	msgIndex = 0;
     3f8:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
	msgBeginFlag = 0;
     3fc:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <msgBeginFlag>
	msgEndFlag = 0;
     400:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <msgEndFlag>
	char CFGMSG[CFGMSGSIZE] = PUBXNOCOMMCFGMSGBASE;
     404:	8a e1       	ldi	r24, 0x1A	; 26
     406:	ea e0       	ldi	r30, 0x0A	; 10
     408:	f1 e0       	ldi	r31, 0x01	; 1
     40a:	de 01       	movw	r26, r28
     40c:	13 96       	adiw	r26, 0x03	; 3
     40e:	01 90       	ld	r0, Z+
     410:	0d 92       	st	X+, r0
     412:	8a 95       	dec	r24
     414:	e1 f7       	brne	.-8      	; 0x40e <__LOCK_REGION_LENGTH__+0xe>
	SetUBRR = InitUSART(GPSBAUD, GPSPORT);
     416:	40 e0       	ldi	r20, 0x00	; 0
     418:	60 e8       	ldi	r22, 0x80	; 128
     41a:	75 e2       	ldi	r23, 0x25	; 37
     41c:	80 e0       	ldi	r24, 0x00	; 0
     41e:	90 e0       	ldi	r25, 0x00	; 0
     420:	fe d2       	rcall	.+1532   	; 0xa1e <InitUSART>
     422:	9a 83       	std	Y+2, r25	; 0x02
     424:	89 83       	std	Y+1, r24	; 0x01
	if (SetUBRR){
     426:	89 81       	ldd	r24, Y+1	; 0x01
     428:	9a 81       	ldd	r25, Y+2	; 0x02
     42a:	00 97       	sbiw	r24, 0x00	; 0
     42c:	09 f4       	brne	.+2      	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
     42e:	5d c0       	rjmp	.+186    	; 0x4ea <__LOCK_REGION_LENGTH__+0xea>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     430:	2f ef       	ldi	r18, 0xFF	; 255
     432:	87 ea       	ldi	r24, 0xA7	; 167
     434:	91 e6       	ldi	r25, 0x61	; 97
     436:	21 50       	subi	r18, 0x01	; 1
     438:	80 40       	sbci	r24, 0x00	; 0
     43a:	90 40       	sbci	r25, 0x00	; 0
     43c:	e1 f7       	brne	.-8      	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     43e:	00 c0       	rjmp	.+0      	; 0x440 <__LOCK_REGION_LENGTH__+0x40>
     440:	00 00       	nop
		_delay_ms(2000);
		PUBXCFGSetup(CFGMSG, "GLL");
     442:	65 e3       	ldi	r22, 0x35	; 53
     444:	71 e0       	ldi	r23, 0x01	; 1
     446:	ce 01       	movw	r24, r28
     448:	03 96       	adiw	r24, 0x03	; 3
     44a:	a5 df       	rcall	.-182    	; 0x396 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     44c:	6a e1       	ldi	r22, 0x1A	; 26
     44e:	ce 01       	movw	r24, r28
     450:	03 96       	adiw	r24, 0x03	; 3
     452:	24 df       	rcall	.-440    	; 0x29c <SendGPS>
     454:	2f ef       	ldi	r18, 0xFF	; 255
     456:	85 ea       	ldi	r24, 0xA5	; 165
     458:	9e e0       	ldi	r25, 0x0E	; 14
     45a:	21 50       	subi	r18, 0x01	; 1
     45c:	80 40       	sbci	r24, 0x00	; 0
     45e:	90 40       	sbci	r25, 0x00	; 0
     460:	e1 f7       	brne	.-8      	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
     462:	00 c0       	rjmp	.+0      	; 0x464 <__LOCK_REGION_LENGTH__+0x64>
     464:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "GSA");
     466:	69 e3       	ldi	r22, 0x39	; 57
     468:	71 e0       	ldi	r23, 0x01	; 1
     46a:	ce 01       	movw	r24, r28
     46c:	03 96       	adiw	r24, 0x03	; 3
     46e:	93 df       	rcall	.-218    	; 0x396 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     470:	6a e1       	ldi	r22, 0x1A	; 26
     472:	ce 01       	movw	r24, r28
     474:	03 96       	adiw	r24, 0x03	; 3
     476:	12 df       	rcall	.-476    	; 0x29c <SendGPS>
     478:	2f ef       	ldi	r18, 0xFF	; 255
     47a:	85 ea       	ldi	r24, 0xA5	; 165
     47c:	9e e0       	ldi	r25, 0x0E	; 14
     47e:	21 50       	subi	r18, 0x01	; 1
     480:	80 40       	sbci	r24, 0x00	; 0
     482:	90 40       	sbci	r25, 0x00	; 0
     484:	e1 f7       	brne	.-8      	; 0x47e <__LOCK_REGION_LENGTH__+0x7e>
     486:	00 c0       	rjmp	.+0      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
     488:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "GSV");
     48a:	6d e3       	ldi	r22, 0x3D	; 61
     48c:	71 e0       	ldi	r23, 0x01	; 1
     48e:	ce 01       	movw	r24, r28
     490:	03 96       	adiw	r24, 0x03	; 3
     492:	81 df       	rcall	.-254    	; 0x396 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     494:	6a e1       	ldi	r22, 0x1A	; 26
     496:	ce 01       	movw	r24, r28
     498:	03 96       	adiw	r24, 0x03	; 3
     49a:	00 df       	rcall	.-512    	; 0x29c <SendGPS>
     49c:	2f ef       	ldi	r18, 0xFF	; 255
     49e:	85 ea       	ldi	r24, 0xA5	; 165
     4a0:	9e e0       	ldi	r25, 0x0E	; 14
     4a2:	21 50       	subi	r18, 0x01	; 1
     4a4:	80 40       	sbci	r24, 0x00	; 0
     4a6:	90 40       	sbci	r25, 0x00	; 0
     4a8:	e1 f7       	brne	.-8      	; 0x4a2 <__LOCK_REGION_LENGTH__+0xa2>
     4aa:	00 c0       	rjmp	.+0      	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
     4ac:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "RMC");
     4ae:	61 e4       	ldi	r22, 0x41	; 65
     4b0:	71 e0       	ldi	r23, 0x01	; 1
     4b2:	ce 01       	movw	r24, r28
     4b4:	03 96       	adiw	r24, 0x03	; 3
     4b6:	6f df       	rcall	.-290    	; 0x396 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     4b8:	6a e1       	ldi	r22, 0x1A	; 26
     4ba:	ce 01       	movw	r24, r28
     4bc:	03 96       	adiw	r24, 0x03	; 3
     4be:	ee de       	rcall	.-548    	; 0x29c <SendGPS>
     4c0:	2f ef       	ldi	r18, 0xFF	; 255
     4c2:	85 ea       	ldi	r24, 0xA5	; 165
     4c4:	9e e0       	ldi	r25, 0x0E	; 14
     4c6:	21 50       	subi	r18, 0x01	; 1
     4c8:	80 40       	sbci	r24, 0x00	; 0
     4ca:	90 40       	sbci	r25, 0x00	; 0
     4cc:	e1 f7       	brne	.-8      	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
     4d0:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "VTG");
     4d2:	65 e4       	ldi	r22, 0x45	; 69
     4d4:	71 e0       	ldi	r23, 0x01	; 1
     4d6:	ce 01       	movw	r24, r28
     4d8:	03 96       	adiw	r24, 0x03	; 3
     4da:	5d df       	rcall	.-326    	; 0x396 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     4dc:	6a e1       	ldi	r22, 0x1A	; 26
     4de:	ce 01       	movw	r24, r28
     4e0:	03 96       	adiw	r24, 0x03	; 3
     4e2:	dc de       	rcall	.-584    	; 0x29c <SendGPS>
		sei();
     4e4:	78 94       	sei
		return SetUBRR;
     4e6:	89 81       	ldd	r24, Y+1	; 0x01
     4e8:	9a 81       	ldd	r25, Y+2	; 0x02
	} else {
		return 0;
	}
}
     4ea:	6c 96       	adiw	r28, 0x1c	; 28
     4ec:	0f b6       	in	r0, 0x3f	; 63
     4ee:	f8 94       	cli
     4f0:	de bf       	out	0x3e, r29	; 62
     4f2:	0f be       	out	0x3f, r0	; 63
     4f4:	cd bf       	out	0x3d, r28	; 61
     4f6:	df 91       	pop	r29
     4f8:	cf 91       	pop	r28
     4fa:	08 95       	ret

000004fc <parseDegreesMinutes>:
}

// Parses a string in the format: DDMM.MMMMMMM, where DD is degrees, and MM is minutes.
// degLength is the length of the degrees part. For example, degLength of 3 means
// the string will be DDDMM.MMMMMMM.
float parseDegreesMinutes(char *s, int degLength) {
     4fc:	af 92       	push	r10
     4fe:	bf 92       	push	r11
     500:	cf 92       	push	r12
     502:	df 92       	push	r13
     504:	ef 92       	push	r14
     506:	ff 92       	push	r15
     508:	0f 93       	push	r16
     50a:	1f 93       	push	r17
     50c:	cf 93       	push	r28
     50e:	df 93       	push	r29
     510:	cd b7       	in	r28, 0x3d	; 61
     512:	de b7       	in	r29, 0x3e	; 62
     514:	28 97       	sbiw	r28, 0x08	; 8
     516:	0f b6       	in	r0, 0x3f	; 63
     518:	f8 94       	cli
     51a:	de bf       	out	0x3e, r29	; 62
     51c:	0f be       	out	0x3f, r0	; 63
     51e:	cd bf       	out	0x3d, r28	; 61
     520:	6c 01       	movw	r12, r24
     522:	8b 01       	movw	r16, r22
	degrees = atof(degreesString);
	// Convert the minutes
	minutes = atof(s + degLength);
	// Convert the minutes to decimal degrees
	return degrees + (minutes / 60);
}
     524:	ad b6       	in	r10, 0x3d	; 61
     526:	be b6       	in	r11, 0x3e	; 62

// Parses a string in the format: DDMM.MMMMMMM, where DD is degrees, and MM is minutes.
// degLength is the length of the degrees part. For example, degLength of 3 means
// the string will be DDDMM.MMMMMMM.
float parseDegreesMinutes(char *s, int degLength) {
	char degreesString[degLength + 1];
     528:	cb 01       	movw	r24, r22
     52a:	01 96       	adiw	r24, 0x01	; 1
     52c:	2d b7       	in	r18, 0x3d	; 61
     52e:	3e b7       	in	r19, 0x3e	; 62
     530:	28 1b       	sub	r18, r24
     532:	39 0b       	sbc	r19, r25
     534:	0f b6       	in	r0, 0x3f	; 63
     536:	f8 94       	cli
     538:	3e bf       	out	0x3e, r19	; 62
     53a:	0f be       	out	0x3f, r0	; 63
     53c:	2d bf       	out	0x3d, r18	; 61
     53e:	8d b7       	in	r24, 0x3d	; 61
     540:	9e b7       	in	r25, 0x3e	; 62
     542:	01 96       	adiw	r24, 0x01	; 1
     544:	7c 01       	movw	r14, r24
	float volatile degrees;
	float volatile minutes;
	// Copy the degrees part into degreesString and convert it to a float
	strncpy(degreesString, s, degLength);
     546:	ab 01       	movw	r20, r22
     548:	b6 01       	movw	r22, r12
     54a:	70 d6       	rcall	.+3296   	; 0x122c <strncpy>
	degreesString[degLength] = '\0';
     54c:	f7 01       	movw	r30, r14
     54e:	e0 0f       	add	r30, r16
     550:	f1 1f       	adc	r31, r17
     552:	10 82       	st	Z, r1
	degrees = atof(degreesString);
     554:	c7 01       	movw	r24, r14
     556:	48 d6       	rcall	.+3216   	; 0x11e8 <atof>
     558:	69 83       	std	Y+1, r22	; 0x01
     55a:	7a 83       	std	Y+2, r23	; 0x02
     55c:	8b 83       	std	Y+3, r24	; 0x03
     55e:	9c 83       	std	Y+4, r25	; 0x04
	// Convert the minutes
	minutes = atof(s + degLength);
     560:	c6 01       	movw	r24, r12
     562:	80 0f       	add	r24, r16
     564:	91 1f       	adc	r25, r17
     566:	40 d6       	rcall	.+3200   	; 0x11e8 <atof>
     568:	6d 83       	std	Y+5, r22	; 0x05
     56a:	7e 83       	std	Y+6, r23	; 0x06
     56c:	8f 83       	std	Y+7, r24	; 0x07
     56e:	98 87       	std	Y+8, r25	; 0x08
	// Convert the minutes to decimal degrees
	return degrees + (minutes / 60);
     570:	6d 81       	ldd	r22, Y+5	; 0x05
     572:	7e 81       	ldd	r23, Y+6	; 0x06
     574:	8f 81       	ldd	r24, Y+7	; 0x07
     576:	98 85       	ldd	r25, Y+8	; 0x08
     578:	c9 80       	ldd	r12, Y+1	; 0x01
     57a:	da 80       	ldd	r13, Y+2	; 0x02
     57c:	eb 80       	ldd	r14, Y+3	; 0x03
     57e:	fc 80       	ldd	r15, Y+4	; 0x04
     580:	20 e0       	ldi	r18, 0x00	; 0
     582:	30 e0       	ldi	r19, 0x00	; 0
     584:	40 e7       	ldi	r20, 0x70	; 112
     586:	52 e4       	ldi	r21, 0x42	; 66
     588:	dd d2       	rcall	.+1466   	; 0xb44 <__divsf3>
     58a:	a7 01       	movw	r20, r14
     58c:	96 01       	movw	r18, r12
     58e:	76 d2       	rcall	.+1260   	; 0xa7c <__addsf3>
}
     590:	0f b6       	in	r0, 0x3f	; 63
     592:	f8 94       	cli
     594:	be be       	out	0x3e, r11	; 62
     596:	0f be       	out	0x3f, r0	; 63
     598:	ad be       	out	0x3d, r10	; 61
     59a:	28 96       	adiw	r28, 0x08	; 8
     59c:	0f b6       	in	r0, 0x3f	; 63
     59e:	f8 94       	cli
     5a0:	de bf       	out	0x3e, r29	; 62
     5a2:	0f be       	out	0x3f, r0	; 63
     5a4:	cd bf       	out	0x3d, r28	; 61
     5a6:	df 91       	pop	r29
     5a8:	cf 91       	pop	r28
     5aa:	1f 91       	pop	r17
     5ac:	0f 91       	pop	r16
     5ae:	ff 90       	pop	r15
     5b0:	ef 90       	pop	r14
     5b2:	df 90       	pop	r13
     5b4:	cf 90       	pop	r12
     5b6:	bf 90       	pop	r11
     5b8:	af 90       	pop	r10
     5ba:	08 95       	ret

000005bc <parseGGA>:
// Parameters:
//		packet:		the GGA message string
//		GPSdata:	the struct that accepts the final calculated data
// Returns:
//		Nothing
void parseGGA(char *packet, struct GPSStruct *GPSdata) {
     5bc:	cf 92       	push	r12
     5be:	df 92       	push	r13
     5c0:	ef 92       	push	r14
     5c2:	ff 92       	push	r15
     5c4:	0f 93       	push	r16
     5c6:	1f 93       	push	r17
     5c8:	cf 93       	push	r28
     5ca:	df 93       	push	r29
     5cc:	00 d0       	rcall	.+0      	; 0x5ce <parseGGA+0x12>
     5ce:	1f 92       	push	r1
     5d0:	cd b7       	in	r28, 0x3d	; 61
     5d2:	de b7       	in	r29, 0x3e	; 62
     5d4:	7b 01       	movw	r14, r22
	char *packetCopy = strdup(packet);
     5d6:	0b d6       	rcall	.+3094   	; 0x11ee <strdup>
     5d8:	8c 01       	movw	r16, r24
     5da:	9a 83       	std	Y+2, r25	; 0x02
     5dc:	89 83       	std	Y+1, r24	; 0x01
	uint8_t volatile i = 0;
     5de:	1b 82       	std	Y+3, r1	; 0x03
	char *originalPacketCopy = packetCopy; 
	// The string token that we are currently looking at
	char *msgPart = packetCopy;
	
	// Skip the xxGGA and time fields
	for(i = 0; i < 2; i++) {
     5e0:	1b 82       	std	Y+3, r1	; 0x03
     5e2:	8b 81       	ldd	r24, Y+3	; 0x03
     5e4:	82 30       	cpi	r24, 0x02	; 2
     5e6:	58 f4       	brcc	.+22     	; 0x5fe <parseGGA+0x42>
		strsep(&packetCopy, ",");
     5e8:	69 e4       	ldi	r22, 0x49	; 73
     5ea:	71 e0       	ldi	r23, 0x01	; 1
     5ec:	ce 01       	movw	r24, r28
     5ee:	01 96       	adiw	r24, 0x01	; 1
     5f0:	2c d6       	rcall	.+3160   	; 0x124a <strsep>
	char *originalPacketCopy = packetCopy; 
	// The string token that we are currently looking at
	char *msgPart = packetCopy;
	
	// Skip the xxGGA and time fields
	for(i = 0; i < 2; i++) {
     5f2:	9b 81       	ldd	r25, Y+3	; 0x03
     5f4:	9f 5f       	subi	r25, 0xFF	; 255
     5f6:	9b 83       	std	Y+3, r25	; 0x03
     5f8:	8b 81       	ldd	r24, Y+3	; 0x03
     5fa:	82 30       	cpi	r24, 0x02	; 2
     5fc:	a8 f3       	brcs	.-22     	; 0x5e8 <parseGGA+0x2c>
		strsep(&packetCopy, ",");
	}
	i = 0;
     5fe:	1b 82       	std	Y+3, r1	; 0x03
	
	// get the latitude
	if (msgPart[i]){
     600:	8b 81       	ldd	r24, Y+3	; 0x03
     602:	f8 01       	movw	r30, r16
     604:	e8 0f       	add	r30, r24
     606:	f1 1d       	adc	r31, r1
     608:	80 81       	ld	r24, Z
     60a:	88 23       	and	r24, r24
     60c:	79 f0       	breq	.+30     	; 0x62c <parseGGA+0x70>
		msgPart = strsep(&packetCopy, ",");
     60e:	69 e4       	ldi	r22, 0x49	; 73
     610:	71 e0       	ldi	r23, 0x01	; 1
     612:	ce 01       	movw	r24, r28
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	19 d6       	rcall	.+3122   	; 0x124a <strsep>
     618:	6c 01       	movw	r12, r24
		GPSdata->latitude = parseDegreesMinutes(msgPart, 2);
     61a:	62 e0       	ldi	r22, 0x02	; 2
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	6e df       	rcall	.-292    	; 0x4fc <parseDegreesMinutes>
     620:	f7 01       	movw	r30, r14
     622:	62 83       	std	Z+2, r22	; 0x02
     624:	73 83       	std	Z+3, r23	; 0x03
     626:	84 83       	std	Z+4, r24	; 0x04
     628:	95 83       	std	Z+5, r25	; 0x05
     62a:	06 c0       	rjmp	.+12     	; 0x638 <parseGGA+0x7c>
	} else {
		GPSdata->latitude = 0;
     62c:	f7 01       	movw	r30, r14
     62e:	12 82       	std	Z+2, r1	; 0x02
     630:	13 82       	std	Z+3, r1	; 0x03
     632:	14 82       	std	Z+4, r1	; 0x04
     634:	15 82       	std	Z+5, r1	; 0x05
	uint8_t volatile i = 0;
	// We are going to alter the packetCopy pointer with strsep, so keep
	// a copy of the original location so we can free() it later.
	char *originalPacketCopy = packetCopy; 
	// The string token that we are currently looking at
	char *msgPart = packetCopy;
     636:	68 01       	movw	r12, r16
	} else {
		GPSdata->latitude = 0;
	}
	
	// get the N/S component of the latitude. If it's 'S', then make the latitude negative
	if (msgPart[i]){
     638:	8b 81       	ldd	r24, Y+3	; 0x03
     63a:	f6 01       	movw	r30, r12
     63c:	e8 0f       	add	r30, r24
     63e:	f1 1d       	adc	r31, r1
     640:	80 81       	ld	r24, Z
     642:	88 23       	and	r24, r24
     644:	99 f0       	breq	.+38     	; 0x66c <parseGGA+0xb0>
		msgPart = strsep(&packetCopy, ",");
     646:	69 e4       	ldi	r22, 0x49	; 73
     648:	71 e0       	ldi	r23, 0x01	; 1
     64a:	ce 01       	movw	r24, r28
     64c:	01 96       	adiw	r24, 0x01	; 1
     64e:	fd d5       	rcall	.+3066   	; 0x124a <strsep>
		if(*msgPart == 'S') {
     650:	fc 01       	movw	r30, r24
     652:	80 81       	ld	r24, Z
     654:	83 35       	cpi	r24, 0x53	; 83
     656:	51 f4       	brne	.+20     	; 0x66c <parseGGA+0xb0>
			GPSdata->latitude = -GPSdata->latitude;
     658:	f7 01       	movw	r30, r14
     65a:	82 81       	ldd	r24, Z+2	; 0x02
     65c:	93 81       	ldd	r25, Z+3	; 0x03
     65e:	a4 81       	ldd	r26, Z+4	; 0x04
     660:	b5 81       	ldd	r27, Z+5	; 0x05
     662:	b0 58       	subi	r27, 0x80	; 128
     664:	82 83       	std	Z+2, r24	; 0x02
     666:	93 83       	std	Z+3, r25	; 0x03
     668:	a4 83       	std	Z+4, r26	; 0x04
     66a:	b5 83       	std	Z+5, r27	; 0x05
		}
	}
	
	// get the longitude
	msgPart = strsep(&packetCopy, ",");
     66c:	69 e4       	ldi	r22, 0x49	; 73
     66e:	71 e0       	ldi	r23, 0x01	; 1
     670:	ce 01       	movw	r24, r28
     672:	01 96       	adiw	r24, 0x01	; 1
     674:	ea d5       	rcall	.+3028   	; 0x124a <strsep>
	// Debug to see what it thinks the longitude is
	
	if (msgPart[i]){
     676:	2b 81       	ldd	r18, Y+3	; 0x03
     678:	fc 01       	movw	r30, r24
     67a:	e2 0f       	add	r30, r18
     67c:	f1 1d       	adc	r31, r1
     67e:	20 81       	ld	r18, Z
     680:	22 23       	and	r18, r18
     682:	49 f0       	breq	.+18     	; 0x696 <parseGGA+0xda>
		GPSdata->longitude = parseDegreesMinutes(msgPart, 3);
     684:	63 e0       	ldi	r22, 0x03	; 3
     686:	70 e0       	ldi	r23, 0x00	; 0
     688:	39 df       	rcall	.-398    	; 0x4fc <parseDegreesMinutes>
     68a:	f7 01       	movw	r30, r14
     68c:	66 83       	std	Z+6, r22	; 0x06
     68e:	77 83       	std	Z+7, r23	; 0x07
     690:	80 87       	std	Z+8, r24	; 0x08
     692:	91 87       	std	Z+9, r25	; 0x09
     694:	05 c0       	rjmp	.+10     	; 0x6a0 <parseGGA+0xe4>
	} else {
		GPSdata->longitude = 0;
     696:	f7 01       	movw	r30, r14
     698:	16 82       	std	Z+6, r1	; 0x06
     69a:	17 82       	std	Z+7, r1	; 0x07
     69c:	10 86       	std	Z+8, r1	; 0x08
     69e:	11 86       	std	Z+9, r1	; 0x09
	}
	// get the E/W component of the longitude. If it's 'W', then make the longitude negative
	msgPart = strsep(&packetCopy, ",");
     6a0:	69 e4       	ldi	r22, 0x49	; 73
     6a2:	71 e0       	ldi	r23, 0x01	; 1
     6a4:	ce 01       	movw	r24, r28
     6a6:	01 96       	adiw	r24, 0x01	; 1
     6a8:	d0 d5       	rcall	.+2976   	; 0x124a <strsep>
	if (msgPart[i]){
     6aa:	2b 81       	ldd	r18, Y+3	; 0x03
     6ac:	fc 01       	movw	r30, r24
     6ae:	e2 0f       	add	r30, r18
     6b0:	f1 1d       	adc	r31, r1
     6b2:	20 81       	ld	r18, Z
     6b4:	22 23       	and	r18, r18
     6b6:	71 f0       	breq	.+28     	; 0x6d4 <parseGGA+0x118>
		if(*msgPart == 'W') {
     6b8:	fc 01       	movw	r30, r24
     6ba:	80 81       	ld	r24, Z
     6bc:	87 35       	cpi	r24, 0x57	; 87
     6be:	51 f4       	brne	.+20     	; 0x6d4 <parseGGA+0x118>
			GPSdata->longitude = -GPSdata->longitude;
     6c0:	f7 01       	movw	r30, r14
     6c2:	86 81       	ldd	r24, Z+6	; 0x06
     6c4:	97 81       	ldd	r25, Z+7	; 0x07
     6c6:	a0 85       	ldd	r26, Z+8	; 0x08
     6c8:	b1 85       	ldd	r27, Z+9	; 0x09
     6ca:	b0 58       	subi	r27, 0x80	; 128
     6cc:	86 83       	std	Z+6, r24	; 0x06
     6ce:	97 83       	std	Z+7, r25	; 0x07
     6d0:	a0 87       	std	Z+8, r26	; 0x08
     6d2:	b1 87       	std	Z+9, r27	; 0x09
		}
	}
	
	// Skip the quality, numSV, and HDOP fields
	for(i = 0; i < 3; i++) {
     6d4:	1b 82       	std	Y+3, r1	; 0x03
     6d6:	8b 81       	ldd	r24, Y+3	; 0x03
     6d8:	83 30       	cpi	r24, 0x03	; 3
     6da:	58 f4       	brcc	.+22     	; 0x6f2 <parseGGA+0x136>
		strsep(&packetCopy, ",");
     6dc:	69 e4       	ldi	r22, 0x49	; 73
     6de:	71 e0       	ldi	r23, 0x01	; 1
     6e0:	ce 01       	movw	r24, r28
     6e2:	01 96       	adiw	r24, 0x01	; 1
     6e4:	b2 d5       	rcall	.+2916   	; 0x124a <strsep>
			GPSdata->longitude = -GPSdata->longitude;
		}
	}
	
	// Skip the quality, numSV, and HDOP fields
	for(i = 0; i < 3; i++) {
     6e6:	9b 81       	ldd	r25, Y+3	; 0x03
     6e8:	9f 5f       	subi	r25, 0xFF	; 255
     6ea:	9b 83       	std	Y+3, r25	; 0x03
     6ec:	9b 81       	ldd	r25, Y+3	; 0x03
     6ee:	93 30       	cpi	r25, 0x03	; 3
     6f0:	a8 f3       	brcs	.-22     	; 0x6dc <parseGGA+0x120>
		strsep(&packetCopy, ",");
	}
	
	// Get the altitude. If there is no altitude, then set it to zero.
	msgPart = strsep(&packetCopy, ",");
     6f2:	69 e4       	ldi	r22, 0x49	; 73
     6f4:	71 e0       	ldi	r23, 0x01	; 1
     6f6:	ce 01       	movw	r24, r28
     6f8:	01 96       	adiw	r24, 0x01	; 1
     6fa:	a7 d5       	rcall	.+2894   	; 0x124a <strsep>
	if(*msgPart != '\0') {
     6fc:	fc 01       	movw	r30, r24
     6fe:	20 81       	ld	r18, Z
     700:	22 23       	and	r18, r18
     702:	31 f0       	breq	.+12     	; 0x710 <parseGGA+0x154>
		GPSdata->GPSAltitude = atof(msgPart);
     704:	71 d5       	rcall	.+2786   	; 0x11e8 <atof>
     706:	8b d2       	rcall	.+1302   	; 0xc1e <__fixunssfsi>
     708:	f7 01       	movw	r30, r14
     70a:	71 83       	std	Z+1, r23	; 0x01
     70c:	60 83       	st	Z, r22
     70e:	03 c0       	rjmp	.+6      	; 0x716 <parseGGA+0x15a>
	} else {
		GPSdata->GPSAltitude = 0;
     710:	f7 01       	movw	r30, r14
     712:	11 82       	std	Z+1, r1	; 0x01
     714:	10 82       	st	Z, r1
	}
	
	free(originalPacketCopy);
     716:	c8 01       	movw	r24, r16
     718:	7a d4       	rcall	.+2292   	; 0x100e <free>
		
}
     71a:	0f 90       	pop	r0
     71c:	0f 90       	pop	r0
     71e:	0f 90       	pop	r0
     720:	df 91       	pop	r29
     722:	cf 91       	pop	r28
     724:	1f 91       	pop	r17
     726:	0f 91       	pop	r16
     728:	ff 90       	pop	r15
     72a:	ef 90       	pop	r14
     72c:	df 90       	pop	r13
     72e:	cf 90       	pop	r12
     730:	08 95       	ret

00000732 <getGPSData>:
// Once message end flag is set, puts data in the GPS struct and resets end flag
// Parameters:
//		GPSdata:	Struct that accepts data
//	Returns:
//		Nothing
void getGPSData(struct GPSStruct *GPSdata){
     732:	4f 92       	push	r4
     734:	5f 92       	push	r5
     736:	6f 92       	push	r6
     738:	7f 92       	push	r7
     73a:	8f 92       	push	r8
     73c:	9f 92       	push	r9
     73e:	af 92       	push	r10
     740:	bf 92       	push	r11
     742:	cf 92       	push	r12
     744:	df 92       	push	r13
     746:	ef 92       	push	r14
     748:	ff 92       	push	r15
     74a:	0f 93       	push	r16
     74c:	1f 93       	push	r17
     74e:	cf 93       	push	r28
     750:	df 93       	push	r29
     752:	cd b7       	in	r28, 0x3d	; 61
     754:	de b7       	in	r29, 0x3e	; 62
     756:	c2 51       	subi	r28, 0x12	; 18
     758:	d1 40       	sbci	r29, 0x01	; 1
     75a:	0f b6       	in	r0, 0x3f	; 63
     75c:	f8 94       	cli
     75e:	de bf       	out	0x3e, r29	; 62
     760:	0f be       	out	0x3f, r0	; 63
     762:	cd bf       	out	0x3d, r28	; 61
     764:	8c 01       	movw	r16, r24
	#ifdef DOUNITTEST
	uint8_t volatile echoLength = 0;
     766:	19 82       	std	Y+1, r1	; 0x01
	uint8_t volatile echoIndex = 0;
     768:	1a 82       	std	Y+2, r1	; 0x02
	int32_t volatile latConvert = 0; 
     76a:	1b 82       	std	Y+3, r1	; 0x03
     76c:	1c 82       	std	Y+4, r1	; 0x04
     76e:	1d 82       	std	Y+5, r1	; 0x05
     770:	1e 82       	std	Y+6, r1	; 0x06
	int32_t volatile longConvert = 0;
     772:	1f 82       	std	Y+7, r1	; 0x07
     774:	18 86       	std	Y+8, r1	; 0x08
     776:	19 86       	std	Y+9, r1	; 0x09
     778:	1a 86       	std	Y+10, r1	; 0x0a
	char echoLatLongAlt[256];
	#endif
	if (msgEndFlag){
     77a:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <msgEndFlag>
     77e:	99 23       	and	r25, r25
     780:	09 f4       	brne	.+2      	; 0x784 <getGPSData+0x52>
     782:	bd c0       	rjmp	.+378    	; 0x8fe <getGPSData+0x1cc>
		parseGGA(gpsBuffer, GPSdata);
     784:	b8 01       	movw	r22, r16
     786:	86 e6       	ldi	r24, 0x66	; 102
     788:	91 e0       	ldi	r25, 0x01	; 1
     78a:	18 df       	rcall	.-464    	; 0x5bc <parseGGA>
		msgEndFlag = 0;
     78c:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <msgEndFlag>
		#ifdef DOUNITTEST
		PORTB &= ~(1 << 3);
     790:	c3 98       	cbi	0x18, 3	; 24
		latConvert = (int32_t)GPSdata->latitude;
     792:	d8 01       	movw	r26, r16
     794:	12 96       	adiw	r26, 0x02	; 2
     796:	4d 90       	ld	r4, X+
     798:	5d 90       	ld	r5, X+
     79a:	6d 90       	ld	r6, X+
     79c:	7c 90       	ld	r7, X
     79e:	15 97       	sbiw	r26, 0x05	; 5
     7a0:	c5 5f       	subi	r28, 0xF5	; 245
     7a2:	de 4f       	sbci	r29, 0xFE	; 254
     7a4:	48 82       	st	Y, r4
     7a6:	59 82       	std	Y+1, r5	; 0x01
     7a8:	6a 82       	std	Y+2, r6	; 0x02
     7aa:	7b 82       	std	Y+3, r7	; 0x03
     7ac:	cb 50       	subi	r28, 0x0B	; 11
     7ae:	d1 40       	sbci	r29, 0x01	; 1
     7b0:	c3 01       	movw	r24, r6
     7b2:	b2 01       	movw	r22, r4
     7b4:	2f d2       	rcall	.+1118   	; 0xc14 <__fixsfsi>
     7b6:	6b 83       	std	Y+3, r22	; 0x03
     7b8:	7c 83       	std	Y+4, r23	; 0x04
     7ba:	8d 83       	std	Y+5, r24	; 0x05
     7bc:	9e 83       	std	Y+6, r25	; 0x06
		longConvert = (int32_t)GPSdata->longitude;
     7be:	f8 01       	movw	r30, r16
     7c0:	86 80       	ldd	r8, Z+6	; 0x06
     7c2:	97 80       	ldd	r9, Z+7	; 0x07
     7c4:	a0 84       	ldd	r10, Z+8	; 0x08
     7c6:	b1 84       	ldd	r11, Z+9	; 0x09
     7c8:	c5 01       	movw	r24, r10
     7ca:	b4 01       	movw	r22, r8
     7cc:	23 d2       	rcall	.+1094   	; 0xc14 <__fixsfsi>
     7ce:	6f 83       	std	Y+7, r22	; 0x07
     7d0:	78 87       	std	Y+8, r23	; 0x08
     7d2:	89 87       	std	Y+9, r24	; 0x09
     7d4:	9a 87       	std	Y+10, r25	; 0x0a
		echoLength = sprintf(echoLatLongAlt, "%ld.%ld %ld.%ld %u %u*", latConvert, labs((int32_t)((GPSdata->latitude - latConvert)*10000)), longConvert, labs((int32_t)((GPSdata->longitude - longConvert)*10000)), GPSdata->GPSAltitude, commaCount);
     7d6:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
     7da:	6f 81       	ldd	r22, Y+7	; 0x07
     7dc:	78 85       	ldd	r23, Y+8	; 0x08
     7de:	89 85       	ldd	r24, Y+9	; 0x09
     7e0:	9a 85       	ldd	r25, Y+10	; 0x0a
     7e2:	cf 80       	ldd	r12, Y+7	; 0x07
     7e4:	d8 84       	ldd	r13, Y+8	; 0x08
     7e6:	e9 84       	ldd	r14, Y+9	; 0x09
     7e8:	fa 84       	ldd	r15, Y+10	; 0x0a
     7ea:	4b 80       	ldd	r4, Y+3	; 0x03
     7ec:	5c 80       	ldd	r5, Y+4	; 0x04
     7ee:	6d 80       	ldd	r6, Y+5	; 0x05
     7f0:	7e 80       	ldd	r7, Y+6	; 0x06
     7f2:	c1 5f       	subi	r28, 0xF1	; 241
     7f4:	de 4f       	sbci	r29, 0xFE	; 254
     7f6:	48 82       	st	Y, r4
     7f8:	59 82       	std	Y+1, r5	; 0x01
     7fa:	6a 82       	std	Y+2, r6	; 0x02
     7fc:	7b 82       	std	Y+3, r7	; 0x03
     7fe:	cf 50       	subi	r28, 0x0F	; 15
     800:	d1 40       	sbci	r29, 0x01	; 1
     802:	4b 80       	ldd	r4, Y+3	; 0x03
     804:	5c 80       	ldd	r5, Y+4	; 0x04
     806:	6d 80       	ldd	r6, Y+5	; 0x05
     808:	7e 80       	ldd	r7, Y+6	; 0x06
     80a:	1f 92       	push	r1
     80c:	2f 93       	push	r18
     80e:	d8 01       	movw	r26, r16
     810:	11 96       	adiw	r26, 0x01	; 1
     812:	2c 91       	ld	r18, X
     814:	11 97       	sbiw	r26, 0x01	; 1
     816:	2f 93       	push	r18
     818:	2c 91       	ld	r18, X
     81a:	2f 93       	push	r18
     81c:	2e d2       	rcall	.+1116   	; 0xc7a <__floatsisf>
     81e:	9b 01       	movw	r18, r22
     820:	ac 01       	movw	r20, r24
     822:	c5 01       	movw	r24, r10
     824:	b4 01       	movw	r22, r8
     826:	29 d1       	rcall	.+594    	; 0xa7a <__subsf3>
     828:	20 e0       	ldi	r18, 0x00	; 0
     82a:	30 e4       	ldi	r19, 0x40	; 64
     82c:	4c e1       	ldi	r20, 0x1C	; 28
     82e:	56 e4       	ldi	r21, 0x46	; 70
     830:	b0 d2       	rcall	.+1376   	; 0xd92 <__mulsf3>
     832:	f0 d1       	rcall	.+992    	; 0xc14 <__fixsfsi>
     834:	99 23       	and	r25, r25
     836:	3c f4       	brge	.+14     	; 0x846 <getGPSData+0x114>
     838:	90 95       	com	r25
     83a:	80 95       	com	r24
     83c:	70 95       	com	r23
     83e:	61 95       	neg	r22
     840:	7f 4f       	sbci	r23, 0xFF	; 255
     842:	8f 4f       	sbci	r24, 0xFF	; 255
     844:	9f 4f       	sbci	r25, 0xFF	; 255
     846:	9f 93       	push	r25
     848:	8f 93       	push	r24
     84a:	7f 93       	push	r23
     84c:	6f 93       	push	r22
     84e:	ff 92       	push	r15
     850:	ef 92       	push	r14
     852:	df 92       	push	r13
     854:	cf 92       	push	r12
     856:	c1 5f       	subi	r28, 0xF1	; 241
     858:	de 4f       	sbci	r29, 0xFE	; 254
     85a:	68 81       	ld	r22, Y
     85c:	79 81       	ldd	r23, Y+1	; 0x01
     85e:	8a 81       	ldd	r24, Y+2	; 0x02
     860:	9b 81       	ldd	r25, Y+3	; 0x03
     862:	cf 50       	subi	r28, 0x0F	; 15
     864:	d1 40       	sbci	r29, 0x01	; 1
     866:	09 d2       	rcall	.+1042   	; 0xc7a <__floatsisf>
     868:	9b 01       	movw	r18, r22
     86a:	ac 01       	movw	r20, r24
     86c:	c5 5f       	subi	r28, 0xF5	; 245
     86e:	de 4f       	sbci	r29, 0xFE	; 254
     870:	68 81       	ld	r22, Y
     872:	79 81       	ldd	r23, Y+1	; 0x01
     874:	8a 81       	ldd	r24, Y+2	; 0x02
     876:	9b 81       	ldd	r25, Y+3	; 0x03
     878:	cb 50       	subi	r28, 0x0B	; 11
     87a:	d1 40       	sbci	r29, 0x01	; 1
     87c:	fe d0       	rcall	.+508    	; 0xa7a <__subsf3>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e4       	ldi	r19, 0x40	; 64
     882:	4c e1       	ldi	r20, 0x1C	; 28
     884:	56 e4       	ldi	r21, 0x46	; 70
     886:	85 d2       	rcall	.+1290   	; 0xd92 <__mulsf3>
     888:	c5 d1       	rcall	.+906    	; 0xc14 <__fixsfsi>
     88a:	99 23       	and	r25, r25
     88c:	3c f4       	brge	.+14     	; 0x89c <getGPSData+0x16a>
     88e:	90 95       	com	r25
     890:	80 95       	com	r24
     892:	70 95       	com	r23
     894:	61 95       	neg	r22
     896:	7f 4f       	sbci	r23, 0xFF	; 255
     898:	8f 4f       	sbci	r24, 0xFF	; 255
     89a:	9f 4f       	sbci	r25, 0xFF	; 255
     89c:	9f 93       	push	r25
     89e:	8f 93       	push	r24
     8a0:	7f 93       	push	r23
     8a2:	6f 93       	push	r22
     8a4:	7f 92       	push	r7
     8a6:	6f 92       	push	r6
     8a8:	5f 92       	push	r5
     8aa:	4f 92       	push	r4
     8ac:	8b e4       	ldi	r24, 0x4B	; 75
     8ae:	91 e0       	ldi	r25, 0x01	; 1
     8b0:	9f 93       	push	r25
     8b2:	8f 93       	push	r24
     8b4:	ce 01       	movw	r24, r28
     8b6:	0b 96       	adiw	r24, 0x0b	; 11
     8b8:	9f 93       	push	r25
     8ba:	8f 93       	push	r24
     8bc:	de d4       	rcall	.+2492   	; 0x127a <sprintf>
     8be:	89 83       	std	Y+1, r24	; 0x01
		for (echoIndex; echoIndex < echoLength; echoIndex++){
     8c0:	8a 81       	ldd	r24, Y+2	; 0x02
     8c2:	9a 81       	ldd	r25, Y+2	; 0x02
     8c4:	89 81       	ldd	r24, Y+1	; 0x01
     8c6:	0f b6       	in	r0, 0x3f	; 63
     8c8:	f8 94       	cli
     8ca:	de bf       	out	0x3e, r29	; 62
     8cc:	0f be       	out	0x3f, r0	; 63
     8ce:	cd bf       	out	0x3d, r28	; 61
     8d0:	98 17       	cp	r25, r24
     8d2:	88 f4       	brcc	.+34     	; 0x8f6 <getGPSData+0x1c4>
			USARTTX(echoLatLongAlt[echoIndex], GPSPORT);
     8d4:	8a 81       	ldd	r24, Y+2	; 0x02
     8d6:	eb e0       	ldi	r30, 0x0B	; 11
     8d8:	f0 e0       	ldi	r31, 0x00	; 0
     8da:	ec 0f       	add	r30, r28
     8dc:	fd 1f       	adc	r31, r29
     8de:	e8 0f       	add	r30, r24
     8e0:	f1 1d       	adc	r31, r1
     8e2:	60 e0       	ldi	r22, 0x00	; 0
     8e4:	80 81       	ld	r24, Z
     8e6:	bb d0       	rcall	.+374    	; 0xa5e <USARTTX>
		#ifdef DOUNITTEST
		PORTB &= ~(1 << 3);
		latConvert = (int32_t)GPSdata->latitude;
		longConvert = (int32_t)GPSdata->longitude;
		echoLength = sprintf(echoLatLongAlt, "%ld.%ld %ld.%ld %u %u*", latConvert, labs((int32_t)((GPSdata->latitude - latConvert)*10000)), longConvert, labs((int32_t)((GPSdata->longitude - longConvert)*10000)), GPSdata->GPSAltitude, commaCount);
		for (echoIndex; echoIndex < echoLength; echoIndex++){
     8e8:	8a 81       	ldd	r24, Y+2	; 0x02
     8ea:	8f 5f       	subi	r24, 0xFF	; 255
     8ec:	8a 83       	std	Y+2, r24	; 0x02
     8ee:	9a 81       	ldd	r25, Y+2	; 0x02
     8f0:	89 81       	ldd	r24, Y+1	; 0x01
     8f2:	98 17       	cp	r25, r24
     8f4:	78 f3       	brcs	.-34     	; 0x8d4 <getGPSData+0x1a2>
			USARTTX(echoLatLongAlt[echoIndex], GPSPORT);
		}
		USARTTX('\n', GPSPORT);
     8f6:	60 e0       	ldi	r22, 0x00	; 0
     8f8:	8a e0       	ldi	r24, 0x0A	; 10
     8fa:	b1 d0       	rcall	.+354    	; 0xa5e <USARTTX>
		#endif
		sei();
     8fc:	78 94       	sei
	}
	return;
}
     8fe:	ce 5e       	subi	r28, 0xEE	; 238
     900:	de 4f       	sbci	r29, 0xFE	; 254
     902:	0f b6       	in	r0, 0x3f	; 63
     904:	f8 94       	cli
     906:	de bf       	out	0x3e, r29	; 62
     908:	0f be       	out	0x3f, r0	; 63
     90a:	cd bf       	out	0x3d, r28	; 61
     90c:	df 91       	pop	r29
     90e:	cf 91       	pop	r28
     910:	1f 91       	pop	r17
     912:	0f 91       	pop	r16
     914:	ff 90       	pop	r15
     916:	ef 90       	pop	r14
     918:	df 90       	pop	r13
     91a:	cf 90       	pop	r12
     91c:	bf 90       	pop	r11
     91e:	af 90       	pop	r10
     920:	9f 90       	pop	r9
     922:	8f 90       	pop	r8
     924:	7f 90       	pop	r7
     926:	6f 90       	pop	r6
     928:	5f 90       	pop	r5
     92a:	4f 90       	pop	r4
     92c:	08 95       	ret

0000092e <testGPSInterrupt>:
}

// This function should test the GPS interrupt and parsing ability.
// GPS packets should be sent from laptop over FTDI to the board
// and an evident signal should be sent back if the test passed.
void testGPSInterrupt(void){
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	cd b7       	in	r28, 0x3d	; 61
     934:	de b7       	in	r29, 0x3e	; 62
     936:	2a 97       	sbiw	r28, 0x0a	; 10
     938:	0f b6       	in	r0, 0x3f	; 63
     93a:	f8 94       	cli
     93c:	de bf       	out	0x3e, r29	; 62
     93e:	0f be       	out	0x3f, r0	; 63
     940:	cd bf       	out	0x3d, r28	; 61
	struct GPSStruct gpsData;
	gpsData.GPSAltitude = 0;
     942:	1a 82       	std	Y+2, r1	; 0x02
     944:	19 82       	std	Y+1, r1	; 0x01
	gpsData.latitude = 0;
     946:	1b 82       	std	Y+3, r1	; 0x03
     948:	1c 82       	std	Y+4, r1	; 0x04
     94a:	1d 82       	std	Y+5, r1	; 0x05
     94c:	1e 82       	std	Y+6, r1	; 0x06
	gpsData.longitude = 0;
     94e:	1f 82       	std	Y+7, r1	; 0x07
     950:	18 86       	std	Y+8, r1	; 0x08
     952:	19 86       	std	Y+9, r1	; 0x09
     954:	1a 86       	std	Y+10, r1	; 0x0a
	DDRB = 255;
     956:	8f ef       	ldi	r24, 0xFF	; 255
     958:	87 bb       	out	0x17, r24	; 23
	PORTB = 255;
     95a:	88 bb       	out	0x18, r24	; 24
     95c:	2f ef       	ldi	r18, 0xFF	; 255
     95e:	89 e6       	ldi	r24, 0x69	; 105
     960:	98 e1       	ldi	r25, 0x18	; 24
     962:	21 50       	subi	r18, 0x01	; 1
     964:	80 40       	sbci	r24, 0x00	; 0
     966:	90 40       	sbci	r25, 0x00	; 0
     968:	e1 f7       	brne	.-8      	; 0x962 <testGPSInterrupt+0x34>
     96a:	00 c0       	rjmp	.+0      	; 0x96c <testGPSInterrupt+0x3e>
     96c:	00 00       	nop
	_delay_ms(500);
	PORTB = 0;
     96e:	18 ba       	out	0x18, r1	; 24
	InitGPS();
     970:	39 dd       	rcall	.-1422   	; 0x3e4 <InitGPS>
	while (1){
		getGPSData(&gpsData);
     972:	ce 01       	movw	r24, r28
     974:	01 96       	adiw	r24, 0x01	; 1
     976:	dd de       	rcall	.-582    	; 0x732 <getGPSData>
	}
     978:	fc cf       	rjmp	.-8      	; 0x972 <testGPSInterrupt+0x44>

0000097a <beginUnitTest>:
}

void beginUnitTest() {
	srand(time(NULL));
     97a:	80 e0       	ldi	r24, 0x00	; 0
     97c:	90 e0       	ldi	r25, 0x00	; 0
     97e:	c3 db       	rcall	.-2170   	; 0x106 <time>
     980:	cb 01       	movw	r24, r22
     982:	27 d4       	rcall	.+2126   	; 0x11d2 <srand>
	testGPSInterrupt();
     984:	d4 df       	rcall	.-88     	; 0x92e <testGPSInterrupt>

00000986 <SetBR>:
#include "USARTComm.h"

uint16_t SetBR(uint32_t baud, uint8_t port){
     986:	1f 93       	push	r17
     988:	cf 93       	push	r28
     98a:	df 93       	push	r29
     98c:	00 d0       	rcall	.+0      	; 0x98e <SetBR+0x8>
     98e:	cd b7       	in	r28, 0x3d	; 61
     990:	de b7       	in	r29, 0x3e	; 62
     992:	14 2f       	mov	r17, r20
	uint16_t volatile SetUBRR;
	SetUBRR = (F_CPU/(16*baud) - 1);
     994:	dc 01       	movw	r26, r24
     996:	cb 01       	movw	r24, r22
     998:	88 0f       	add	r24, r24
     99a:	99 1f       	adc	r25, r25
     99c:	aa 1f       	adc	r26, r26
     99e:	bb 1f       	adc	r27, r27
     9a0:	88 0f       	add	r24, r24
     9a2:	99 1f       	adc	r25, r25
     9a4:	aa 1f       	adc	r26, r26
     9a6:	bb 1f       	adc	r27, r27
     9a8:	9c 01       	movw	r18, r24
     9aa:	ad 01       	movw	r20, r26
     9ac:	22 0f       	add	r18, r18
     9ae:	33 1f       	adc	r19, r19
     9b0:	44 1f       	adc	r20, r20
     9b2:	55 1f       	adc	r21, r21
     9b4:	22 0f       	add	r18, r18
     9b6:	33 1f       	adc	r19, r19
     9b8:	44 1f       	adc	r20, r20
     9ba:	55 1f       	adc	r21, r21
     9bc:	60 e0       	ldi	r22, 0x00	; 0
     9be:	74 e2       	ldi	r23, 0x24	; 36
     9c0:	84 ef       	ldi	r24, 0xF4	; 244
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	6d d2       	rcall	.+1242   	; 0xea0 <__udivmodsi4>
     9c6:	21 50       	subi	r18, 0x01	; 1
     9c8:	31 09       	sbc	r19, r1
     9ca:	3a 83       	std	Y+2, r19	; 0x02
     9cc:	29 83       	std	Y+1, r18	; 0x01
	if (SetUBRR > 4095 || !SetUBRR){
     9ce:	89 81       	ldd	r24, Y+1	; 0x01
     9d0:	9a 81       	ldd	r25, Y+2	; 0x02
     9d2:	81 15       	cp	r24, r1
     9d4:	90 41       	sbci	r25, 0x10	; 16
     9d6:	d8 f4       	brcc	.+54     	; 0xa0e <SetBR+0x88>
     9d8:	89 81       	ldd	r24, Y+1	; 0x01
     9da:	9a 81       	ldd	r25, Y+2	; 0x02
     9dc:	00 97       	sbiw	r24, 0x00	; 0
     9de:	c9 f0       	breq	.+50     	; 0xa12 <SetBR+0x8c>
		return 0;
	} else {
		if (port){
     9e0:	11 23       	and	r17, r17
     9e2:	59 f0       	breq	.+22     	; 0x9fa <SetBR+0x74>
			UBRR1H = SetUBRR >> 8;
     9e4:	89 81       	ldd	r24, Y+1	; 0x01
     9e6:	9a 81       	ldd	r25, Y+2	; 0x02
     9e8:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
			UBRR1L = SetUBRR;
     9ec:	89 81       	ldd	r24, Y+1	; 0x01
     9ee:	9a 81       	ldd	r25, Y+2	; 0x02
     9f0:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
			return SetUBRR;
     9f4:	89 81       	ldd	r24, Y+1	; 0x01
     9f6:	9a 81       	ldd	r25, Y+2	; 0x02
     9f8:	0c c0       	rjmp	.+24     	; 0xa12 <SetBR+0x8c>
		} else {
			UBRR0H = SetUBRR >> 8;
     9fa:	89 81       	ldd	r24, Y+1	; 0x01
     9fc:	9a 81       	ldd	r25, Y+2	; 0x02
     9fe:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
			UBRR0L = SetUBRR;
     a02:	89 81       	ldd	r24, Y+1	; 0x01
     a04:	9a 81       	ldd	r25, Y+2	; 0x02
     a06:	89 b9       	out	0x09, r24	; 9
			return SetUBRR;
     a08:	89 81       	ldd	r24, Y+1	; 0x01
     a0a:	9a 81       	ldd	r25, Y+2	; 0x02
     a0c:	02 c0       	rjmp	.+4      	; 0xa12 <SetBR+0x8c>

uint16_t SetBR(uint32_t baud, uint8_t port){
	uint16_t volatile SetUBRR;
	SetUBRR = (F_CPU/(16*baud) - 1);
	if (SetUBRR > 4095 || !SetUBRR){
		return 0;
     a0e:	80 e0       	ldi	r24, 0x00	; 0
     a10:	90 e0       	ldi	r25, 0x00	; 0
			UBRR0H = SetUBRR >> 8;
			UBRR0L = SetUBRR;
			return SetUBRR;
		}
	}
}
     a12:	0f 90       	pop	r0
     a14:	0f 90       	pop	r0
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	1f 91       	pop	r17
     a1c:	08 95       	ret

00000a1e <InitUSART>:

uint16_t InitUSART(uint32_t baud, uint8_t port){
     a1e:	1f 93       	push	r17
     a20:	cf 93       	push	r28
     a22:	df 93       	push	r29
     a24:	00 d0       	rcall	.+0      	; 0xa26 <InitUSART+0x8>
     a26:	cd b7       	in	r28, 0x3d	; 61
     a28:	de b7       	in	r29, 0x3e	; 62
     a2a:	14 2f       	mov	r17, r20
	uint16_t volatile SetUBRR;
	SetUBRR = SetBR(baud, port);
     a2c:	ac df       	rcall	.-168    	; 0x986 <SetBR>
     a2e:	9a 83       	std	Y+2, r25	; 0x02
     a30:	89 83       	std	Y+1, r24	; 0x01
	if (SetUBRR){
     a32:	89 81       	ldd	r24, Y+1	; 0x01
     a34:	9a 81       	ldd	r25, Y+2	; 0x02
     a36:	00 97       	sbiw	r24, 0x00	; 0
     a38:	61 f0       	breq	.+24     	; 0xa52 <InitUSART+0x34>
		if (port){
     a3a:	11 23       	and	r17, r17
     a3c:	31 f0       	breq	.+12     	; 0xa4a <InitUSART+0x2c>
			UCSR1B = (1 << RXEN1)|(1 << TXEN1);
     a3e:	88 e1       	ldi	r24, 0x18	; 24
     a40:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
			return SetUBRR;
     a44:	89 81       	ldd	r24, Y+1	; 0x01
     a46:	9a 81       	ldd	r25, Y+2	; 0x02
     a48:	04 c0       	rjmp	.+8      	; 0xa52 <InitUSART+0x34>
		} else {
			UCSR0B = (1 << RXEN0)|(1 << TXEN0)|(1 << RXCIE0);
     a4a:	88 e9       	ldi	r24, 0x98	; 152
     a4c:	8a b9       	out	0x0a, r24	; 10
			return SetUBRR;
     a4e:	89 81       	ldd	r24, Y+1	; 0x01
     a50:	9a 81       	ldd	r25, Y+2	; 0x02
		}
	} else {
		return 0;
	}
}
     a52:	0f 90       	pop	r0
     a54:	0f 90       	pop	r0
     a56:	df 91       	pop	r29
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	08 95       	ret

00000a5e <USARTTX>:

void USARTTX(uint8_t TXval, uint8_t port){
	if (port){	
     a5e:	66 23       	and	r22, r22
     a60:	41 f0       	breq	.+16     	; 0xa72 <USARTTX+0x14>
		while(!(UCSR1A & (1 << UDRE1))){}
     a62:	eb e9       	ldi	r30, 0x9B	; 155
     a64:	f0 e0       	ldi	r31, 0x00	; 0
     a66:	90 81       	ld	r25, Z
     a68:	95 ff       	sbrs	r25, 5
     a6a:	fd cf       	rjmp	.-6      	; 0xa66 <USARTTX+0x8>
		UDR1 = TXval;
     a6c:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     a70:	08 95       	ret
	} else {
		while(!(UCSR0A & (1 << UDRE0))){}
     a72:	5d 9b       	sbis	0x0b, 5	; 11
     a74:	fe cf       	rjmp	.-4      	; 0xa72 <USARTTX+0x14>
		UDR0 = TXval;
     a76:	8c b9       	out	0x0c, r24	; 12
     a78:	08 95       	ret

00000a7a <__subsf3>:
     a7a:	50 58       	subi	r21, 0x80	; 128

00000a7c <__addsf3>:
     a7c:	bb 27       	eor	r27, r27
     a7e:	aa 27       	eor	r26, r26
     a80:	0e d0       	rcall	.+28     	; 0xa9e <__addsf3x>
     a82:	4d c1       	rjmp	.+666    	; 0xd1e <__fp_round>
     a84:	3e d1       	rcall	.+636    	; 0xd02 <__fp_pscA>
     a86:	30 f0       	brcs	.+12     	; 0xa94 <__addsf3+0x18>
     a88:	43 d1       	rcall	.+646    	; 0xd10 <__fp_pscB>
     a8a:	20 f0       	brcs	.+8      	; 0xa94 <__addsf3+0x18>
     a8c:	31 f4       	brne	.+12     	; 0xa9a <__addsf3+0x1e>
     a8e:	9f 3f       	cpi	r25, 0xFF	; 255
     a90:	11 f4       	brne	.+4      	; 0xa96 <__addsf3+0x1a>
     a92:	1e f4       	brtc	.+6      	; 0xa9a <__addsf3+0x1e>
     a94:	33 c1       	rjmp	.+614    	; 0xcfc <__fp_nan>
     a96:	0e f4       	brtc	.+2      	; 0xa9a <__addsf3+0x1e>
     a98:	e0 95       	com	r30
     a9a:	e7 fb       	bst	r30, 7
     a9c:	29 c1       	rjmp	.+594    	; 0xcf0 <__fp_inf>

00000a9e <__addsf3x>:
     a9e:	e9 2f       	mov	r30, r25
     aa0:	4f d1       	rcall	.+670    	; 0xd40 <__fp_split3>
     aa2:	80 f3       	brcs	.-32     	; 0xa84 <__addsf3+0x8>
     aa4:	ba 17       	cp	r27, r26
     aa6:	62 07       	cpc	r22, r18
     aa8:	73 07       	cpc	r23, r19
     aaa:	84 07       	cpc	r24, r20
     aac:	95 07       	cpc	r25, r21
     aae:	18 f0       	brcs	.+6      	; 0xab6 <__addsf3x+0x18>
     ab0:	71 f4       	brne	.+28     	; 0xace <__addsf3x+0x30>
     ab2:	9e f5       	brtc	.+102    	; 0xb1a <__addsf3x+0x7c>
     ab4:	67 c1       	rjmp	.+718    	; 0xd84 <__fp_zero>
     ab6:	0e f4       	brtc	.+2      	; 0xaba <__addsf3x+0x1c>
     ab8:	e0 95       	com	r30
     aba:	0b 2e       	mov	r0, r27
     abc:	ba 2f       	mov	r27, r26
     abe:	a0 2d       	mov	r26, r0
     ac0:	0b 01       	movw	r0, r22
     ac2:	b9 01       	movw	r22, r18
     ac4:	90 01       	movw	r18, r0
     ac6:	0c 01       	movw	r0, r24
     ac8:	ca 01       	movw	r24, r20
     aca:	a0 01       	movw	r20, r0
     acc:	11 24       	eor	r1, r1
     ace:	ff 27       	eor	r31, r31
     ad0:	59 1b       	sub	r21, r25
     ad2:	99 f0       	breq	.+38     	; 0xafa <__addsf3x+0x5c>
     ad4:	59 3f       	cpi	r21, 0xF9	; 249
     ad6:	50 f4       	brcc	.+20     	; 0xaec <__addsf3x+0x4e>
     ad8:	50 3e       	cpi	r21, 0xE0	; 224
     ada:	68 f1       	brcs	.+90     	; 0xb36 <__addsf3x+0x98>
     adc:	1a 16       	cp	r1, r26
     ade:	f0 40       	sbci	r31, 0x00	; 0
     ae0:	a2 2f       	mov	r26, r18
     ae2:	23 2f       	mov	r18, r19
     ae4:	34 2f       	mov	r19, r20
     ae6:	44 27       	eor	r20, r20
     ae8:	58 5f       	subi	r21, 0xF8	; 248
     aea:	f3 cf       	rjmp	.-26     	; 0xad2 <__addsf3x+0x34>
     aec:	46 95       	lsr	r20
     aee:	37 95       	ror	r19
     af0:	27 95       	ror	r18
     af2:	a7 95       	ror	r26
     af4:	f0 40       	sbci	r31, 0x00	; 0
     af6:	53 95       	inc	r21
     af8:	c9 f7       	brne	.-14     	; 0xaec <__addsf3x+0x4e>
     afa:	7e f4       	brtc	.+30     	; 0xb1a <__addsf3x+0x7c>
     afc:	1f 16       	cp	r1, r31
     afe:	ba 0b       	sbc	r27, r26
     b00:	62 0b       	sbc	r22, r18
     b02:	73 0b       	sbc	r23, r19
     b04:	84 0b       	sbc	r24, r20
     b06:	ba f0       	brmi	.+46     	; 0xb36 <__addsf3x+0x98>
     b08:	91 50       	subi	r25, 0x01	; 1
     b0a:	a1 f0       	breq	.+40     	; 0xb34 <__addsf3x+0x96>
     b0c:	ff 0f       	add	r31, r31
     b0e:	bb 1f       	adc	r27, r27
     b10:	66 1f       	adc	r22, r22
     b12:	77 1f       	adc	r23, r23
     b14:	88 1f       	adc	r24, r24
     b16:	c2 f7       	brpl	.-16     	; 0xb08 <__addsf3x+0x6a>
     b18:	0e c0       	rjmp	.+28     	; 0xb36 <__addsf3x+0x98>
     b1a:	ba 0f       	add	r27, r26
     b1c:	62 1f       	adc	r22, r18
     b1e:	73 1f       	adc	r23, r19
     b20:	84 1f       	adc	r24, r20
     b22:	48 f4       	brcc	.+18     	; 0xb36 <__addsf3x+0x98>
     b24:	87 95       	ror	r24
     b26:	77 95       	ror	r23
     b28:	67 95       	ror	r22
     b2a:	b7 95       	ror	r27
     b2c:	f7 95       	ror	r31
     b2e:	9e 3f       	cpi	r25, 0xFE	; 254
     b30:	08 f0       	brcs	.+2      	; 0xb34 <__addsf3x+0x96>
     b32:	b3 cf       	rjmp	.-154    	; 0xa9a <__addsf3+0x1e>
     b34:	93 95       	inc	r25
     b36:	88 0f       	add	r24, r24
     b38:	08 f0       	brcs	.+2      	; 0xb3c <__addsf3x+0x9e>
     b3a:	99 27       	eor	r25, r25
     b3c:	ee 0f       	add	r30, r30
     b3e:	97 95       	ror	r25
     b40:	87 95       	ror	r24
     b42:	08 95       	ret

00000b44 <__divsf3>:
     b44:	0c d0       	rcall	.+24     	; 0xb5e <__divsf3x>
     b46:	eb c0       	rjmp	.+470    	; 0xd1e <__fp_round>
     b48:	e3 d0       	rcall	.+454    	; 0xd10 <__fp_pscB>
     b4a:	40 f0       	brcs	.+16     	; 0xb5c <__divsf3+0x18>
     b4c:	da d0       	rcall	.+436    	; 0xd02 <__fp_pscA>
     b4e:	30 f0       	brcs	.+12     	; 0xb5c <__divsf3+0x18>
     b50:	21 f4       	brne	.+8      	; 0xb5a <__divsf3+0x16>
     b52:	5f 3f       	cpi	r21, 0xFF	; 255
     b54:	19 f0       	breq	.+6      	; 0xb5c <__divsf3+0x18>
     b56:	cc c0       	rjmp	.+408    	; 0xcf0 <__fp_inf>
     b58:	51 11       	cpse	r21, r1
     b5a:	15 c1       	rjmp	.+554    	; 0xd86 <__fp_szero>
     b5c:	cf c0       	rjmp	.+414    	; 0xcfc <__fp_nan>

00000b5e <__divsf3x>:
     b5e:	f0 d0       	rcall	.+480    	; 0xd40 <__fp_split3>
     b60:	98 f3       	brcs	.-26     	; 0xb48 <__divsf3+0x4>

00000b62 <__divsf3_pse>:
     b62:	99 23       	and	r25, r25
     b64:	c9 f3       	breq	.-14     	; 0xb58 <__divsf3+0x14>
     b66:	55 23       	and	r21, r21
     b68:	b1 f3       	breq	.-20     	; 0xb56 <__divsf3+0x12>
     b6a:	95 1b       	sub	r25, r21
     b6c:	55 0b       	sbc	r21, r21
     b6e:	bb 27       	eor	r27, r27
     b70:	aa 27       	eor	r26, r26
     b72:	62 17       	cp	r22, r18
     b74:	73 07       	cpc	r23, r19
     b76:	84 07       	cpc	r24, r20
     b78:	38 f0       	brcs	.+14     	; 0xb88 <__divsf3_pse+0x26>
     b7a:	9f 5f       	subi	r25, 0xFF	; 255
     b7c:	5f 4f       	sbci	r21, 0xFF	; 255
     b7e:	22 0f       	add	r18, r18
     b80:	33 1f       	adc	r19, r19
     b82:	44 1f       	adc	r20, r20
     b84:	aa 1f       	adc	r26, r26
     b86:	a9 f3       	breq	.-22     	; 0xb72 <__divsf3_pse+0x10>
     b88:	33 d0       	rcall	.+102    	; 0xbf0 <__divsf3_pse+0x8e>
     b8a:	0e 2e       	mov	r0, r30
     b8c:	3a f0       	brmi	.+14     	; 0xb9c <__divsf3_pse+0x3a>
     b8e:	e0 e8       	ldi	r30, 0x80	; 128
     b90:	30 d0       	rcall	.+96     	; 0xbf2 <__divsf3_pse+0x90>
     b92:	91 50       	subi	r25, 0x01	; 1
     b94:	50 40       	sbci	r21, 0x00	; 0
     b96:	e6 95       	lsr	r30
     b98:	00 1c       	adc	r0, r0
     b9a:	ca f7       	brpl	.-14     	; 0xb8e <__divsf3_pse+0x2c>
     b9c:	29 d0       	rcall	.+82     	; 0xbf0 <__divsf3_pse+0x8e>
     b9e:	fe 2f       	mov	r31, r30
     ba0:	27 d0       	rcall	.+78     	; 0xbf0 <__divsf3_pse+0x8e>
     ba2:	66 0f       	add	r22, r22
     ba4:	77 1f       	adc	r23, r23
     ba6:	88 1f       	adc	r24, r24
     ba8:	bb 1f       	adc	r27, r27
     baa:	26 17       	cp	r18, r22
     bac:	37 07       	cpc	r19, r23
     bae:	48 07       	cpc	r20, r24
     bb0:	ab 07       	cpc	r26, r27
     bb2:	b0 e8       	ldi	r27, 0x80	; 128
     bb4:	09 f0       	breq	.+2      	; 0xbb8 <__divsf3_pse+0x56>
     bb6:	bb 0b       	sbc	r27, r27
     bb8:	80 2d       	mov	r24, r0
     bba:	bf 01       	movw	r22, r30
     bbc:	ff 27       	eor	r31, r31
     bbe:	93 58       	subi	r25, 0x83	; 131
     bc0:	5f 4f       	sbci	r21, 0xFF	; 255
     bc2:	2a f0       	brmi	.+10     	; 0xbce <__divsf3_pse+0x6c>
     bc4:	9e 3f       	cpi	r25, 0xFE	; 254
     bc6:	51 05       	cpc	r21, r1
     bc8:	68 f0       	brcs	.+26     	; 0xbe4 <__divsf3_pse+0x82>
     bca:	92 c0       	rjmp	.+292    	; 0xcf0 <__fp_inf>
     bcc:	dc c0       	rjmp	.+440    	; 0xd86 <__fp_szero>
     bce:	5f 3f       	cpi	r21, 0xFF	; 255
     bd0:	ec f3       	brlt	.-6      	; 0xbcc <__divsf3_pse+0x6a>
     bd2:	98 3e       	cpi	r25, 0xE8	; 232
     bd4:	dc f3       	brlt	.-10     	; 0xbcc <__divsf3_pse+0x6a>
     bd6:	86 95       	lsr	r24
     bd8:	77 95       	ror	r23
     bda:	67 95       	ror	r22
     bdc:	b7 95       	ror	r27
     bde:	f7 95       	ror	r31
     be0:	9f 5f       	subi	r25, 0xFF	; 255
     be2:	c9 f7       	brne	.-14     	; 0xbd6 <__divsf3_pse+0x74>
     be4:	88 0f       	add	r24, r24
     be6:	91 1d       	adc	r25, r1
     be8:	96 95       	lsr	r25
     bea:	87 95       	ror	r24
     bec:	97 f9       	bld	r25, 7
     bee:	08 95       	ret
     bf0:	e1 e0       	ldi	r30, 0x01	; 1
     bf2:	66 0f       	add	r22, r22
     bf4:	77 1f       	adc	r23, r23
     bf6:	88 1f       	adc	r24, r24
     bf8:	bb 1f       	adc	r27, r27
     bfa:	62 17       	cp	r22, r18
     bfc:	73 07       	cpc	r23, r19
     bfe:	84 07       	cpc	r24, r20
     c00:	ba 07       	cpc	r27, r26
     c02:	20 f0       	brcs	.+8      	; 0xc0c <__divsf3_pse+0xaa>
     c04:	62 1b       	sub	r22, r18
     c06:	73 0b       	sbc	r23, r19
     c08:	84 0b       	sbc	r24, r20
     c0a:	ba 0b       	sbc	r27, r26
     c0c:	ee 1f       	adc	r30, r30
     c0e:	88 f7       	brcc	.-30     	; 0xbf2 <__divsf3_pse+0x90>
     c10:	e0 95       	com	r30
     c12:	08 95       	ret

00000c14 <__fixsfsi>:
     c14:	04 d0       	rcall	.+8      	; 0xc1e <__fixunssfsi>
     c16:	68 94       	set
     c18:	b1 11       	cpse	r27, r1
     c1a:	b5 c0       	rjmp	.+362    	; 0xd86 <__fp_szero>
     c1c:	08 95       	ret

00000c1e <__fixunssfsi>:
     c1e:	98 d0       	rcall	.+304    	; 0xd50 <__fp_splitA>
     c20:	88 f0       	brcs	.+34     	; 0xc44 <__fixunssfsi+0x26>
     c22:	9f 57       	subi	r25, 0x7F	; 127
     c24:	90 f0       	brcs	.+36     	; 0xc4a <__fixunssfsi+0x2c>
     c26:	b9 2f       	mov	r27, r25
     c28:	99 27       	eor	r25, r25
     c2a:	b7 51       	subi	r27, 0x17	; 23
     c2c:	a0 f0       	brcs	.+40     	; 0xc56 <__fixunssfsi+0x38>
     c2e:	d1 f0       	breq	.+52     	; 0xc64 <__fixunssfsi+0x46>
     c30:	66 0f       	add	r22, r22
     c32:	77 1f       	adc	r23, r23
     c34:	88 1f       	adc	r24, r24
     c36:	99 1f       	adc	r25, r25
     c38:	1a f0       	brmi	.+6      	; 0xc40 <__fixunssfsi+0x22>
     c3a:	ba 95       	dec	r27
     c3c:	c9 f7       	brne	.-14     	; 0xc30 <__fixunssfsi+0x12>
     c3e:	12 c0       	rjmp	.+36     	; 0xc64 <__fixunssfsi+0x46>
     c40:	b1 30       	cpi	r27, 0x01	; 1
     c42:	81 f0       	breq	.+32     	; 0xc64 <__fixunssfsi+0x46>
     c44:	9f d0       	rcall	.+318    	; 0xd84 <__fp_zero>
     c46:	b1 e0       	ldi	r27, 0x01	; 1
     c48:	08 95       	ret
     c4a:	9c c0       	rjmp	.+312    	; 0xd84 <__fp_zero>
     c4c:	67 2f       	mov	r22, r23
     c4e:	78 2f       	mov	r23, r24
     c50:	88 27       	eor	r24, r24
     c52:	b8 5f       	subi	r27, 0xF8	; 248
     c54:	39 f0       	breq	.+14     	; 0xc64 <__fixunssfsi+0x46>
     c56:	b9 3f       	cpi	r27, 0xF9	; 249
     c58:	cc f3       	brlt	.-14     	; 0xc4c <__fixunssfsi+0x2e>
     c5a:	86 95       	lsr	r24
     c5c:	77 95       	ror	r23
     c5e:	67 95       	ror	r22
     c60:	b3 95       	inc	r27
     c62:	d9 f7       	brne	.-10     	; 0xc5a <__fixunssfsi+0x3c>
     c64:	3e f4       	brtc	.+14     	; 0xc74 <__fixunssfsi+0x56>
     c66:	90 95       	com	r25
     c68:	80 95       	com	r24
     c6a:	70 95       	com	r23
     c6c:	61 95       	neg	r22
     c6e:	7f 4f       	sbci	r23, 0xFF	; 255
     c70:	8f 4f       	sbci	r24, 0xFF	; 255
     c72:	9f 4f       	sbci	r25, 0xFF	; 255
     c74:	08 95       	ret

00000c76 <__floatunsisf>:
     c76:	e8 94       	clt
     c78:	09 c0       	rjmp	.+18     	; 0xc8c <__floatsisf+0x12>

00000c7a <__floatsisf>:
     c7a:	97 fb       	bst	r25, 7
     c7c:	3e f4       	brtc	.+14     	; 0xc8c <__floatsisf+0x12>
     c7e:	90 95       	com	r25
     c80:	80 95       	com	r24
     c82:	70 95       	com	r23
     c84:	61 95       	neg	r22
     c86:	7f 4f       	sbci	r23, 0xFF	; 255
     c88:	8f 4f       	sbci	r24, 0xFF	; 255
     c8a:	9f 4f       	sbci	r25, 0xFF	; 255
     c8c:	99 23       	and	r25, r25
     c8e:	a9 f0       	breq	.+42     	; 0xcba <__floatsisf+0x40>
     c90:	f9 2f       	mov	r31, r25
     c92:	96 e9       	ldi	r25, 0x96	; 150
     c94:	bb 27       	eor	r27, r27
     c96:	93 95       	inc	r25
     c98:	f6 95       	lsr	r31
     c9a:	87 95       	ror	r24
     c9c:	77 95       	ror	r23
     c9e:	67 95       	ror	r22
     ca0:	b7 95       	ror	r27
     ca2:	f1 11       	cpse	r31, r1
     ca4:	f8 cf       	rjmp	.-16     	; 0xc96 <__floatsisf+0x1c>
     ca6:	fa f4       	brpl	.+62     	; 0xce6 <__floatsisf+0x6c>
     ca8:	bb 0f       	add	r27, r27
     caa:	11 f4       	brne	.+4      	; 0xcb0 <__floatsisf+0x36>
     cac:	60 ff       	sbrs	r22, 0
     cae:	1b c0       	rjmp	.+54     	; 0xce6 <__floatsisf+0x6c>
     cb0:	6f 5f       	subi	r22, 0xFF	; 255
     cb2:	7f 4f       	sbci	r23, 0xFF	; 255
     cb4:	8f 4f       	sbci	r24, 0xFF	; 255
     cb6:	9f 4f       	sbci	r25, 0xFF	; 255
     cb8:	16 c0       	rjmp	.+44     	; 0xce6 <__floatsisf+0x6c>
     cba:	88 23       	and	r24, r24
     cbc:	11 f0       	breq	.+4      	; 0xcc2 <__floatsisf+0x48>
     cbe:	96 e9       	ldi	r25, 0x96	; 150
     cc0:	11 c0       	rjmp	.+34     	; 0xce4 <__floatsisf+0x6a>
     cc2:	77 23       	and	r23, r23
     cc4:	21 f0       	breq	.+8      	; 0xcce <__floatsisf+0x54>
     cc6:	9e e8       	ldi	r25, 0x8E	; 142
     cc8:	87 2f       	mov	r24, r23
     cca:	76 2f       	mov	r23, r22
     ccc:	05 c0       	rjmp	.+10     	; 0xcd8 <__floatsisf+0x5e>
     cce:	66 23       	and	r22, r22
     cd0:	71 f0       	breq	.+28     	; 0xcee <__floatsisf+0x74>
     cd2:	96 e8       	ldi	r25, 0x86	; 134
     cd4:	86 2f       	mov	r24, r22
     cd6:	70 e0       	ldi	r23, 0x00	; 0
     cd8:	60 e0       	ldi	r22, 0x00	; 0
     cda:	2a f0       	brmi	.+10     	; 0xce6 <__floatsisf+0x6c>
     cdc:	9a 95       	dec	r25
     cde:	66 0f       	add	r22, r22
     ce0:	77 1f       	adc	r23, r23
     ce2:	88 1f       	adc	r24, r24
     ce4:	da f7       	brpl	.-10     	; 0xcdc <__floatsisf+0x62>
     ce6:	88 0f       	add	r24, r24
     ce8:	96 95       	lsr	r25
     cea:	87 95       	ror	r24
     cec:	97 f9       	bld	r25, 7
     cee:	08 95       	ret

00000cf0 <__fp_inf>:
     cf0:	97 f9       	bld	r25, 7
     cf2:	9f 67       	ori	r25, 0x7F	; 127
     cf4:	80 e8       	ldi	r24, 0x80	; 128
     cf6:	70 e0       	ldi	r23, 0x00	; 0
     cf8:	60 e0       	ldi	r22, 0x00	; 0
     cfa:	08 95       	ret

00000cfc <__fp_nan>:
     cfc:	9f ef       	ldi	r25, 0xFF	; 255
     cfe:	80 ec       	ldi	r24, 0xC0	; 192
     d00:	08 95       	ret

00000d02 <__fp_pscA>:
     d02:	00 24       	eor	r0, r0
     d04:	0a 94       	dec	r0
     d06:	16 16       	cp	r1, r22
     d08:	17 06       	cpc	r1, r23
     d0a:	18 06       	cpc	r1, r24
     d0c:	09 06       	cpc	r0, r25
     d0e:	08 95       	ret

00000d10 <__fp_pscB>:
     d10:	00 24       	eor	r0, r0
     d12:	0a 94       	dec	r0
     d14:	12 16       	cp	r1, r18
     d16:	13 06       	cpc	r1, r19
     d18:	14 06       	cpc	r1, r20
     d1a:	05 06       	cpc	r0, r21
     d1c:	08 95       	ret

00000d1e <__fp_round>:
     d1e:	09 2e       	mov	r0, r25
     d20:	03 94       	inc	r0
     d22:	00 0c       	add	r0, r0
     d24:	11 f4       	brne	.+4      	; 0xd2a <__fp_round+0xc>
     d26:	88 23       	and	r24, r24
     d28:	52 f0       	brmi	.+20     	; 0xd3e <__fp_round+0x20>
     d2a:	bb 0f       	add	r27, r27
     d2c:	40 f4       	brcc	.+16     	; 0xd3e <__fp_round+0x20>
     d2e:	bf 2b       	or	r27, r31
     d30:	11 f4       	brne	.+4      	; 0xd36 <__fp_round+0x18>
     d32:	60 ff       	sbrs	r22, 0
     d34:	04 c0       	rjmp	.+8      	; 0xd3e <__fp_round+0x20>
     d36:	6f 5f       	subi	r22, 0xFF	; 255
     d38:	7f 4f       	sbci	r23, 0xFF	; 255
     d3a:	8f 4f       	sbci	r24, 0xFF	; 255
     d3c:	9f 4f       	sbci	r25, 0xFF	; 255
     d3e:	08 95       	ret

00000d40 <__fp_split3>:
     d40:	57 fd       	sbrc	r21, 7
     d42:	90 58       	subi	r25, 0x80	; 128
     d44:	44 0f       	add	r20, r20
     d46:	55 1f       	adc	r21, r21
     d48:	59 f0       	breq	.+22     	; 0xd60 <__fp_splitA+0x10>
     d4a:	5f 3f       	cpi	r21, 0xFF	; 255
     d4c:	71 f0       	breq	.+28     	; 0xd6a <__fp_splitA+0x1a>
     d4e:	47 95       	ror	r20

00000d50 <__fp_splitA>:
     d50:	88 0f       	add	r24, r24
     d52:	97 fb       	bst	r25, 7
     d54:	99 1f       	adc	r25, r25
     d56:	61 f0       	breq	.+24     	; 0xd70 <__fp_splitA+0x20>
     d58:	9f 3f       	cpi	r25, 0xFF	; 255
     d5a:	79 f0       	breq	.+30     	; 0xd7a <__fp_splitA+0x2a>
     d5c:	87 95       	ror	r24
     d5e:	08 95       	ret
     d60:	12 16       	cp	r1, r18
     d62:	13 06       	cpc	r1, r19
     d64:	14 06       	cpc	r1, r20
     d66:	55 1f       	adc	r21, r21
     d68:	f2 cf       	rjmp	.-28     	; 0xd4e <__fp_split3+0xe>
     d6a:	46 95       	lsr	r20
     d6c:	f1 df       	rcall	.-30     	; 0xd50 <__fp_splitA>
     d6e:	08 c0       	rjmp	.+16     	; 0xd80 <__fp_splitA+0x30>
     d70:	16 16       	cp	r1, r22
     d72:	17 06       	cpc	r1, r23
     d74:	18 06       	cpc	r1, r24
     d76:	99 1f       	adc	r25, r25
     d78:	f1 cf       	rjmp	.-30     	; 0xd5c <__fp_splitA+0xc>
     d7a:	86 95       	lsr	r24
     d7c:	71 05       	cpc	r23, r1
     d7e:	61 05       	cpc	r22, r1
     d80:	08 94       	sec
     d82:	08 95       	ret

00000d84 <__fp_zero>:
     d84:	e8 94       	clt

00000d86 <__fp_szero>:
     d86:	bb 27       	eor	r27, r27
     d88:	66 27       	eor	r22, r22
     d8a:	77 27       	eor	r23, r23
     d8c:	cb 01       	movw	r24, r22
     d8e:	97 f9       	bld	r25, 7
     d90:	08 95       	ret

00000d92 <__mulsf3>:
     d92:	0b d0       	rcall	.+22     	; 0xdaa <__mulsf3x>
     d94:	c4 cf       	rjmp	.-120    	; 0xd1e <__fp_round>
     d96:	b5 df       	rcall	.-150    	; 0xd02 <__fp_pscA>
     d98:	28 f0       	brcs	.+10     	; 0xda4 <__mulsf3+0x12>
     d9a:	ba df       	rcall	.-140    	; 0xd10 <__fp_pscB>
     d9c:	18 f0       	brcs	.+6      	; 0xda4 <__mulsf3+0x12>
     d9e:	95 23       	and	r25, r21
     da0:	09 f0       	breq	.+2      	; 0xda4 <__mulsf3+0x12>
     da2:	a6 cf       	rjmp	.-180    	; 0xcf0 <__fp_inf>
     da4:	ab cf       	rjmp	.-170    	; 0xcfc <__fp_nan>
     da6:	11 24       	eor	r1, r1
     da8:	ee cf       	rjmp	.-36     	; 0xd86 <__fp_szero>

00000daa <__mulsf3x>:
     daa:	ca df       	rcall	.-108    	; 0xd40 <__fp_split3>
     dac:	a0 f3       	brcs	.-24     	; 0xd96 <__mulsf3+0x4>

00000dae <__mulsf3_pse>:
     dae:	95 9f       	mul	r25, r21
     db0:	d1 f3       	breq	.-12     	; 0xda6 <__mulsf3+0x14>
     db2:	95 0f       	add	r25, r21
     db4:	50 e0       	ldi	r21, 0x00	; 0
     db6:	55 1f       	adc	r21, r21
     db8:	62 9f       	mul	r22, r18
     dba:	f0 01       	movw	r30, r0
     dbc:	72 9f       	mul	r23, r18
     dbe:	bb 27       	eor	r27, r27
     dc0:	f0 0d       	add	r31, r0
     dc2:	b1 1d       	adc	r27, r1
     dc4:	63 9f       	mul	r22, r19
     dc6:	aa 27       	eor	r26, r26
     dc8:	f0 0d       	add	r31, r0
     dca:	b1 1d       	adc	r27, r1
     dcc:	aa 1f       	adc	r26, r26
     dce:	64 9f       	mul	r22, r20
     dd0:	66 27       	eor	r22, r22
     dd2:	b0 0d       	add	r27, r0
     dd4:	a1 1d       	adc	r26, r1
     dd6:	66 1f       	adc	r22, r22
     dd8:	82 9f       	mul	r24, r18
     dda:	22 27       	eor	r18, r18
     ddc:	b0 0d       	add	r27, r0
     dde:	a1 1d       	adc	r26, r1
     de0:	62 1f       	adc	r22, r18
     de2:	73 9f       	mul	r23, r19
     de4:	b0 0d       	add	r27, r0
     de6:	a1 1d       	adc	r26, r1
     de8:	62 1f       	adc	r22, r18
     dea:	83 9f       	mul	r24, r19
     dec:	a0 0d       	add	r26, r0
     dee:	61 1d       	adc	r22, r1
     df0:	22 1f       	adc	r18, r18
     df2:	74 9f       	mul	r23, r20
     df4:	33 27       	eor	r19, r19
     df6:	a0 0d       	add	r26, r0
     df8:	61 1d       	adc	r22, r1
     dfa:	23 1f       	adc	r18, r19
     dfc:	84 9f       	mul	r24, r20
     dfe:	60 0d       	add	r22, r0
     e00:	21 1d       	adc	r18, r1
     e02:	82 2f       	mov	r24, r18
     e04:	76 2f       	mov	r23, r22
     e06:	6a 2f       	mov	r22, r26
     e08:	11 24       	eor	r1, r1
     e0a:	9f 57       	subi	r25, 0x7F	; 127
     e0c:	50 40       	sbci	r21, 0x00	; 0
     e0e:	8a f0       	brmi	.+34     	; 0xe32 <__mulsf3_pse+0x84>
     e10:	e1 f0       	breq	.+56     	; 0xe4a <__mulsf3_pse+0x9c>
     e12:	88 23       	and	r24, r24
     e14:	4a f0       	brmi	.+18     	; 0xe28 <__mulsf3_pse+0x7a>
     e16:	ee 0f       	add	r30, r30
     e18:	ff 1f       	adc	r31, r31
     e1a:	bb 1f       	adc	r27, r27
     e1c:	66 1f       	adc	r22, r22
     e1e:	77 1f       	adc	r23, r23
     e20:	88 1f       	adc	r24, r24
     e22:	91 50       	subi	r25, 0x01	; 1
     e24:	50 40       	sbci	r21, 0x00	; 0
     e26:	a9 f7       	brne	.-22     	; 0xe12 <__mulsf3_pse+0x64>
     e28:	9e 3f       	cpi	r25, 0xFE	; 254
     e2a:	51 05       	cpc	r21, r1
     e2c:	70 f0       	brcs	.+28     	; 0xe4a <__mulsf3_pse+0x9c>
     e2e:	60 cf       	rjmp	.-320    	; 0xcf0 <__fp_inf>
     e30:	aa cf       	rjmp	.-172    	; 0xd86 <__fp_szero>
     e32:	5f 3f       	cpi	r21, 0xFF	; 255
     e34:	ec f3       	brlt	.-6      	; 0xe30 <__mulsf3_pse+0x82>
     e36:	98 3e       	cpi	r25, 0xE8	; 232
     e38:	dc f3       	brlt	.-10     	; 0xe30 <__mulsf3_pse+0x82>
     e3a:	86 95       	lsr	r24
     e3c:	77 95       	ror	r23
     e3e:	67 95       	ror	r22
     e40:	b7 95       	ror	r27
     e42:	f7 95       	ror	r31
     e44:	e7 95       	ror	r30
     e46:	9f 5f       	subi	r25, 0xFF	; 255
     e48:	c1 f7       	brne	.-16     	; 0xe3a <__mulsf3_pse+0x8c>
     e4a:	fe 2b       	or	r31, r30
     e4c:	88 0f       	add	r24, r24
     e4e:	91 1d       	adc	r25, r1
     e50:	96 95       	lsr	r25
     e52:	87 95       	ror	r24
     e54:	97 f9       	bld	r25, 7
     e56:	08 95       	ret

00000e58 <__fp_cmp>:
     e58:	99 0f       	add	r25, r25
     e5a:	00 08       	sbc	r0, r0
     e5c:	55 0f       	add	r21, r21
     e5e:	aa 0b       	sbc	r26, r26
     e60:	e0 e8       	ldi	r30, 0x80	; 128
     e62:	fe ef       	ldi	r31, 0xFE	; 254
     e64:	16 16       	cp	r1, r22
     e66:	17 06       	cpc	r1, r23
     e68:	e8 07       	cpc	r30, r24
     e6a:	f9 07       	cpc	r31, r25
     e6c:	c0 f0       	brcs	.+48     	; 0xe9e <__fp_cmp+0x46>
     e6e:	12 16       	cp	r1, r18
     e70:	13 06       	cpc	r1, r19
     e72:	e4 07       	cpc	r30, r20
     e74:	f5 07       	cpc	r31, r21
     e76:	98 f0       	brcs	.+38     	; 0xe9e <__fp_cmp+0x46>
     e78:	62 1b       	sub	r22, r18
     e7a:	73 0b       	sbc	r23, r19
     e7c:	84 0b       	sbc	r24, r20
     e7e:	95 0b       	sbc	r25, r21
     e80:	39 f4       	brne	.+14     	; 0xe90 <__fp_cmp+0x38>
     e82:	0a 26       	eor	r0, r26
     e84:	61 f0       	breq	.+24     	; 0xe9e <__fp_cmp+0x46>
     e86:	23 2b       	or	r18, r19
     e88:	24 2b       	or	r18, r20
     e8a:	25 2b       	or	r18, r21
     e8c:	21 f4       	brne	.+8      	; 0xe96 <__fp_cmp+0x3e>
     e8e:	08 95       	ret
     e90:	0a 26       	eor	r0, r26
     e92:	09 f4       	brne	.+2      	; 0xe96 <__fp_cmp+0x3e>
     e94:	a1 40       	sbci	r26, 0x01	; 1
     e96:	a6 95       	lsr	r26
     e98:	8f ef       	ldi	r24, 0xFF	; 255
     e9a:	81 1d       	adc	r24, r1
     e9c:	81 1d       	adc	r24, r1
     e9e:	08 95       	ret

00000ea0 <__udivmodsi4>:
     ea0:	a1 e2       	ldi	r26, 0x21	; 33
     ea2:	1a 2e       	mov	r1, r26
     ea4:	aa 1b       	sub	r26, r26
     ea6:	bb 1b       	sub	r27, r27
     ea8:	fd 01       	movw	r30, r26
     eaa:	0d c0       	rjmp	.+26     	; 0xec6 <__udivmodsi4_ep>

00000eac <__udivmodsi4_loop>:
     eac:	aa 1f       	adc	r26, r26
     eae:	bb 1f       	adc	r27, r27
     eb0:	ee 1f       	adc	r30, r30
     eb2:	ff 1f       	adc	r31, r31
     eb4:	a2 17       	cp	r26, r18
     eb6:	b3 07       	cpc	r27, r19
     eb8:	e4 07       	cpc	r30, r20
     eba:	f5 07       	cpc	r31, r21
     ebc:	20 f0       	brcs	.+8      	; 0xec6 <__udivmodsi4_ep>
     ebe:	a2 1b       	sub	r26, r18
     ec0:	b3 0b       	sbc	r27, r19
     ec2:	e4 0b       	sbc	r30, r20
     ec4:	f5 0b       	sbc	r31, r21

00000ec6 <__udivmodsi4_ep>:
     ec6:	66 1f       	adc	r22, r22
     ec8:	77 1f       	adc	r23, r23
     eca:	88 1f       	adc	r24, r24
     ecc:	99 1f       	adc	r25, r25
     ece:	1a 94       	dec	r1
     ed0:	69 f7       	brne	.-38     	; 0xeac <__udivmodsi4_loop>
     ed2:	60 95       	com	r22
     ed4:	70 95       	com	r23
     ed6:	80 95       	com	r24
     ed8:	90 95       	com	r25
     eda:	9b 01       	movw	r18, r22
     edc:	ac 01       	movw	r20, r24
     ede:	bd 01       	movw	r22, r26
     ee0:	cf 01       	movw	r24, r30
     ee2:	08 95       	ret

00000ee4 <malloc>:
     ee4:	cf 93       	push	r28
     ee6:	df 93       	push	r29
     ee8:	82 30       	cpi	r24, 0x02	; 2
     eea:	91 05       	cpc	r25, r1
     eec:	10 f4       	brcc	.+4      	; 0xef2 <malloc+0xe>
     eee:	82 e0       	ldi	r24, 0x02	; 2
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	e0 91 68 02 	lds	r30, 0x0268	; 0x800268 <__flp>
     ef6:	f0 91 69 02 	lds	r31, 0x0269	; 0x800269 <__flp+0x1>
     efa:	20 e0       	ldi	r18, 0x00	; 0
     efc:	30 e0       	ldi	r19, 0x00	; 0
     efe:	c0 e0       	ldi	r28, 0x00	; 0
     f00:	d0 e0       	ldi	r29, 0x00	; 0
     f02:	30 97       	sbiw	r30, 0x00	; 0
     f04:	11 f1       	breq	.+68     	; 0xf4a <malloc+0x66>
     f06:	40 81       	ld	r20, Z
     f08:	51 81       	ldd	r21, Z+1	; 0x01
     f0a:	48 17       	cp	r20, r24
     f0c:	59 07       	cpc	r21, r25
     f0e:	c0 f0       	brcs	.+48     	; 0xf40 <malloc+0x5c>
     f10:	48 17       	cp	r20, r24
     f12:	59 07       	cpc	r21, r25
     f14:	61 f4       	brne	.+24     	; 0xf2e <malloc+0x4a>
     f16:	82 81       	ldd	r24, Z+2	; 0x02
     f18:	93 81       	ldd	r25, Z+3	; 0x03
     f1a:	20 97       	sbiw	r28, 0x00	; 0
     f1c:	19 f0       	breq	.+6      	; 0xf24 <malloc+0x40>
     f1e:	9b 83       	std	Y+3, r25	; 0x03
     f20:	8a 83       	std	Y+2, r24	; 0x02
     f22:	2b c0       	rjmp	.+86     	; 0xf7a <malloc+0x96>
     f24:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <__flp+0x1>
     f28:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <__flp>
     f2c:	26 c0       	rjmp	.+76     	; 0xf7a <malloc+0x96>
     f2e:	21 15       	cp	r18, r1
     f30:	31 05       	cpc	r19, r1
     f32:	19 f0       	breq	.+6      	; 0xf3a <malloc+0x56>
     f34:	42 17       	cp	r20, r18
     f36:	53 07       	cpc	r21, r19
     f38:	18 f4       	brcc	.+6      	; 0xf40 <malloc+0x5c>
     f3a:	9a 01       	movw	r18, r20
     f3c:	be 01       	movw	r22, r28
     f3e:	df 01       	movw	r26, r30
     f40:	ef 01       	movw	r28, r30
     f42:	02 80       	ldd	r0, Z+2	; 0x02
     f44:	f3 81       	ldd	r31, Z+3	; 0x03
     f46:	e0 2d       	mov	r30, r0
     f48:	dc cf       	rjmp	.-72     	; 0xf02 <malloc+0x1e>
     f4a:	21 15       	cp	r18, r1
     f4c:	31 05       	cpc	r19, r1
     f4e:	09 f1       	breq	.+66     	; 0xf92 <malloc+0xae>
     f50:	28 1b       	sub	r18, r24
     f52:	39 0b       	sbc	r19, r25
     f54:	24 30       	cpi	r18, 0x04	; 4
     f56:	31 05       	cpc	r19, r1
     f58:	90 f4       	brcc	.+36     	; 0xf7e <malloc+0x9a>
     f5a:	12 96       	adiw	r26, 0x02	; 2
     f5c:	8d 91       	ld	r24, X+
     f5e:	9c 91       	ld	r25, X
     f60:	13 97       	sbiw	r26, 0x03	; 3
     f62:	61 15       	cp	r22, r1
     f64:	71 05       	cpc	r23, r1
     f66:	21 f0       	breq	.+8      	; 0xf70 <malloc+0x8c>
     f68:	fb 01       	movw	r30, r22
     f6a:	93 83       	std	Z+3, r25	; 0x03
     f6c:	82 83       	std	Z+2, r24	; 0x02
     f6e:	04 c0       	rjmp	.+8      	; 0xf78 <malloc+0x94>
     f70:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <__flp+0x1>
     f74:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <__flp>
     f78:	fd 01       	movw	r30, r26
     f7a:	32 96       	adiw	r30, 0x02	; 2
     f7c:	44 c0       	rjmp	.+136    	; 0x1006 <malloc+0x122>
     f7e:	fd 01       	movw	r30, r26
     f80:	e2 0f       	add	r30, r18
     f82:	f3 1f       	adc	r31, r19
     f84:	81 93       	st	Z+, r24
     f86:	91 93       	st	Z+, r25
     f88:	22 50       	subi	r18, 0x02	; 2
     f8a:	31 09       	sbc	r19, r1
     f8c:	2d 93       	st	X+, r18
     f8e:	3c 93       	st	X, r19
     f90:	3a c0       	rjmp	.+116    	; 0x1006 <malloc+0x122>
     f92:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <__brkval>
     f96:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <__brkval+0x1>
     f9a:	23 2b       	or	r18, r19
     f9c:	41 f4       	brne	.+16     	; 0xfae <malloc+0xca>
     f9e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     fa2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     fa6:	30 93 67 02 	sts	0x0267, r19	; 0x800267 <__brkval+0x1>
     faa:	20 93 66 02 	sts	0x0266, r18	; 0x800266 <__brkval>
     fae:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     fb2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     fb6:	21 15       	cp	r18, r1
     fb8:	31 05       	cpc	r19, r1
     fba:	41 f4       	brne	.+16     	; 0xfcc <malloc+0xe8>
     fbc:	2d b7       	in	r18, 0x3d	; 61
     fbe:	3e b7       	in	r19, 0x3e	; 62
     fc0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     fc4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     fc8:	24 1b       	sub	r18, r20
     fca:	35 0b       	sbc	r19, r21
     fcc:	e0 91 66 02 	lds	r30, 0x0266	; 0x800266 <__brkval>
     fd0:	f0 91 67 02 	lds	r31, 0x0267	; 0x800267 <__brkval+0x1>
     fd4:	e2 17       	cp	r30, r18
     fd6:	f3 07       	cpc	r31, r19
     fd8:	a0 f4       	brcc	.+40     	; 0x1002 <malloc+0x11e>
     fda:	2e 1b       	sub	r18, r30
     fdc:	3f 0b       	sbc	r19, r31
     fde:	28 17       	cp	r18, r24
     fe0:	39 07       	cpc	r19, r25
     fe2:	78 f0       	brcs	.+30     	; 0x1002 <malloc+0x11e>
     fe4:	ac 01       	movw	r20, r24
     fe6:	4e 5f       	subi	r20, 0xFE	; 254
     fe8:	5f 4f       	sbci	r21, 0xFF	; 255
     fea:	24 17       	cp	r18, r20
     fec:	35 07       	cpc	r19, r21
     fee:	48 f0       	brcs	.+18     	; 0x1002 <malloc+0x11e>
     ff0:	4e 0f       	add	r20, r30
     ff2:	5f 1f       	adc	r21, r31
     ff4:	50 93 67 02 	sts	0x0267, r21	; 0x800267 <__brkval+0x1>
     ff8:	40 93 66 02 	sts	0x0266, r20	; 0x800266 <__brkval>
     ffc:	81 93       	st	Z+, r24
     ffe:	91 93       	st	Z+, r25
    1000:	02 c0       	rjmp	.+4      	; 0x1006 <malloc+0x122>
    1002:	e0 e0       	ldi	r30, 0x00	; 0
    1004:	f0 e0       	ldi	r31, 0x00	; 0
    1006:	cf 01       	movw	r24, r30
    1008:	df 91       	pop	r29
    100a:	cf 91       	pop	r28
    100c:	08 95       	ret

0000100e <free>:
    100e:	0f 93       	push	r16
    1010:	1f 93       	push	r17
    1012:	cf 93       	push	r28
    1014:	df 93       	push	r29
    1016:	00 97       	sbiw	r24, 0x00	; 0
    1018:	09 f4       	brne	.+2      	; 0x101c <free+0xe>
    101a:	8c c0       	rjmp	.+280    	; 0x1134 <__stack+0x35>
    101c:	fc 01       	movw	r30, r24
    101e:	32 97       	sbiw	r30, 0x02	; 2
    1020:	13 82       	std	Z+3, r1	; 0x03
    1022:	12 82       	std	Z+2, r1	; 0x02
    1024:	00 91 68 02 	lds	r16, 0x0268	; 0x800268 <__flp>
    1028:	10 91 69 02 	lds	r17, 0x0269	; 0x800269 <__flp+0x1>
    102c:	01 15       	cp	r16, r1
    102e:	11 05       	cpc	r17, r1
    1030:	81 f4       	brne	.+32     	; 0x1052 <free+0x44>
    1032:	20 81       	ld	r18, Z
    1034:	31 81       	ldd	r19, Z+1	; 0x01
    1036:	82 0f       	add	r24, r18
    1038:	93 1f       	adc	r25, r19
    103a:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <__brkval>
    103e:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <__brkval+0x1>
    1042:	28 17       	cp	r18, r24
    1044:	39 07       	cpc	r19, r25
    1046:	79 f5       	brne	.+94     	; 0x10a6 <free+0x98>
    1048:	f0 93 67 02 	sts	0x0267, r31	; 0x800267 <__brkval+0x1>
    104c:	e0 93 66 02 	sts	0x0266, r30	; 0x800266 <__brkval>
    1050:	71 c0       	rjmp	.+226    	; 0x1134 <__stack+0x35>
    1052:	d8 01       	movw	r26, r16
    1054:	40 e0       	ldi	r20, 0x00	; 0
    1056:	50 e0       	ldi	r21, 0x00	; 0
    1058:	ae 17       	cp	r26, r30
    105a:	bf 07       	cpc	r27, r31
    105c:	50 f4       	brcc	.+20     	; 0x1072 <free+0x64>
    105e:	12 96       	adiw	r26, 0x02	; 2
    1060:	2d 91       	ld	r18, X+
    1062:	3c 91       	ld	r19, X
    1064:	13 97       	sbiw	r26, 0x03	; 3
    1066:	ad 01       	movw	r20, r26
    1068:	21 15       	cp	r18, r1
    106a:	31 05       	cpc	r19, r1
    106c:	09 f1       	breq	.+66     	; 0x10b0 <free+0xa2>
    106e:	d9 01       	movw	r26, r18
    1070:	f3 cf       	rjmp	.-26     	; 0x1058 <free+0x4a>
    1072:	9d 01       	movw	r18, r26
    1074:	da 01       	movw	r26, r20
    1076:	33 83       	std	Z+3, r19	; 0x03
    1078:	22 83       	std	Z+2, r18	; 0x02
    107a:	60 81       	ld	r22, Z
    107c:	71 81       	ldd	r23, Z+1	; 0x01
    107e:	86 0f       	add	r24, r22
    1080:	97 1f       	adc	r25, r23
    1082:	82 17       	cp	r24, r18
    1084:	93 07       	cpc	r25, r19
    1086:	69 f4       	brne	.+26     	; 0x10a2 <free+0x94>
    1088:	ec 01       	movw	r28, r24
    108a:	28 81       	ld	r18, Y
    108c:	39 81       	ldd	r19, Y+1	; 0x01
    108e:	26 0f       	add	r18, r22
    1090:	37 1f       	adc	r19, r23
    1092:	2e 5f       	subi	r18, 0xFE	; 254
    1094:	3f 4f       	sbci	r19, 0xFF	; 255
    1096:	31 83       	std	Z+1, r19	; 0x01
    1098:	20 83       	st	Z, r18
    109a:	8a 81       	ldd	r24, Y+2	; 0x02
    109c:	9b 81       	ldd	r25, Y+3	; 0x03
    109e:	93 83       	std	Z+3, r25	; 0x03
    10a0:	82 83       	std	Z+2, r24	; 0x02
    10a2:	45 2b       	or	r20, r21
    10a4:	29 f4       	brne	.+10     	; 0x10b0 <free+0xa2>
    10a6:	f0 93 69 02 	sts	0x0269, r31	; 0x800269 <__flp+0x1>
    10aa:	e0 93 68 02 	sts	0x0268, r30	; 0x800268 <__flp>
    10ae:	42 c0       	rjmp	.+132    	; 0x1134 <__stack+0x35>
    10b0:	13 96       	adiw	r26, 0x03	; 3
    10b2:	fc 93       	st	X, r31
    10b4:	ee 93       	st	-X, r30
    10b6:	12 97       	sbiw	r26, 0x02	; 2
    10b8:	ed 01       	movw	r28, r26
    10ba:	49 91       	ld	r20, Y+
    10bc:	59 91       	ld	r21, Y+
    10be:	9e 01       	movw	r18, r28
    10c0:	24 0f       	add	r18, r20
    10c2:	35 1f       	adc	r19, r21
    10c4:	e2 17       	cp	r30, r18
    10c6:	f3 07       	cpc	r31, r19
    10c8:	71 f4       	brne	.+28     	; 0x10e6 <free+0xd8>
    10ca:	80 81       	ld	r24, Z
    10cc:	91 81       	ldd	r25, Z+1	; 0x01
    10ce:	84 0f       	add	r24, r20
    10d0:	95 1f       	adc	r25, r21
    10d2:	02 96       	adiw	r24, 0x02	; 2
    10d4:	11 96       	adiw	r26, 0x01	; 1
    10d6:	9c 93       	st	X, r25
    10d8:	8e 93       	st	-X, r24
    10da:	82 81       	ldd	r24, Z+2	; 0x02
    10dc:	93 81       	ldd	r25, Z+3	; 0x03
    10de:	13 96       	adiw	r26, 0x03	; 3
    10e0:	9c 93       	st	X, r25
    10e2:	8e 93       	st	-X, r24
    10e4:	12 97       	sbiw	r26, 0x02	; 2
    10e6:	e0 e0       	ldi	r30, 0x00	; 0
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	d8 01       	movw	r26, r16
    10ec:	12 96       	adiw	r26, 0x02	; 2
    10ee:	8d 91       	ld	r24, X+
    10f0:	9c 91       	ld	r25, X
    10f2:	13 97       	sbiw	r26, 0x03	; 3
    10f4:	00 97       	sbiw	r24, 0x00	; 0
    10f6:	19 f0       	breq	.+6      	; 0x10fe <free+0xf0>
    10f8:	f8 01       	movw	r30, r16
    10fa:	8c 01       	movw	r16, r24
    10fc:	f6 cf       	rjmp	.-20     	; 0x10ea <free+0xdc>
    10fe:	8d 91       	ld	r24, X+
    1100:	9c 91       	ld	r25, X
    1102:	98 01       	movw	r18, r16
    1104:	2e 5f       	subi	r18, 0xFE	; 254
    1106:	3f 4f       	sbci	r19, 0xFF	; 255
    1108:	82 0f       	add	r24, r18
    110a:	93 1f       	adc	r25, r19
    110c:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <__brkval>
    1110:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <__brkval+0x1>
    1114:	28 17       	cp	r18, r24
    1116:	39 07       	cpc	r19, r25
    1118:	69 f4       	brne	.+26     	; 0x1134 <__stack+0x35>
    111a:	30 97       	sbiw	r30, 0x00	; 0
    111c:	29 f4       	brne	.+10     	; 0x1128 <__stack+0x29>
    111e:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <__flp+0x1>
    1122:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <__flp>
    1126:	02 c0       	rjmp	.+4      	; 0x112c <__stack+0x2d>
    1128:	13 82       	std	Z+3, r1	; 0x03
    112a:	12 82       	std	Z+2, r1	; 0x02
    112c:	10 93 67 02 	sts	0x0267, r17	; 0x800267 <__brkval+0x1>
    1130:	00 93 66 02 	sts	0x0266, r16	; 0x800266 <__brkval>
    1134:	df 91       	pop	r29
    1136:	cf 91       	pop	r28
    1138:	1f 91       	pop	r17
    113a:	0f 91       	pop	r16
    113c:	08 95       	ret

0000113e <do_rand>:
    113e:	8f 92       	push	r8
    1140:	9f 92       	push	r9
    1142:	af 92       	push	r10
    1144:	bf 92       	push	r11
    1146:	cf 92       	push	r12
    1148:	df 92       	push	r13
    114a:	ef 92       	push	r14
    114c:	ff 92       	push	r15
    114e:	cf 93       	push	r28
    1150:	df 93       	push	r29
    1152:	ec 01       	movw	r28, r24
    1154:	68 81       	ld	r22, Y
    1156:	79 81       	ldd	r23, Y+1	; 0x01
    1158:	8a 81       	ldd	r24, Y+2	; 0x02
    115a:	9b 81       	ldd	r25, Y+3	; 0x03
    115c:	61 15       	cp	r22, r1
    115e:	71 05       	cpc	r23, r1
    1160:	81 05       	cpc	r24, r1
    1162:	91 05       	cpc	r25, r1
    1164:	21 f4       	brne	.+8      	; 0x116e <do_rand+0x30>
    1166:	64 e2       	ldi	r22, 0x24	; 36
    1168:	79 ed       	ldi	r23, 0xD9	; 217
    116a:	8b e5       	ldi	r24, 0x5B	; 91
    116c:	97 e0       	ldi	r25, 0x07	; 7
    116e:	2d e1       	ldi	r18, 0x1D	; 29
    1170:	33 ef       	ldi	r19, 0xF3	; 243
    1172:	41 e0       	ldi	r20, 0x01	; 1
    1174:	50 e0       	ldi	r21, 0x00	; 0
    1176:	d7 d4       	rcall	.+2478   	; 0x1b26 <__divmodsi4>
    1178:	49 01       	movw	r8, r18
    117a:	5a 01       	movw	r10, r20
    117c:	9b 01       	movw	r18, r22
    117e:	ac 01       	movw	r20, r24
    1180:	a7 ea       	ldi	r26, 0xA7	; 167
    1182:	b1 e4       	ldi	r27, 0x41	; 65
    1184:	ec d4       	rcall	.+2520   	; 0x1b5e <__muluhisi3>
    1186:	6b 01       	movw	r12, r22
    1188:	7c 01       	movw	r14, r24
    118a:	ac ee       	ldi	r26, 0xEC	; 236
    118c:	b4 ef       	ldi	r27, 0xF4	; 244
    118e:	a5 01       	movw	r20, r10
    1190:	94 01       	movw	r18, r8
    1192:	f1 d4       	rcall	.+2530   	; 0x1b76 <__mulohisi3>
    1194:	dc 01       	movw	r26, r24
    1196:	cb 01       	movw	r24, r22
    1198:	8c 0d       	add	r24, r12
    119a:	9d 1d       	adc	r25, r13
    119c:	ae 1d       	adc	r26, r14
    119e:	bf 1d       	adc	r27, r15
    11a0:	b7 ff       	sbrs	r27, 7
    11a2:	03 c0       	rjmp	.+6      	; 0x11aa <do_rand+0x6c>
    11a4:	01 97       	sbiw	r24, 0x01	; 1
    11a6:	a1 09       	sbc	r26, r1
    11a8:	b0 48       	sbci	r27, 0x80	; 128
    11aa:	88 83       	st	Y, r24
    11ac:	99 83       	std	Y+1, r25	; 0x01
    11ae:	aa 83       	std	Y+2, r26	; 0x02
    11b0:	bb 83       	std	Y+3, r27	; 0x03
    11b2:	9f 77       	andi	r25, 0x7F	; 127
    11b4:	df 91       	pop	r29
    11b6:	cf 91       	pop	r28
    11b8:	ff 90       	pop	r15
    11ba:	ef 90       	pop	r14
    11bc:	df 90       	pop	r13
    11be:	cf 90       	pop	r12
    11c0:	bf 90       	pop	r11
    11c2:	af 90       	pop	r10
    11c4:	9f 90       	pop	r9
    11c6:	8f 90       	pop	r8
    11c8:	08 95       	ret

000011ca <rand_r>:
    11ca:	b9 cf       	rjmp	.-142    	; 0x113e <do_rand>

000011cc <rand>:
    11cc:	86 e0       	ldi	r24, 0x06	; 6
    11ce:	91 e0       	ldi	r25, 0x01	; 1
    11d0:	b6 cf       	rjmp	.-148    	; 0x113e <do_rand>

000011d2 <srand>:
    11d2:	a0 e0       	ldi	r26, 0x00	; 0
    11d4:	b0 e0       	ldi	r27, 0x00	; 0
    11d6:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    11da:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    11de:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    11e2:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    11e6:	08 95       	ret

000011e8 <atof>:
    11e8:	66 27       	eor	r22, r22
    11ea:	77 27       	eor	r23, r23
    11ec:	63 c2       	rjmp	.+1222   	; 0x16b4 <strtod>

000011ee <strdup>:
    11ee:	0f 93       	push	r16
    11f0:	1f 93       	push	r17
    11f2:	cf 93       	push	r28
    11f4:	df 93       	push	r29
    11f6:	8c 01       	movw	r16, r24
    11f8:	fc 01       	movw	r30, r24
    11fa:	01 90       	ld	r0, Z+
    11fc:	00 20       	and	r0, r0
    11fe:	e9 f7       	brne	.-6      	; 0x11fa <strdup+0xc>
    1200:	cf 01       	movw	r24, r30
    1202:	80 1b       	sub	r24, r16
    1204:	91 0b       	sbc	r25, r17
    1206:	6e de       	rcall	.-804    	; 0xee4 <malloc>
    1208:	ec 01       	movw	r28, r24
    120a:	00 97       	sbiw	r24, 0x00	; 0
    120c:	11 f0       	breq	.+4      	; 0x1212 <strdup+0x24>
    120e:	b8 01       	movw	r22, r16
    1210:	06 d0       	rcall	.+12     	; 0x121e <strcpy>
    1212:	ce 01       	movw	r24, r28
    1214:	df 91       	pop	r29
    1216:	cf 91       	pop	r28
    1218:	1f 91       	pop	r17
    121a:	0f 91       	pop	r16
    121c:	08 95       	ret

0000121e <strcpy>:
    121e:	fb 01       	movw	r30, r22
    1220:	dc 01       	movw	r26, r24
    1222:	01 90       	ld	r0, Z+
    1224:	0d 92       	st	X+, r0
    1226:	00 20       	and	r0, r0
    1228:	e1 f7       	brne	.-8      	; 0x1222 <strcpy+0x4>
    122a:	08 95       	ret

0000122c <strncpy>:
    122c:	fb 01       	movw	r30, r22
    122e:	dc 01       	movw	r26, r24
    1230:	41 50       	subi	r20, 0x01	; 1
    1232:	50 40       	sbci	r21, 0x00	; 0
    1234:	48 f0       	brcs	.+18     	; 0x1248 <strncpy+0x1c>
    1236:	01 90       	ld	r0, Z+
    1238:	0d 92       	st	X+, r0
    123a:	00 20       	and	r0, r0
    123c:	c9 f7       	brne	.-14     	; 0x1230 <strncpy+0x4>
    123e:	01 c0       	rjmp	.+2      	; 0x1242 <strncpy+0x16>
    1240:	1d 92       	st	X+, r1
    1242:	41 50       	subi	r20, 0x01	; 1
    1244:	50 40       	sbci	r21, 0x00	; 0
    1246:	e0 f7       	brcc	.-8      	; 0x1240 <strncpy+0x14>
    1248:	08 95       	ret

0000124a <strsep>:
    124a:	fc 01       	movw	r30, r24
    124c:	a0 81       	ld	r26, Z
    124e:	b1 81       	ldd	r27, Z+1	; 0x01
    1250:	ad 01       	movw	r20, r26
    1252:	10 96       	adiw	r26, 0x00	; 0
    1254:	81 f0       	breq	.+32     	; 0x1276 <strsep+0x2c>
    1256:	3d 91       	ld	r19, X+
    1258:	fb 01       	movw	r30, r22
    125a:	01 90       	ld	r0, Z+
    125c:	03 16       	cp	r0, r19
    125e:	01 10       	cpse	r0, r1
    1260:	e1 f7       	brne	.-8      	; 0x125a <strsep+0x10>
    1262:	c9 f7       	brne	.-14     	; 0x1256 <strsep+0xc>
    1264:	00 20       	and	r0, r0
    1266:	11 f4       	brne	.+4      	; 0x126c <strsep+0x22>
    1268:	d0 01       	movw	r26, r0
    126a:	02 c0       	rjmp	.+4      	; 0x1270 <strsep+0x26>
    126c:	1e 92       	st	-X, r1
    126e:	11 96       	adiw	r26, 0x01	; 1
    1270:	fc 01       	movw	r30, r24
    1272:	a0 83       	st	Z, r26
    1274:	b1 83       	std	Z+1, r27	; 0x01
    1276:	ca 01       	movw	r24, r20
    1278:	08 95       	ret

0000127a <sprintf>:
    127a:	0f 93       	push	r16
    127c:	1f 93       	push	r17
    127e:	cf 93       	push	r28
    1280:	df 93       	push	r29
    1282:	cd b7       	in	r28, 0x3d	; 61
    1284:	de b7       	in	r29, 0x3e	; 62
    1286:	2e 97       	sbiw	r28, 0x0e	; 14
    1288:	0f b6       	in	r0, 0x3f	; 63
    128a:	f8 94       	cli
    128c:	de bf       	out	0x3e, r29	; 62
    128e:	0f be       	out	0x3f, r0	; 63
    1290:	cd bf       	out	0x3d, r28	; 61
    1292:	0d 89       	ldd	r16, Y+21	; 0x15
    1294:	1e 89       	ldd	r17, Y+22	; 0x16
    1296:	86 e0       	ldi	r24, 0x06	; 6
    1298:	8c 83       	std	Y+4, r24	; 0x04
    129a:	1a 83       	std	Y+2, r17	; 0x02
    129c:	09 83       	std	Y+1, r16	; 0x01
    129e:	8f ef       	ldi	r24, 0xFF	; 255
    12a0:	9f e7       	ldi	r25, 0x7F	; 127
    12a2:	9e 83       	std	Y+6, r25	; 0x06
    12a4:	8d 83       	std	Y+5, r24	; 0x05
    12a6:	ae 01       	movw	r20, r28
    12a8:	47 5e       	subi	r20, 0xE7	; 231
    12aa:	5f 4f       	sbci	r21, 0xFF	; 255
    12ac:	6f 89       	ldd	r22, Y+23	; 0x17
    12ae:	78 8d       	ldd	r23, Y+24	; 0x18
    12b0:	ce 01       	movw	r24, r28
    12b2:	01 96       	adiw	r24, 0x01	; 1
    12b4:	11 d0       	rcall	.+34     	; 0x12d8 <vfprintf>
    12b6:	2f 81       	ldd	r18, Y+7	; 0x07
    12b8:	38 85       	ldd	r19, Y+8	; 0x08
    12ba:	f8 01       	movw	r30, r16
    12bc:	e2 0f       	add	r30, r18
    12be:	f3 1f       	adc	r31, r19
    12c0:	10 82       	st	Z, r1
    12c2:	2e 96       	adiw	r28, 0x0e	; 14
    12c4:	0f b6       	in	r0, 0x3f	; 63
    12c6:	f8 94       	cli
    12c8:	de bf       	out	0x3e, r29	; 62
    12ca:	0f be       	out	0x3f, r0	; 63
    12cc:	cd bf       	out	0x3d, r28	; 61
    12ce:	df 91       	pop	r29
    12d0:	cf 91       	pop	r28
    12d2:	1f 91       	pop	r17
    12d4:	0f 91       	pop	r16
    12d6:	08 95       	ret

000012d8 <vfprintf>:
    12d8:	2f 92       	push	r2
    12da:	3f 92       	push	r3
    12dc:	4f 92       	push	r4
    12de:	5f 92       	push	r5
    12e0:	6f 92       	push	r6
    12e2:	7f 92       	push	r7
    12e4:	8f 92       	push	r8
    12e6:	9f 92       	push	r9
    12e8:	af 92       	push	r10
    12ea:	bf 92       	push	r11
    12ec:	cf 92       	push	r12
    12ee:	df 92       	push	r13
    12f0:	ef 92       	push	r14
    12f2:	ff 92       	push	r15
    12f4:	0f 93       	push	r16
    12f6:	1f 93       	push	r17
    12f8:	cf 93       	push	r28
    12fa:	df 93       	push	r29
    12fc:	cd b7       	in	r28, 0x3d	; 61
    12fe:	de b7       	in	r29, 0x3e	; 62
    1300:	2c 97       	sbiw	r28, 0x0c	; 12
    1302:	0f b6       	in	r0, 0x3f	; 63
    1304:	f8 94       	cli
    1306:	de bf       	out	0x3e, r29	; 62
    1308:	0f be       	out	0x3f, r0	; 63
    130a:	cd bf       	out	0x3d, r28	; 61
    130c:	7c 01       	movw	r14, r24
    130e:	6b 01       	movw	r12, r22
    1310:	8a 01       	movw	r16, r20
    1312:	fc 01       	movw	r30, r24
    1314:	17 82       	std	Z+7, r1	; 0x07
    1316:	16 82       	std	Z+6, r1	; 0x06
    1318:	83 81       	ldd	r24, Z+3	; 0x03
    131a:	81 ff       	sbrs	r24, 1
    131c:	b0 c1       	rjmp	.+864    	; 0x167e <vfprintf+0x3a6>
    131e:	ce 01       	movw	r24, r28
    1320:	01 96       	adiw	r24, 0x01	; 1
    1322:	4c 01       	movw	r8, r24
    1324:	f7 01       	movw	r30, r14
    1326:	93 81       	ldd	r25, Z+3	; 0x03
    1328:	f6 01       	movw	r30, r12
    132a:	93 fd       	sbrc	r25, 3
    132c:	85 91       	lpm	r24, Z+
    132e:	93 ff       	sbrs	r25, 3
    1330:	81 91       	ld	r24, Z+
    1332:	6f 01       	movw	r12, r30
    1334:	88 23       	and	r24, r24
    1336:	09 f4       	brne	.+2      	; 0x133a <vfprintf+0x62>
    1338:	9e c1       	rjmp	.+828    	; 0x1676 <vfprintf+0x39e>
    133a:	85 32       	cpi	r24, 0x25	; 37
    133c:	39 f4       	brne	.+14     	; 0x134c <vfprintf+0x74>
    133e:	93 fd       	sbrc	r25, 3
    1340:	85 91       	lpm	r24, Z+
    1342:	93 ff       	sbrs	r25, 3
    1344:	81 91       	ld	r24, Z+
    1346:	6f 01       	movw	r12, r30
    1348:	85 32       	cpi	r24, 0x25	; 37
    134a:	21 f4       	brne	.+8      	; 0x1354 <vfprintf+0x7c>
    134c:	b7 01       	movw	r22, r14
    134e:	90 e0       	ldi	r25, 0x00	; 0
    1350:	4d d3       	rcall	.+1690   	; 0x19ec <fputc>
    1352:	e8 cf       	rjmp	.-48     	; 0x1324 <vfprintf+0x4c>
    1354:	51 2c       	mov	r5, r1
    1356:	31 2c       	mov	r3, r1
    1358:	20 e0       	ldi	r18, 0x00	; 0
    135a:	20 32       	cpi	r18, 0x20	; 32
    135c:	a0 f4       	brcc	.+40     	; 0x1386 <vfprintf+0xae>
    135e:	8b 32       	cpi	r24, 0x2B	; 43
    1360:	69 f0       	breq	.+26     	; 0x137c <vfprintf+0xa4>
    1362:	30 f4       	brcc	.+12     	; 0x1370 <vfprintf+0x98>
    1364:	80 32       	cpi	r24, 0x20	; 32
    1366:	59 f0       	breq	.+22     	; 0x137e <vfprintf+0xa6>
    1368:	83 32       	cpi	r24, 0x23	; 35
    136a:	69 f4       	brne	.+26     	; 0x1386 <vfprintf+0xae>
    136c:	20 61       	ori	r18, 0x10	; 16
    136e:	2c c0       	rjmp	.+88     	; 0x13c8 <vfprintf+0xf0>
    1370:	8d 32       	cpi	r24, 0x2D	; 45
    1372:	39 f0       	breq	.+14     	; 0x1382 <vfprintf+0xaa>
    1374:	80 33       	cpi	r24, 0x30	; 48
    1376:	39 f4       	brne	.+14     	; 0x1386 <vfprintf+0xae>
    1378:	21 60       	ori	r18, 0x01	; 1
    137a:	26 c0       	rjmp	.+76     	; 0x13c8 <vfprintf+0xf0>
    137c:	22 60       	ori	r18, 0x02	; 2
    137e:	24 60       	ori	r18, 0x04	; 4
    1380:	23 c0       	rjmp	.+70     	; 0x13c8 <vfprintf+0xf0>
    1382:	28 60       	ori	r18, 0x08	; 8
    1384:	21 c0       	rjmp	.+66     	; 0x13c8 <vfprintf+0xf0>
    1386:	27 fd       	sbrc	r18, 7
    1388:	27 c0       	rjmp	.+78     	; 0x13d8 <vfprintf+0x100>
    138a:	30 ed       	ldi	r19, 0xD0	; 208
    138c:	38 0f       	add	r19, r24
    138e:	3a 30       	cpi	r19, 0x0A	; 10
    1390:	78 f4       	brcc	.+30     	; 0x13b0 <vfprintf+0xd8>
    1392:	26 ff       	sbrs	r18, 6
    1394:	06 c0       	rjmp	.+12     	; 0x13a2 <vfprintf+0xca>
    1396:	fa e0       	ldi	r31, 0x0A	; 10
    1398:	5f 9e       	mul	r5, r31
    139a:	30 0d       	add	r19, r0
    139c:	11 24       	eor	r1, r1
    139e:	53 2e       	mov	r5, r19
    13a0:	13 c0       	rjmp	.+38     	; 0x13c8 <vfprintf+0xf0>
    13a2:	8a e0       	ldi	r24, 0x0A	; 10
    13a4:	38 9e       	mul	r3, r24
    13a6:	30 0d       	add	r19, r0
    13a8:	11 24       	eor	r1, r1
    13aa:	33 2e       	mov	r3, r19
    13ac:	20 62       	ori	r18, 0x20	; 32
    13ae:	0c c0       	rjmp	.+24     	; 0x13c8 <vfprintf+0xf0>
    13b0:	8e 32       	cpi	r24, 0x2E	; 46
    13b2:	21 f4       	brne	.+8      	; 0x13bc <vfprintf+0xe4>
    13b4:	26 fd       	sbrc	r18, 6
    13b6:	5f c1       	rjmp	.+702    	; 0x1676 <vfprintf+0x39e>
    13b8:	20 64       	ori	r18, 0x40	; 64
    13ba:	06 c0       	rjmp	.+12     	; 0x13c8 <vfprintf+0xf0>
    13bc:	8c 36       	cpi	r24, 0x6C	; 108
    13be:	11 f4       	brne	.+4      	; 0x13c4 <vfprintf+0xec>
    13c0:	20 68       	ori	r18, 0x80	; 128
    13c2:	02 c0       	rjmp	.+4      	; 0x13c8 <vfprintf+0xf0>
    13c4:	88 36       	cpi	r24, 0x68	; 104
    13c6:	41 f4       	brne	.+16     	; 0x13d8 <vfprintf+0x100>
    13c8:	f6 01       	movw	r30, r12
    13ca:	93 fd       	sbrc	r25, 3
    13cc:	85 91       	lpm	r24, Z+
    13ce:	93 ff       	sbrs	r25, 3
    13d0:	81 91       	ld	r24, Z+
    13d2:	6f 01       	movw	r12, r30
    13d4:	81 11       	cpse	r24, r1
    13d6:	c1 cf       	rjmp	.-126    	; 0x135a <vfprintf+0x82>
    13d8:	98 2f       	mov	r25, r24
    13da:	9f 7d       	andi	r25, 0xDF	; 223
    13dc:	95 54       	subi	r25, 0x45	; 69
    13de:	93 30       	cpi	r25, 0x03	; 3
    13e0:	28 f4       	brcc	.+10     	; 0x13ec <vfprintf+0x114>
    13e2:	0c 5f       	subi	r16, 0xFC	; 252
    13e4:	1f 4f       	sbci	r17, 0xFF	; 255
    13e6:	ff e3       	ldi	r31, 0x3F	; 63
    13e8:	f9 83       	std	Y+1, r31	; 0x01
    13ea:	0d c0       	rjmp	.+26     	; 0x1406 <vfprintf+0x12e>
    13ec:	83 36       	cpi	r24, 0x63	; 99
    13ee:	31 f0       	breq	.+12     	; 0x13fc <vfprintf+0x124>
    13f0:	83 37       	cpi	r24, 0x73	; 115
    13f2:	71 f0       	breq	.+28     	; 0x1410 <vfprintf+0x138>
    13f4:	83 35       	cpi	r24, 0x53	; 83
    13f6:	09 f0       	breq	.+2      	; 0x13fa <vfprintf+0x122>
    13f8:	57 c0       	rjmp	.+174    	; 0x14a8 <vfprintf+0x1d0>
    13fa:	21 c0       	rjmp	.+66     	; 0x143e <vfprintf+0x166>
    13fc:	f8 01       	movw	r30, r16
    13fe:	80 81       	ld	r24, Z
    1400:	89 83       	std	Y+1, r24	; 0x01
    1402:	0e 5f       	subi	r16, 0xFE	; 254
    1404:	1f 4f       	sbci	r17, 0xFF	; 255
    1406:	44 24       	eor	r4, r4
    1408:	43 94       	inc	r4
    140a:	51 2c       	mov	r5, r1
    140c:	54 01       	movw	r10, r8
    140e:	14 c0       	rjmp	.+40     	; 0x1438 <vfprintf+0x160>
    1410:	38 01       	movw	r6, r16
    1412:	f2 e0       	ldi	r31, 0x02	; 2
    1414:	6f 0e       	add	r6, r31
    1416:	71 1c       	adc	r7, r1
    1418:	f8 01       	movw	r30, r16
    141a:	a0 80       	ld	r10, Z
    141c:	b1 80       	ldd	r11, Z+1	; 0x01
    141e:	26 ff       	sbrs	r18, 6
    1420:	03 c0       	rjmp	.+6      	; 0x1428 <vfprintf+0x150>
    1422:	65 2d       	mov	r22, r5
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	02 c0       	rjmp	.+4      	; 0x142c <vfprintf+0x154>
    1428:	6f ef       	ldi	r22, 0xFF	; 255
    142a:	7f ef       	ldi	r23, 0xFF	; 255
    142c:	c5 01       	movw	r24, r10
    142e:	2c 87       	std	Y+12, r18	; 0x0c
    1430:	d2 d2       	rcall	.+1444   	; 0x19d6 <strnlen>
    1432:	2c 01       	movw	r4, r24
    1434:	83 01       	movw	r16, r6
    1436:	2c 85       	ldd	r18, Y+12	; 0x0c
    1438:	2f 77       	andi	r18, 0x7F	; 127
    143a:	22 2e       	mov	r2, r18
    143c:	16 c0       	rjmp	.+44     	; 0x146a <vfprintf+0x192>
    143e:	38 01       	movw	r6, r16
    1440:	f2 e0       	ldi	r31, 0x02	; 2
    1442:	6f 0e       	add	r6, r31
    1444:	71 1c       	adc	r7, r1
    1446:	f8 01       	movw	r30, r16
    1448:	a0 80       	ld	r10, Z
    144a:	b1 80       	ldd	r11, Z+1	; 0x01
    144c:	26 ff       	sbrs	r18, 6
    144e:	03 c0       	rjmp	.+6      	; 0x1456 <vfprintf+0x17e>
    1450:	65 2d       	mov	r22, r5
    1452:	70 e0       	ldi	r23, 0x00	; 0
    1454:	02 c0       	rjmp	.+4      	; 0x145a <vfprintf+0x182>
    1456:	6f ef       	ldi	r22, 0xFF	; 255
    1458:	7f ef       	ldi	r23, 0xFF	; 255
    145a:	c5 01       	movw	r24, r10
    145c:	2c 87       	std	Y+12, r18	; 0x0c
    145e:	b0 d2       	rcall	.+1376   	; 0x19c0 <strnlen_P>
    1460:	2c 01       	movw	r4, r24
    1462:	2c 85       	ldd	r18, Y+12	; 0x0c
    1464:	20 68       	ori	r18, 0x80	; 128
    1466:	22 2e       	mov	r2, r18
    1468:	83 01       	movw	r16, r6
    146a:	23 fc       	sbrc	r2, 3
    146c:	19 c0       	rjmp	.+50     	; 0x14a0 <vfprintf+0x1c8>
    146e:	83 2d       	mov	r24, r3
    1470:	90 e0       	ldi	r25, 0x00	; 0
    1472:	48 16       	cp	r4, r24
    1474:	59 06       	cpc	r5, r25
    1476:	a0 f4       	brcc	.+40     	; 0x14a0 <vfprintf+0x1c8>
    1478:	b7 01       	movw	r22, r14
    147a:	80 e2       	ldi	r24, 0x20	; 32
    147c:	90 e0       	ldi	r25, 0x00	; 0
    147e:	b6 d2       	rcall	.+1388   	; 0x19ec <fputc>
    1480:	3a 94       	dec	r3
    1482:	f5 cf       	rjmp	.-22     	; 0x146e <vfprintf+0x196>
    1484:	f5 01       	movw	r30, r10
    1486:	27 fc       	sbrc	r2, 7
    1488:	85 91       	lpm	r24, Z+
    148a:	27 fe       	sbrs	r2, 7
    148c:	81 91       	ld	r24, Z+
    148e:	5f 01       	movw	r10, r30
    1490:	b7 01       	movw	r22, r14
    1492:	90 e0       	ldi	r25, 0x00	; 0
    1494:	ab d2       	rcall	.+1366   	; 0x19ec <fputc>
    1496:	31 10       	cpse	r3, r1
    1498:	3a 94       	dec	r3
    149a:	f1 e0       	ldi	r31, 0x01	; 1
    149c:	4f 1a       	sub	r4, r31
    149e:	51 08       	sbc	r5, r1
    14a0:	41 14       	cp	r4, r1
    14a2:	51 04       	cpc	r5, r1
    14a4:	79 f7       	brne	.-34     	; 0x1484 <vfprintf+0x1ac>
    14a6:	de c0       	rjmp	.+444    	; 0x1664 <vfprintf+0x38c>
    14a8:	84 36       	cpi	r24, 0x64	; 100
    14aa:	11 f0       	breq	.+4      	; 0x14b0 <vfprintf+0x1d8>
    14ac:	89 36       	cpi	r24, 0x69	; 105
    14ae:	31 f5       	brne	.+76     	; 0x14fc <vfprintf+0x224>
    14b0:	f8 01       	movw	r30, r16
    14b2:	27 ff       	sbrs	r18, 7
    14b4:	07 c0       	rjmp	.+14     	; 0x14c4 <vfprintf+0x1ec>
    14b6:	60 81       	ld	r22, Z
    14b8:	71 81       	ldd	r23, Z+1	; 0x01
    14ba:	82 81       	ldd	r24, Z+2	; 0x02
    14bc:	93 81       	ldd	r25, Z+3	; 0x03
    14be:	0c 5f       	subi	r16, 0xFC	; 252
    14c0:	1f 4f       	sbci	r17, 0xFF	; 255
    14c2:	08 c0       	rjmp	.+16     	; 0x14d4 <vfprintf+0x1fc>
    14c4:	60 81       	ld	r22, Z
    14c6:	71 81       	ldd	r23, Z+1	; 0x01
    14c8:	07 2e       	mov	r0, r23
    14ca:	00 0c       	add	r0, r0
    14cc:	88 0b       	sbc	r24, r24
    14ce:	99 0b       	sbc	r25, r25
    14d0:	0e 5f       	subi	r16, 0xFE	; 254
    14d2:	1f 4f       	sbci	r17, 0xFF	; 255
    14d4:	2f 76       	andi	r18, 0x6F	; 111
    14d6:	72 2e       	mov	r7, r18
    14d8:	97 ff       	sbrs	r25, 7
    14da:	09 c0       	rjmp	.+18     	; 0x14ee <vfprintf+0x216>
    14dc:	90 95       	com	r25
    14de:	80 95       	com	r24
    14e0:	70 95       	com	r23
    14e2:	61 95       	neg	r22
    14e4:	7f 4f       	sbci	r23, 0xFF	; 255
    14e6:	8f 4f       	sbci	r24, 0xFF	; 255
    14e8:	9f 4f       	sbci	r25, 0xFF	; 255
    14ea:	20 68       	ori	r18, 0x80	; 128
    14ec:	72 2e       	mov	r7, r18
    14ee:	2a e0       	ldi	r18, 0x0A	; 10
    14f0:	30 e0       	ldi	r19, 0x00	; 0
    14f2:	a4 01       	movw	r20, r8
    14f4:	b3 d2       	rcall	.+1382   	; 0x1a5c <__ultoa_invert>
    14f6:	a8 2e       	mov	r10, r24
    14f8:	a8 18       	sub	r10, r8
    14fa:	43 c0       	rjmp	.+134    	; 0x1582 <vfprintf+0x2aa>
    14fc:	85 37       	cpi	r24, 0x75	; 117
    14fe:	29 f4       	brne	.+10     	; 0x150a <vfprintf+0x232>
    1500:	2f 7e       	andi	r18, 0xEF	; 239
    1502:	b2 2e       	mov	r11, r18
    1504:	2a e0       	ldi	r18, 0x0A	; 10
    1506:	30 e0       	ldi	r19, 0x00	; 0
    1508:	25 c0       	rjmp	.+74     	; 0x1554 <vfprintf+0x27c>
    150a:	f2 2f       	mov	r31, r18
    150c:	f9 7f       	andi	r31, 0xF9	; 249
    150e:	bf 2e       	mov	r11, r31
    1510:	8f 36       	cpi	r24, 0x6F	; 111
    1512:	c1 f0       	breq	.+48     	; 0x1544 <vfprintf+0x26c>
    1514:	18 f4       	brcc	.+6      	; 0x151c <vfprintf+0x244>
    1516:	88 35       	cpi	r24, 0x58	; 88
    1518:	79 f0       	breq	.+30     	; 0x1538 <vfprintf+0x260>
    151a:	ad c0       	rjmp	.+346    	; 0x1676 <vfprintf+0x39e>
    151c:	80 37       	cpi	r24, 0x70	; 112
    151e:	19 f0       	breq	.+6      	; 0x1526 <vfprintf+0x24e>
    1520:	88 37       	cpi	r24, 0x78	; 120
    1522:	21 f0       	breq	.+8      	; 0x152c <vfprintf+0x254>
    1524:	a8 c0       	rjmp	.+336    	; 0x1676 <vfprintf+0x39e>
    1526:	2f 2f       	mov	r18, r31
    1528:	20 61       	ori	r18, 0x10	; 16
    152a:	b2 2e       	mov	r11, r18
    152c:	b4 fe       	sbrs	r11, 4
    152e:	0d c0       	rjmp	.+26     	; 0x154a <vfprintf+0x272>
    1530:	8b 2d       	mov	r24, r11
    1532:	84 60       	ori	r24, 0x04	; 4
    1534:	b8 2e       	mov	r11, r24
    1536:	09 c0       	rjmp	.+18     	; 0x154a <vfprintf+0x272>
    1538:	24 ff       	sbrs	r18, 4
    153a:	0a c0       	rjmp	.+20     	; 0x1550 <vfprintf+0x278>
    153c:	9f 2f       	mov	r25, r31
    153e:	96 60       	ori	r25, 0x06	; 6
    1540:	b9 2e       	mov	r11, r25
    1542:	06 c0       	rjmp	.+12     	; 0x1550 <vfprintf+0x278>
    1544:	28 e0       	ldi	r18, 0x08	; 8
    1546:	30 e0       	ldi	r19, 0x00	; 0
    1548:	05 c0       	rjmp	.+10     	; 0x1554 <vfprintf+0x27c>
    154a:	20 e1       	ldi	r18, 0x10	; 16
    154c:	30 e0       	ldi	r19, 0x00	; 0
    154e:	02 c0       	rjmp	.+4      	; 0x1554 <vfprintf+0x27c>
    1550:	20 e1       	ldi	r18, 0x10	; 16
    1552:	32 e0       	ldi	r19, 0x02	; 2
    1554:	f8 01       	movw	r30, r16
    1556:	b7 fe       	sbrs	r11, 7
    1558:	07 c0       	rjmp	.+14     	; 0x1568 <vfprintf+0x290>
    155a:	60 81       	ld	r22, Z
    155c:	71 81       	ldd	r23, Z+1	; 0x01
    155e:	82 81       	ldd	r24, Z+2	; 0x02
    1560:	93 81       	ldd	r25, Z+3	; 0x03
    1562:	0c 5f       	subi	r16, 0xFC	; 252
    1564:	1f 4f       	sbci	r17, 0xFF	; 255
    1566:	06 c0       	rjmp	.+12     	; 0x1574 <vfprintf+0x29c>
    1568:	60 81       	ld	r22, Z
    156a:	71 81       	ldd	r23, Z+1	; 0x01
    156c:	80 e0       	ldi	r24, 0x00	; 0
    156e:	90 e0       	ldi	r25, 0x00	; 0
    1570:	0e 5f       	subi	r16, 0xFE	; 254
    1572:	1f 4f       	sbci	r17, 0xFF	; 255
    1574:	a4 01       	movw	r20, r8
    1576:	72 d2       	rcall	.+1252   	; 0x1a5c <__ultoa_invert>
    1578:	a8 2e       	mov	r10, r24
    157a:	a8 18       	sub	r10, r8
    157c:	fb 2d       	mov	r31, r11
    157e:	ff 77       	andi	r31, 0x7F	; 127
    1580:	7f 2e       	mov	r7, r31
    1582:	76 fe       	sbrs	r7, 6
    1584:	0b c0       	rjmp	.+22     	; 0x159c <vfprintf+0x2c4>
    1586:	37 2d       	mov	r19, r7
    1588:	3e 7f       	andi	r19, 0xFE	; 254
    158a:	a5 14       	cp	r10, r5
    158c:	50 f4       	brcc	.+20     	; 0x15a2 <vfprintf+0x2ca>
    158e:	74 fe       	sbrs	r7, 4
    1590:	0a c0       	rjmp	.+20     	; 0x15a6 <vfprintf+0x2ce>
    1592:	72 fc       	sbrc	r7, 2
    1594:	08 c0       	rjmp	.+16     	; 0x15a6 <vfprintf+0x2ce>
    1596:	37 2d       	mov	r19, r7
    1598:	3e 7e       	andi	r19, 0xEE	; 238
    159a:	05 c0       	rjmp	.+10     	; 0x15a6 <vfprintf+0x2ce>
    159c:	ba 2c       	mov	r11, r10
    159e:	37 2d       	mov	r19, r7
    15a0:	03 c0       	rjmp	.+6      	; 0x15a8 <vfprintf+0x2d0>
    15a2:	ba 2c       	mov	r11, r10
    15a4:	01 c0       	rjmp	.+2      	; 0x15a8 <vfprintf+0x2d0>
    15a6:	b5 2c       	mov	r11, r5
    15a8:	34 ff       	sbrs	r19, 4
    15aa:	0d c0       	rjmp	.+26     	; 0x15c6 <vfprintf+0x2ee>
    15ac:	fe 01       	movw	r30, r28
    15ae:	ea 0d       	add	r30, r10
    15b0:	f1 1d       	adc	r31, r1
    15b2:	80 81       	ld	r24, Z
    15b4:	80 33       	cpi	r24, 0x30	; 48
    15b6:	11 f4       	brne	.+4      	; 0x15bc <vfprintf+0x2e4>
    15b8:	39 7e       	andi	r19, 0xE9	; 233
    15ba:	09 c0       	rjmp	.+18     	; 0x15ce <vfprintf+0x2f6>
    15bc:	32 ff       	sbrs	r19, 2
    15be:	06 c0       	rjmp	.+12     	; 0x15cc <vfprintf+0x2f4>
    15c0:	b3 94       	inc	r11
    15c2:	b3 94       	inc	r11
    15c4:	04 c0       	rjmp	.+8      	; 0x15ce <vfprintf+0x2f6>
    15c6:	83 2f       	mov	r24, r19
    15c8:	86 78       	andi	r24, 0x86	; 134
    15ca:	09 f0       	breq	.+2      	; 0x15ce <vfprintf+0x2f6>
    15cc:	b3 94       	inc	r11
    15ce:	33 fd       	sbrc	r19, 3
    15d0:	12 c0       	rjmp	.+36     	; 0x15f6 <vfprintf+0x31e>
    15d2:	30 ff       	sbrs	r19, 0
    15d4:	06 c0       	rjmp	.+12     	; 0x15e2 <vfprintf+0x30a>
    15d6:	5a 2c       	mov	r5, r10
    15d8:	b3 14       	cp	r11, r3
    15da:	18 f4       	brcc	.+6      	; 0x15e2 <vfprintf+0x30a>
    15dc:	53 0c       	add	r5, r3
    15de:	5b 18       	sub	r5, r11
    15e0:	b3 2c       	mov	r11, r3
    15e2:	b3 14       	cp	r11, r3
    15e4:	60 f4       	brcc	.+24     	; 0x15fe <vfprintf+0x326>
    15e6:	b7 01       	movw	r22, r14
    15e8:	80 e2       	ldi	r24, 0x20	; 32
    15ea:	90 e0       	ldi	r25, 0x00	; 0
    15ec:	3c 87       	std	Y+12, r19	; 0x0c
    15ee:	fe d1       	rcall	.+1020   	; 0x19ec <fputc>
    15f0:	b3 94       	inc	r11
    15f2:	3c 85       	ldd	r19, Y+12	; 0x0c
    15f4:	f6 cf       	rjmp	.-20     	; 0x15e2 <vfprintf+0x30a>
    15f6:	b3 14       	cp	r11, r3
    15f8:	10 f4       	brcc	.+4      	; 0x15fe <vfprintf+0x326>
    15fa:	3b 18       	sub	r3, r11
    15fc:	01 c0       	rjmp	.+2      	; 0x1600 <vfprintf+0x328>
    15fe:	31 2c       	mov	r3, r1
    1600:	34 ff       	sbrs	r19, 4
    1602:	11 c0       	rjmp	.+34     	; 0x1626 <vfprintf+0x34e>
    1604:	b7 01       	movw	r22, r14
    1606:	80 e3       	ldi	r24, 0x30	; 48
    1608:	90 e0       	ldi	r25, 0x00	; 0
    160a:	3c 87       	std	Y+12, r19	; 0x0c
    160c:	ef d1       	rcall	.+990    	; 0x19ec <fputc>
    160e:	3c 85       	ldd	r19, Y+12	; 0x0c
    1610:	32 ff       	sbrs	r19, 2
    1612:	16 c0       	rjmp	.+44     	; 0x1640 <vfprintf+0x368>
    1614:	31 fd       	sbrc	r19, 1
    1616:	03 c0       	rjmp	.+6      	; 0x161e <vfprintf+0x346>
    1618:	88 e7       	ldi	r24, 0x78	; 120
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	02 c0       	rjmp	.+4      	; 0x1622 <vfprintf+0x34a>
    161e:	88 e5       	ldi	r24, 0x58	; 88
    1620:	90 e0       	ldi	r25, 0x00	; 0
    1622:	b7 01       	movw	r22, r14
    1624:	0c c0       	rjmp	.+24     	; 0x163e <vfprintf+0x366>
    1626:	83 2f       	mov	r24, r19
    1628:	86 78       	andi	r24, 0x86	; 134
    162a:	51 f0       	breq	.+20     	; 0x1640 <vfprintf+0x368>
    162c:	31 ff       	sbrs	r19, 1
    162e:	02 c0       	rjmp	.+4      	; 0x1634 <vfprintf+0x35c>
    1630:	8b e2       	ldi	r24, 0x2B	; 43
    1632:	01 c0       	rjmp	.+2      	; 0x1636 <vfprintf+0x35e>
    1634:	80 e2       	ldi	r24, 0x20	; 32
    1636:	37 fd       	sbrc	r19, 7
    1638:	8d e2       	ldi	r24, 0x2D	; 45
    163a:	b7 01       	movw	r22, r14
    163c:	90 e0       	ldi	r25, 0x00	; 0
    163e:	d6 d1       	rcall	.+940    	; 0x19ec <fputc>
    1640:	a5 14       	cp	r10, r5
    1642:	30 f4       	brcc	.+12     	; 0x1650 <vfprintf+0x378>
    1644:	b7 01       	movw	r22, r14
    1646:	80 e3       	ldi	r24, 0x30	; 48
    1648:	90 e0       	ldi	r25, 0x00	; 0
    164a:	d0 d1       	rcall	.+928    	; 0x19ec <fputc>
    164c:	5a 94       	dec	r5
    164e:	f8 cf       	rjmp	.-16     	; 0x1640 <vfprintf+0x368>
    1650:	aa 94       	dec	r10
    1652:	f4 01       	movw	r30, r8
    1654:	ea 0d       	add	r30, r10
    1656:	f1 1d       	adc	r31, r1
    1658:	80 81       	ld	r24, Z
    165a:	b7 01       	movw	r22, r14
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	c6 d1       	rcall	.+908    	; 0x19ec <fputc>
    1660:	a1 10       	cpse	r10, r1
    1662:	f6 cf       	rjmp	.-20     	; 0x1650 <vfprintf+0x378>
    1664:	33 20       	and	r3, r3
    1666:	09 f4       	brne	.+2      	; 0x166a <vfprintf+0x392>
    1668:	5d ce       	rjmp	.-838    	; 0x1324 <vfprintf+0x4c>
    166a:	b7 01       	movw	r22, r14
    166c:	80 e2       	ldi	r24, 0x20	; 32
    166e:	90 e0       	ldi	r25, 0x00	; 0
    1670:	bd d1       	rcall	.+890    	; 0x19ec <fputc>
    1672:	3a 94       	dec	r3
    1674:	f7 cf       	rjmp	.-18     	; 0x1664 <vfprintf+0x38c>
    1676:	f7 01       	movw	r30, r14
    1678:	86 81       	ldd	r24, Z+6	; 0x06
    167a:	97 81       	ldd	r25, Z+7	; 0x07
    167c:	02 c0       	rjmp	.+4      	; 0x1682 <vfprintf+0x3aa>
    167e:	8f ef       	ldi	r24, 0xFF	; 255
    1680:	9f ef       	ldi	r25, 0xFF	; 255
    1682:	2c 96       	adiw	r28, 0x0c	; 12
    1684:	0f b6       	in	r0, 0x3f	; 63
    1686:	f8 94       	cli
    1688:	de bf       	out	0x3e, r29	; 62
    168a:	0f be       	out	0x3f, r0	; 63
    168c:	cd bf       	out	0x3d, r28	; 61
    168e:	df 91       	pop	r29
    1690:	cf 91       	pop	r28
    1692:	1f 91       	pop	r17
    1694:	0f 91       	pop	r16
    1696:	ff 90       	pop	r15
    1698:	ef 90       	pop	r14
    169a:	df 90       	pop	r13
    169c:	cf 90       	pop	r12
    169e:	bf 90       	pop	r11
    16a0:	af 90       	pop	r10
    16a2:	9f 90       	pop	r9
    16a4:	8f 90       	pop	r8
    16a6:	7f 90       	pop	r7
    16a8:	6f 90       	pop	r6
    16aa:	5f 90       	pop	r5
    16ac:	4f 90       	pop	r4
    16ae:	3f 90       	pop	r3
    16b0:	2f 90       	pop	r2
    16b2:	08 95       	ret

000016b4 <strtod>:
    16b4:	6f 92       	push	r6
    16b6:	7f 92       	push	r7
    16b8:	8f 92       	push	r8
    16ba:	9f 92       	push	r9
    16bc:	af 92       	push	r10
    16be:	bf 92       	push	r11
    16c0:	cf 92       	push	r12
    16c2:	df 92       	push	r13
    16c4:	ef 92       	push	r14
    16c6:	ff 92       	push	r15
    16c8:	0f 93       	push	r16
    16ca:	1f 93       	push	r17
    16cc:	cf 93       	push	r28
    16ce:	df 93       	push	r29
    16d0:	ec 01       	movw	r28, r24
    16d2:	7b 01       	movw	r14, r22
    16d4:	61 15       	cp	r22, r1
    16d6:	71 05       	cpc	r23, r1
    16d8:	19 f0       	breq	.+6      	; 0x16e0 <strtod+0x2c>
    16da:	db 01       	movw	r26, r22
    16dc:	8d 93       	st	X+, r24
    16de:	9c 93       	st	X, r25
    16e0:	8e 01       	movw	r16, r28
    16e2:	0f 5f       	subi	r16, 0xFF	; 255
    16e4:	1f 4f       	sbci	r17, 0xFF	; 255
    16e6:	78 80       	ld	r7, Y
    16e8:	87 2d       	mov	r24, r7
    16ea:	90 e0       	ldi	r25, 0x00	; 0
    16ec:	49 d1       	rcall	.+658    	; 0x1980 <isspace>
    16ee:	89 2b       	or	r24, r25
    16f0:	11 f0       	breq	.+4      	; 0x16f6 <strtod+0x42>
    16f2:	e8 01       	movw	r28, r16
    16f4:	f5 cf       	rjmp	.-22     	; 0x16e0 <strtod+0x2c>
    16f6:	bd e2       	ldi	r27, 0x2D	; 45
    16f8:	7b 12       	cpse	r7, r27
    16fa:	05 c0       	rjmp	.+10     	; 0x1706 <strtod+0x52>
    16fc:	0f 5f       	subi	r16, 0xFF	; 255
    16fe:	1f 4f       	sbci	r17, 0xFF	; 255
    1700:	79 80       	ldd	r7, Y+1	; 0x01
    1702:	c1 e0       	ldi	r28, 0x01	; 1
    1704:	08 c0       	rjmp	.+16     	; 0x1716 <strtod+0x62>
    1706:	eb e2       	ldi	r30, 0x2B	; 43
    1708:	7e 12       	cpse	r7, r30
    170a:	04 c0       	rjmp	.+8      	; 0x1714 <strtod+0x60>
    170c:	8e 01       	movw	r16, r28
    170e:	0e 5f       	subi	r16, 0xFE	; 254
    1710:	1f 4f       	sbci	r17, 0xFF	; 255
    1712:	79 80       	ldd	r7, Y+1	; 0x01
    1714:	c0 e0       	ldi	r28, 0x00	; 0
    1716:	68 01       	movw	r12, r16
    1718:	f1 e0       	ldi	r31, 0x01	; 1
    171a:	cf 1a       	sub	r12, r31
    171c:	d1 08       	sbc	r13, r1
    171e:	43 e0       	ldi	r20, 0x03	; 3
    1720:	50 e0       	ldi	r21, 0x00	; 0
    1722:	64 e9       	ldi	r22, 0x94	; 148
    1724:	70 e0       	ldi	r23, 0x00	; 0
    1726:	c6 01       	movw	r24, r12
    1728:	33 d1       	rcall	.+614    	; 0x1990 <strncasecmp_P>
    172a:	89 2b       	or	r24, r25
    172c:	e9 f4       	brne	.+58     	; 0x1768 <strtod+0xb4>
    172e:	68 01       	movw	r12, r16
    1730:	22 e0       	ldi	r18, 0x02	; 2
    1732:	c2 0e       	add	r12, r18
    1734:	d1 1c       	adc	r13, r1
    1736:	45 e0       	ldi	r20, 0x05	; 5
    1738:	50 e0       	ldi	r21, 0x00	; 0
    173a:	6f e8       	ldi	r22, 0x8F	; 143
    173c:	70 e0       	ldi	r23, 0x00	; 0
    173e:	c6 01       	movw	r24, r12
    1740:	27 d1       	rcall	.+590    	; 0x1990 <strncasecmp_P>
    1742:	89 2b       	or	r24, r25
    1744:	21 f4       	brne	.+8      	; 0x174e <strtod+0x9a>
    1746:	68 01       	movw	r12, r16
    1748:	87 e0       	ldi	r24, 0x07	; 7
    174a:	c8 0e       	add	r12, r24
    174c:	d1 1c       	adc	r13, r1
    174e:	e1 14       	cp	r14, r1
    1750:	f1 04       	cpc	r15, r1
    1752:	19 f0       	breq	.+6      	; 0x175a <strtod+0xa6>
    1754:	d7 01       	movw	r26, r14
    1756:	cd 92       	st	X+, r12
    1758:	dc 92       	st	X, r13
    175a:	c1 11       	cpse	r28, r1
    175c:	f9 c0       	rjmp	.+498    	; 0x1950 <strtod+0x29c>
    175e:	60 e0       	ldi	r22, 0x00	; 0
    1760:	70 e0       	ldi	r23, 0x00	; 0
    1762:	80 e8       	ldi	r24, 0x80	; 128
    1764:	9f e7       	ldi	r25, 0x7F	; 127
    1766:	fd c0       	rjmp	.+506    	; 0x1962 <strtod+0x2ae>
    1768:	43 e0       	ldi	r20, 0x03	; 3
    176a:	50 e0       	ldi	r21, 0x00	; 0
    176c:	6c e8       	ldi	r22, 0x8C	; 140
    176e:	70 e0       	ldi	r23, 0x00	; 0
    1770:	c6 01       	movw	r24, r12
    1772:	0e d1       	rcall	.+540    	; 0x1990 <strncasecmp_P>
    1774:	89 2b       	or	r24, r25
    1776:	51 f4       	brne	.+20     	; 0x178c <strtod+0xd8>
    1778:	e1 14       	cp	r14, r1
    177a:	f1 04       	cpc	r15, r1
    177c:	09 f4       	brne	.+2      	; 0x1780 <strtod+0xcc>
    177e:	ed c0       	rjmp	.+474    	; 0x195a <strtod+0x2a6>
    1780:	0e 5f       	subi	r16, 0xFE	; 254
    1782:	1f 4f       	sbci	r17, 0xFF	; 255
    1784:	f7 01       	movw	r30, r14
    1786:	11 83       	std	Z+1, r17	; 0x01
    1788:	00 83       	st	Z, r16
    178a:	e7 c0       	rjmp	.+462    	; 0x195a <strtod+0x2a6>
    178c:	68 01       	movw	r12, r16
    178e:	60 e0       	ldi	r22, 0x00	; 0
    1790:	70 e0       	ldi	r23, 0x00	; 0
    1792:	cb 01       	movw	r24, r22
    1794:	00 e0       	ldi	r16, 0x00	; 0
    1796:	10 e0       	ldi	r17, 0x00	; 0
    1798:	f6 01       	movw	r30, r12
    179a:	d0 ed       	ldi	r29, 0xD0	; 208
    179c:	d7 0d       	add	r29, r7
    179e:	da 30       	cpi	r29, 0x0A	; 10
    17a0:	50 f5       	brcc	.+84     	; 0x17f6 <strtod+0x142>
    17a2:	2c 2f       	mov	r18, r28
    17a4:	22 60       	ori	r18, 0x02	; 2
    17a6:	62 2e       	mov	r6, r18
    17a8:	2c 2f       	mov	r18, r28
    17aa:	28 70       	andi	r18, 0x08	; 8
    17ac:	c2 ff       	sbrs	r28, 2
    17ae:	05 c0       	rjmp	.+10     	; 0x17ba <strtod+0x106>
    17b0:	21 11       	cpse	r18, r1
    17b2:	27 c0       	rjmp	.+78     	; 0x1802 <strtod+0x14e>
    17b4:	0f 5f       	subi	r16, 0xFF	; 255
    17b6:	1f 4f       	sbci	r17, 0xFF	; 255
    17b8:	24 c0       	rjmp	.+72     	; 0x1802 <strtod+0x14e>
    17ba:	22 23       	and	r18, r18
    17bc:	11 f0       	breq	.+4      	; 0x17c2 <strtod+0x10e>
    17be:	01 50       	subi	r16, 0x01	; 1
    17c0:	11 09       	sbc	r17, r1
    17c2:	a5 e0       	ldi	r26, 0x05	; 5
    17c4:	b0 e0       	ldi	r27, 0x00	; 0
    17c6:	9b 01       	movw	r18, r22
    17c8:	ac 01       	movw	r20, r24
    17ca:	c9 d1       	rcall	.+914    	; 0x1b5e <__muluhisi3>
    17cc:	4b 01       	movw	r8, r22
    17ce:	5c 01       	movw	r10, r24
    17d0:	88 0c       	add	r8, r8
    17d2:	99 1c       	adc	r9, r9
    17d4:	aa 1c       	adc	r10, r10
    17d6:	bb 1c       	adc	r11, r11
    17d8:	c5 01       	movw	r24, r10
    17da:	b4 01       	movw	r22, r8
    17dc:	6d 0f       	add	r22, r29
    17de:	71 1d       	adc	r23, r1
    17e0:	81 1d       	adc	r24, r1
    17e2:	91 1d       	adc	r25, r1
    17e4:	68 39       	cpi	r22, 0x98	; 152
    17e6:	a9 e9       	ldi	r26, 0x99	; 153
    17e8:	7a 07       	cpc	r23, r26
    17ea:	8a 07       	cpc	r24, r26
    17ec:	a9 e1       	ldi	r26, 0x19	; 25
    17ee:	9a 07       	cpc	r25, r26
    17f0:	40 f0       	brcs	.+16     	; 0x1802 <strtod+0x14e>
    17f2:	c6 60       	ori	r28, 0x06	; 6
    17f4:	05 c0       	rjmp	.+10     	; 0x1800 <strtod+0x14c>
    17f6:	de 3f       	cpi	r29, 0xFE	; 254
    17f8:	51 f4       	brne	.+20     	; 0x180e <strtod+0x15a>
    17fa:	c3 fd       	sbrc	r28, 3
    17fc:	44 c0       	rjmp	.+136    	; 0x1886 <strtod+0x1d2>
    17fe:	c8 60       	ori	r28, 0x08	; 8
    1800:	6c 2e       	mov	r6, r28
    1802:	bf ef       	ldi	r27, 0xFF	; 255
    1804:	cb 1a       	sub	r12, r27
    1806:	db 0a       	sbc	r13, r27
    1808:	70 80       	ld	r7, Z
    180a:	c6 2d       	mov	r28, r6
    180c:	c5 cf       	rjmp	.-118    	; 0x1798 <strtod+0xe4>
    180e:	2d 2f       	mov	r18, r29
    1810:	2f 7d       	andi	r18, 0xDF	; 223
    1812:	25 31       	cpi	r18, 0x15	; 21
    1814:	c1 f5       	brne	.+112    	; 0x1886 <strtod+0x1d2>
    1816:	40 81       	ld	r20, Z
    1818:	4d 32       	cpi	r20, 0x2D	; 45
    181a:	11 f4       	brne	.+4      	; 0x1820 <strtod+0x16c>
    181c:	c0 61       	ori	r28, 0x10	; 16
    181e:	06 c0       	rjmp	.+12     	; 0x182c <strtod+0x178>
    1820:	4b 32       	cpi	r20, 0x2B	; 43
    1822:	21 f0       	breq	.+8      	; 0x182c <strtod+0x178>
    1824:	31 96       	adiw	r30, 0x01	; 1
    1826:	21 e0       	ldi	r18, 0x01	; 1
    1828:	30 e0       	ldi	r19, 0x00	; 0
    182a:	06 c0       	rjmp	.+12     	; 0x1838 <strtod+0x184>
    182c:	32 96       	adiw	r30, 0x02	; 2
    182e:	d6 01       	movw	r26, r12
    1830:	11 96       	adiw	r26, 0x01	; 1
    1832:	4c 91       	ld	r20, X
    1834:	22 e0       	ldi	r18, 0x02	; 2
    1836:	30 e0       	ldi	r19, 0x00	; 0
    1838:	a0 ed       	ldi	r26, 0xD0	; 208
    183a:	a4 0f       	add	r26, r20
    183c:	aa 30       	cpi	r26, 0x0A	; 10
    183e:	18 f0       	brcs	.+6      	; 0x1846 <strtod+0x192>
    1840:	e2 1b       	sub	r30, r18
    1842:	f3 0b       	sbc	r31, r19
    1844:	20 c0       	rjmp	.+64     	; 0x1886 <strtod+0x1d2>
    1846:	40 e0       	ldi	r20, 0x00	; 0
    1848:	50 e0       	ldi	r21, 0x00	; 0
    184a:	40 38       	cpi	r20, 0x80	; 128
    184c:	bc e0       	ldi	r27, 0x0C	; 12
    184e:	5b 07       	cpc	r21, r27
    1850:	5c f4       	brge	.+22     	; 0x1868 <strtod+0x1b4>
    1852:	9a 01       	movw	r18, r20
    1854:	22 0f       	add	r18, r18
    1856:	33 1f       	adc	r19, r19
    1858:	22 0f       	add	r18, r18
    185a:	33 1f       	adc	r19, r19
    185c:	42 0f       	add	r20, r18
    185e:	53 1f       	adc	r21, r19
    1860:	44 0f       	add	r20, r20
    1862:	55 1f       	adc	r21, r21
    1864:	4a 0f       	add	r20, r26
    1866:	51 1d       	adc	r21, r1
    1868:	31 96       	adiw	r30, 0x01	; 1
    186a:	df 01       	movw	r26, r30
    186c:	11 97       	sbiw	r26, 0x01	; 1
    186e:	2c 91       	ld	r18, X
    1870:	a0 ed       	ldi	r26, 0xD0	; 208
    1872:	a2 0f       	add	r26, r18
    1874:	aa 30       	cpi	r26, 0x0A	; 10
    1876:	48 f3       	brcs	.-46     	; 0x184a <strtod+0x196>
    1878:	c4 ff       	sbrs	r28, 4
    187a:	03 c0       	rjmp	.+6      	; 0x1882 <strtod+0x1ce>
    187c:	51 95       	neg	r21
    187e:	41 95       	neg	r20
    1880:	51 09       	sbc	r21, r1
    1882:	04 0f       	add	r16, r20
    1884:	15 1f       	adc	r17, r21
    1886:	c1 ff       	sbrs	r28, 1
    1888:	07 c0       	rjmp	.+14     	; 0x1898 <strtod+0x1e4>
    188a:	e1 14       	cp	r14, r1
    188c:	f1 04       	cpc	r15, r1
    188e:	21 f0       	breq	.+8      	; 0x1898 <strtod+0x1e4>
    1890:	31 97       	sbiw	r30, 0x01	; 1
    1892:	d7 01       	movw	r26, r14
    1894:	ed 93       	st	X+, r30
    1896:	fc 93       	st	X, r31
    1898:	ee d9       	rcall	.-3108   	; 0xc76 <__floatunsisf>
    189a:	c3 70       	andi	r28, 0x03	; 3
    189c:	c3 30       	cpi	r28, 0x03	; 3
    189e:	19 f0       	breq	.+6      	; 0x18a6 <strtod+0x1f2>
    18a0:	6b 01       	movw	r12, r22
    18a2:	7c 01       	movw	r14, r24
    18a4:	06 c0       	rjmp	.+12     	; 0x18b2 <strtod+0x1fe>
    18a6:	6b 01       	movw	r12, r22
    18a8:	7c 01       	movw	r14, r24
    18aa:	f7 fa       	bst	r15, 7
    18ac:	f0 94       	com	r15
    18ae:	f7 f8       	bld	r15, 7
    18b0:	f0 94       	com	r15
    18b2:	20 e0       	ldi	r18, 0x00	; 0
    18b4:	30 e0       	ldi	r19, 0x00	; 0
    18b6:	a9 01       	movw	r20, r18
    18b8:	c7 01       	movw	r24, r14
    18ba:	b6 01       	movw	r22, r12
    18bc:	2d d1       	rcall	.+602    	; 0x1b18 <__cmpsf2>
    18be:	88 23       	and	r24, r24
    18c0:	09 f4       	brne	.+2      	; 0x18c4 <strtod+0x210>
    18c2:	43 c0       	rjmp	.+134    	; 0x194a <strtod+0x296>
    18c4:	17 ff       	sbrs	r17, 7
    18c6:	06 c0       	rjmp	.+12     	; 0x18d4 <strtod+0x220>
    18c8:	11 95       	neg	r17
    18ca:	01 95       	neg	r16
    18cc:	11 09       	sbc	r17, r1
    18ce:	cb ea       	ldi	r28, 0xAB	; 171
    18d0:	d0 e0       	ldi	r29, 0x00	; 0
    18d2:	02 c0       	rjmp	.+4      	; 0x18d8 <strtod+0x224>
    18d4:	c3 ec       	ldi	r28, 0xC3	; 195
    18d6:	d0 e0       	ldi	r29, 0x00	; 0
    18d8:	5e 01       	movw	r10, r28
    18da:	b8 e1       	ldi	r27, 0x18	; 24
    18dc:	ab 1a       	sub	r10, r27
    18de:	b1 08       	sbc	r11, r1
    18e0:	46 01       	movw	r8, r12
    18e2:	be 2d       	mov	r27, r14
    18e4:	af 2d       	mov	r26, r15
    18e6:	90 e2       	ldi	r25, 0x20	; 32
    18e8:	e9 2e       	mov	r14, r25
    18ea:	f1 2c       	mov	r15, r1
    18ec:	0e 15       	cp	r16, r14
    18ee:	1f 05       	cpc	r17, r15
    18f0:	7c f0       	brlt	.+30     	; 0x1910 <strtod+0x25c>
    18f2:	fe 01       	movw	r30, r28
    18f4:	25 91       	lpm	r18, Z+
    18f6:	35 91       	lpm	r19, Z+
    18f8:	45 91       	lpm	r20, Z+
    18fa:	54 91       	lpm	r21, Z
    18fc:	b4 01       	movw	r22, r8
    18fe:	8b 2f       	mov	r24, r27
    1900:	9a 2f       	mov	r25, r26
    1902:	47 da       	rcall	.-2930   	; 0xd92 <__mulsf3>
    1904:	4b 01       	movw	r8, r22
    1906:	b8 2f       	mov	r27, r24
    1908:	a9 2f       	mov	r26, r25
    190a:	0e 19       	sub	r16, r14
    190c:	1f 09       	sbc	r17, r15
    190e:	ee cf       	rjmp	.-36     	; 0x18ec <strtod+0x238>
    1910:	24 97       	sbiw	r28, 0x04	; 4
    1912:	f5 94       	asr	r15
    1914:	e7 94       	ror	r14
    1916:	ca 15       	cp	r28, r10
    1918:	db 05       	cpc	r29, r11
    191a:	41 f7       	brne	.-48     	; 0x18ec <strtod+0x238>
    191c:	64 01       	movw	r12, r8
    191e:	eb 2e       	mov	r14, r27
    1920:	fa 2e       	mov	r15, r26
    1922:	8e 2d       	mov	r24, r14
    1924:	88 0f       	add	r24, r24
    1926:	8f 2d       	mov	r24, r15
    1928:	88 1f       	adc	r24, r24
    192a:	8f 3f       	cpi	r24, 0xFF	; 255
    192c:	41 f0       	breq	.+16     	; 0x193e <strtod+0x28a>
    192e:	20 e0       	ldi	r18, 0x00	; 0
    1930:	30 e0       	ldi	r19, 0x00	; 0
    1932:	a9 01       	movw	r20, r18
    1934:	c7 01       	movw	r24, r14
    1936:	b6 01       	movw	r22, r12
    1938:	ef d0       	rcall	.+478    	; 0x1b18 <__cmpsf2>
    193a:	81 11       	cpse	r24, r1
    193c:	06 c0       	rjmp	.+12     	; 0x194a <strtod+0x296>
    193e:	82 e2       	ldi	r24, 0x22	; 34
    1940:	90 e0       	ldi	r25, 0x00	; 0
    1942:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <errno+0x1>
    1946:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <errno>
    194a:	c7 01       	movw	r24, r14
    194c:	b6 01       	movw	r22, r12
    194e:	09 c0       	rjmp	.+18     	; 0x1962 <strtod+0x2ae>
    1950:	60 e0       	ldi	r22, 0x00	; 0
    1952:	70 e0       	ldi	r23, 0x00	; 0
    1954:	80 e8       	ldi	r24, 0x80	; 128
    1956:	9f ef       	ldi	r25, 0xFF	; 255
    1958:	04 c0       	rjmp	.+8      	; 0x1962 <strtod+0x2ae>
    195a:	60 e0       	ldi	r22, 0x00	; 0
    195c:	70 e0       	ldi	r23, 0x00	; 0
    195e:	80 ec       	ldi	r24, 0xC0	; 192
    1960:	9f e7       	ldi	r25, 0x7F	; 127
    1962:	df 91       	pop	r29
    1964:	cf 91       	pop	r28
    1966:	1f 91       	pop	r17
    1968:	0f 91       	pop	r16
    196a:	ff 90       	pop	r15
    196c:	ef 90       	pop	r14
    196e:	df 90       	pop	r13
    1970:	cf 90       	pop	r12
    1972:	bf 90       	pop	r11
    1974:	af 90       	pop	r10
    1976:	9f 90       	pop	r9
    1978:	8f 90       	pop	r8
    197a:	7f 90       	pop	r7
    197c:	6f 90       	pop	r6
    197e:	08 95       	ret

00001980 <isspace>:
    1980:	91 11       	cpse	r25, r1
    1982:	ce c0       	rjmp	.+412    	; 0x1b20 <__ctype_isfalse>
    1984:	80 32       	cpi	r24, 0x20	; 32
    1986:	19 f0       	breq	.+6      	; 0x198e <isspace+0xe>
    1988:	89 50       	subi	r24, 0x09	; 9
    198a:	85 50       	subi	r24, 0x05	; 5
    198c:	d0 f7       	brcc	.-12     	; 0x1982 <isspace+0x2>
    198e:	08 95       	ret

00001990 <strncasecmp_P>:
    1990:	fb 01       	movw	r30, r22
    1992:	dc 01       	movw	r26, r24
    1994:	41 50       	subi	r20, 0x01	; 1
    1996:	50 40       	sbci	r21, 0x00	; 0
    1998:	88 f0       	brcs	.+34     	; 0x19bc <strncasecmp_P+0x2c>
    199a:	8d 91       	ld	r24, X+
    199c:	81 34       	cpi	r24, 0x41	; 65
    199e:	1c f0       	brlt	.+6      	; 0x19a6 <strncasecmp_P+0x16>
    19a0:	8b 35       	cpi	r24, 0x5B	; 91
    19a2:	0c f4       	brge	.+2      	; 0x19a6 <strncasecmp_P+0x16>
    19a4:	80 5e       	subi	r24, 0xE0	; 224
    19a6:	65 91       	lpm	r22, Z+
    19a8:	61 34       	cpi	r22, 0x41	; 65
    19aa:	1c f0       	brlt	.+6      	; 0x19b2 <strncasecmp_P+0x22>
    19ac:	6b 35       	cpi	r22, 0x5B	; 91
    19ae:	0c f4       	brge	.+2      	; 0x19b2 <strncasecmp_P+0x22>
    19b0:	60 5e       	subi	r22, 0xE0	; 224
    19b2:	86 1b       	sub	r24, r22
    19b4:	61 11       	cpse	r22, r1
    19b6:	71 f3       	breq	.-36     	; 0x1994 <strncasecmp_P+0x4>
    19b8:	99 0b       	sbc	r25, r25
    19ba:	08 95       	ret
    19bc:	88 1b       	sub	r24, r24
    19be:	fc cf       	rjmp	.-8      	; 0x19b8 <strncasecmp_P+0x28>

000019c0 <strnlen_P>:
    19c0:	fc 01       	movw	r30, r24
    19c2:	05 90       	lpm	r0, Z+
    19c4:	61 50       	subi	r22, 0x01	; 1
    19c6:	70 40       	sbci	r23, 0x00	; 0
    19c8:	01 10       	cpse	r0, r1
    19ca:	d8 f7       	brcc	.-10     	; 0x19c2 <strnlen_P+0x2>
    19cc:	80 95       	com	r24
    19ce:	90 95       	com	r25
    19d0:	8e 0f       	add	r24, r30
    19d2:	9f 1f       	adc	r25, r31
    19d4:	08 95       	ret

000019d6 <strnlen>:
    19d6:	fc 01       	movw	r30, r24
    19d8:	61 50       	subi	r22, 0x01	; 1
    19da:	70 40       	sbci	r23, 0x00	; 0
    19dc:	01 90       	ld	r0, Z+
    19de:	01 10       	cpse	r0, r1
    19e0:	d8 f7       	brcc	.-10     	; 0x19d8 <strnlen+0x2>
    19e2:	80 95       	com	r24
    19e4:	90 95       	com	r25
    19e6:	8e 0f       	add	r24, r30
    19e8:	9f 1f       	adc	r25, r31
    19ea:	08 95       	ret

000019ec <fputc>:
    19ec:	0f 93       	push	r16
    19ee:	1f 93       	push	r17
    19f0:	cf 93       	push	r28
    19f2:	df 93       	push	r29
    19f4:	fb 01       	movw	r30, r22
    19f6:	23 81       	ldd	r18, Z+3	; 0x03
    19f8:	21 fd       	sbrc	r18, 1
    19fa:	03 c0       	rjmp	.+6      	; 0x1a02 <fputc+0x16>
    19fc:	8f ef       	ldi	r24, 0xFF	; 255
    19fe:	9f ef       	ldi	r25, 0xFF	; 255
    1a00:	28 c0       	rjmp	.+80     	; 0x1a52 <fputc+0x66>
    1a02:	22 ff       	sbrs	r18, 2
    1a04:	16 c0       	rjmp	.+44     	; 0x1a32 <fputc+0x46>
    1a06:	46 81       	ldd	r20, Z+6	; 0x06
    1a08:	57 81       	ldd	r21, Z+7	; 0x07
    1a0a:	24 81       	ldd	r18, Z+4	; 0x04
    1a0c:	35 81       	ldd	r19, Z+5	; 0x05
    1a0e:	42 17       	cp	r20, r18
    1a10:	53 07       	cpc	r21, r19
    1a12:	44 f4       	brge	.+16     	; 0x1a24 <fputc+0x38>
    1a14:	a0 81       	ld	r26, Z
    1a16:	b1 81       	ldd	r27, Z+1	; 0x01
    1a18:	9d 01       	movw	r18, r26
    1a1a:	2f 5f       	subi	r18, 0xFF	; 255
    1a1c:	3f 4f       	sbci	r19, 0xFF	; 255
    1a1e:	31 83       	std	Z+1, r19	; 0x01
    1a20:	20 83       	st	Z, r18
    1a22:	8c 93       	st	X, r24
    1a24:	26 81       	ldd	r18, Z+6	; 0x06
    1a26:	37 81       	ldd	r19, Z+7	; 0x07
    1a28:	2f 5f       	subi	r18, 0xFF	; 255
    1a2a:	3f 4f       	sbci	r19, 0xFF	; 255
    1a2c:	37 83       	std	Z+7, r19	; 0x07
    1a2e:	26 83       	std	Z+6, r18	; 0x06
    1a30:	10 c0       	rjmp	.+32     	; 0x1a52 <fputc+0x66>
    1a32:	eb 01       	movw	r28, r22
    1a34:	09 2f       	mov	r16, r25
    1a36:	18 2f       	mov	r17, r24
    1a38:	00 84       	ldd	r0, Z+8	; 0x08
    1a3a:	f1 85       	ldd	r31, Z+9	; 0x09
    1a3c:	e0 2d       	mov	r30, r0
    1a3e:	09 95       	icall
    1a40:	89 2b       	or	r24, r25
    1a42:	e1 f6       	brne	.-72     	; 0x19fc <fputc+0x10>
    1a44:	8e 81       	ldd	r24, Y+6	; 0x06
    1a46:	9f 81       	ldd	r25, Y+7	; 0x07
    1a48:	01 96       	adiw	r24, 0x01	; 1
    1a4a:	9f 83       	std	Y+7, r25	; 0x07
    1a4c:	8e 83       	std	Y+6, r24	; 0x06
    1a4e:	81 2f       	mov	r24, r17
    1a50:	90 2f       	mov	r25, r16
    1a52:	df 91       	pop	r29
    1a54:	cf 91       	pop	r28
    1a56:	1f 91       	pop	r17
    1a58:	0f 91       	pop	r16
    1a5a:	08 95       	ret

00001a5c <__ultoa_invert>:
    1a5c:	fa 01       	movw	r30, r20
    1a5e:	aa 27       	eor	r26, r26
    1a60:	28 30       	cpi	r18, 0x08	; 8
    1a62:	51 f1       	breq	.+84     	; 0x1ab8 <__ultoa_invert+0x5c>
    1a64:	20 31       	cpi	r18, 0x10	; 16
    1a66:	81 f1       	breq	.+96     	; 0x1ac8 <__ultoa_invert+0x6c>
    1a68:	e8 94       	clt
    1a6a:	6f 93       	push	r22
    1a6c:	6e 7f       	andi	r22, 0xFE	; 254
    1a6e:	6e 5f       	subi	r22, 0xFE	; 254
    1a70:	7f 4f       	sbci	r23, 0xFF	; 255
    1a72:	8f 4f       	sbci	r24, 0xFF	; 255
    1a74:	9f 4f       	sbci	r25, 0xFF	; 255
    1a76:	af 4f       	sbci	r26, 0xFF	; 255
    1a78:	b1 e0       	ldi	r27, 0x01	; 1
    1a7a:	3e d0       	rcall	.+124    	; 0x1af8 <__ultoa_invert+0x9c>
    1a7c:	b4 e0       	ldi	r27, 0x04	; 4
    1a7e:	3c d0       	rcall	.+120    	; 0x1af8 <__ultoa_invert+0x9c>
    1a80:	67 0f       	add	r22, r23
    1a82:	78 1f       	adc	r23, r24
    1a84:	89 1f       	adc	r24, r25
    1a86:	9a 1f       	adc	r25, r26
    1a88:	a1 1d       	adc	r26, r1
    1a8a:	68 0f       	add	r22, r24
    1a8c:	79 1f       	adc	r23, r25
    1a8e:	8a 1f       	adc	r24, r26
    1a90:	91 1d       	adc	r25, r1
    1a92:	a1 1d       	adc	r26, r1
    1a94:	6a 0f       	add	r22, r26
    1a96:	71 1d       	adc	r23, r1
    1a98:	81 1d       	adc	r24, r1
    1a9a:	91 1d       	adc	r25, r1
    1a9c:	a1 1d       	adc	r26, r1
    1a9e:	20 d0       	rcall	.+64     	; 0x1ae0 <__ultoa_invert+0x84>
    1aa0:	09 f4       	brne	.+2      	; 0x1aa4 <__ultoa_invert+0x48>
    1aa2:	68 94       	set
    1aa4:	3f 91       	pop	r19
    1aa6:	2a e0       	ldi	r18, 0x0A	; 10
    1aa8:	26 9f       	mul	r18, r22
    1aaa:	11 24       	eor	r1, r1
    1aac:	30 19       	sub	r19, r0
    1aae:	30 5d       	subi	r19, 0xD0	; 208
    1ab0:	31 93       	st	Z+, r19
    1ab2:	de f6       	brtc	.-74     	; 0x1a6a <__ultoa_invert+0xe>
    1ab4:	cf 01       	movw	r24, r30
    1ab6:	08 95       	ret
    1ab8:	46 2f       	mov	r20, r22
    1aba:	47 70       	andi	r20, 0x07	; 7
    1abc:	40 5d       	subi	r20, 0xD0	; 208
    1abe:	41 93       	st	Z+, r20
    1ac0:	b3 e0       	ldi	r27, 0x03	; 3
    1ac2:	0f d0       	rcall	.+30     	; 0x1ae2 <__ultoa_invert+0x86>
    1ac4:	c9 f7       	brne	.-14     	; 0x1ab8 <__ultoa_invert+0x5c>
    1ac6:	f6 cf       	rjmp	.-20     	; 0x1ab4 <__ultoa_invert+0x58>
    1ac8:	46 2f       	mov	r20, r22
    1aca:	4f 70       	andi	r20, 0x0F	; 15
    1acc:	40 5d       	subi	r20, 0xD0	; 208
    1ace:	4a 33       	cpi	r20, 0x3A	; 58
    1ad0:	18 f0       	brcs	.+6      	; 0x1ad8 <__ultoa_invert+0x7c>
    1ad2:	49 5d       	subi	r20, 0xD9	; 217
    1ad4:	31 fd       	sbrc	r19, 1
    1ad6:	40 52       	subi	r20, 0x20	; 32
    1ad8:	41 93       	st	Z+, r20
    1ada:	02 d0       	rcall	.+4      	; 0x1ae0 <__ultoa_invert+0x84>
    1adc:	a9 f7       	brne	.-22     	; 0x1ac8 <__ultoa_invert+0x6c>
    1ade:	ea cf       	rjmp	.-44     	; 0x1ab4 <__ultoa_invert+0x58>
    1ae0:	b4 e0       	ldi	r27, 0x04	; 4
    1ae2:	a6 95       	lsr	r26
    1ae4:	97 95       	ror	r25
    1ae6:	87 95       	ror	r24
    1ae8:	77 95       	ror	r23
    1aea:	67 95       	ror	r22
    1aec:	ba 95       	dec	r27
    1aee:	c9 f7       	brne	.-14     	; 0x1ae2 <__ultoa_invert+0x86>
    1af0:	00 97       	sbiw	r24, 0x00	; 0
    1af2:	61 05       	cpc	r22, r1
    1af4:	71 05       	cpc	r23, r1
    1af6:	08 95       	ret
    1af8:	9b 01       	movw	r18, r22
    1afa:	ac 01       	movw	r20, r24
    1afc:	0a 2e       	mov	r0, r26
    1afe:	06 94       	lsr	r0
    1b00:	57 95       	ror	r21
    1b02:	47 95       	ror	r20
    1b04:	37 95       	ror	r19
    1b06:	27 95       	ror	r18
    1b08:	ba 95       	dec	r27
    1b0a:	c9 f7       	brne	.-14     	; 0x1afe <__ultoa_invert+0xa2>
    1b0c:	62 0f       	add	r22, r18
    1b0e:	73 1f       	adc	r23, r19
    1b10:	84 1f       	adc	r24, r20
    1b12:	95 1f       	adc	r25, r21
    1b14:	a0 1d       	adc	r26, r0
    1b16:	08 95       	ret

00001b18 <__cmpsf2>:
    1b18:	9f d9       	rcall	.-3266   	; 0xe58 <__fp_cmp>
    1b1a:	08 f4       	brcc	.+2      	; 0x1b1e <__cmpsf2+0x6>
    1b1c:	81 e0       	ldi	r24, 0x01	; 1
    1b1e:	08 95       	ret

00001b20 <__ctype_isfalse>:
    1b20:	99 27       	eor	r25, r25
    1b22:	88 27       	eor	r24, r24

00001b24 <__ctype_istrue>:
    1b24:	08 95       	ret

00001b26 <__divmodsi4>:
    1b26:	05 2e       	mov	r0, r21
    1b28:	97 fb       	bst	r25, 7
    1b2a:	16 f4       	brtc	.+4      	; 0x1b30 <__divmodsi4+0xa>
    1b2c:	00 94       	com	r0
    1b2e:	0f d0       	rcall	.+30     	; 0x1b4e <__negsi2>
    1b30:	57 fd       	sbrc	r21, 7
    1b32:	05 d0       	rcall	.+10     	; 0x1b3e <__divmodsi4_neg2>
    1b34:	b5 d9       	rcall	.-3222   	; 0xea0 <__udivmodsi4>
    1b36:	07 fc       	sbrc	r0, 7
    1b38:	02 d0       	rcall	.+4      	; 0x1b3e <__divmodsi4_neg2>
    1b3a:	46 f4       	brtc	.+16     	; 0x1b4c <__divmodsi4_exit>
    1b3c:	08 c0       	rjmp	.+16     	; 0x1b4e <__negsi2>

00001b3e <__divmodsi4_neg2>:
    1b3e:	50 95       	com	r21
    1b40:	40 95       	com	r20
    1b42:	30 95       	com	r19
    1b44:	21 95       	neg	r18
    1b46:	3f 4f       	sbci	r19, 0xFF	; 255
    1b48:	4f 4f       	sbci	r20, 0xFF	; 255
    1b4a:	5f 4f       	sbci	r21, 0xFF	; 255

00001b4c <__divmodsi4_exit>:
    1b4c:	08 95       	ret

00001b4e <__negsi2>:
    1b4e:	90 95       	com	r25
    1b50:	80 95       	com	r24
    1b52:	70 95       	com	r23
    1b54:	61 95       	neg	r22
    1b56:	7f 4f       	sbci	r23, 0xFF	; 255
    1b58:	8f 4f       	sbci	r24, 0xFF	; 255
    1b5a:	9f 4f       	sbci	r25, 0xFF	; 255
    1b5c:	08 95       	ret

00001b5e <__muluhisi3>:
    1b5e:	0f d0       	rcall	.+30     	; 0x1b7e <__umulhisi3>
    1b60:	a5 9f       	mul	r26, r21
    1b62:	90 0d       	add	r25, r0
    1b64:	b4 9f       	mul	r27, r20
    1b66:	90 0d       	add	r25, r0
    1b68:	a4 9f       	mul	r26, r20
    1b6a:	80 0d       	add	r24, r0
    1b6c:	91 1d       	adc	r25, r1
    1b6e:	11 24       	eor	r1, r1
    1b70:	08 95       	ret

00001b72 <__mulshisi3>:
    1b72:	b7 ff       	sbrs	r27, 7
    1b74:	f4 cf       	rjmp	.-24     	; 0x1b5e <__muluhisi3>

00001b76 <__mulohisi3>:
    1b76:	f3 df       	rcall	.-26     	; 0x1b5e <__muluhisi3>
    1b78:	82 1b       	sub	r24, r18
    1b7a:	93 0b       	sbc	r25, r19
    1b7c:	08 95       	ret

00001b7e <__umulhisi3>:
    1b7e:	a2 9f       	mul	r26, r18
    1b80:	b0 01       	movw	r22, r0
    1b82:	b3 9f       	mul	r27, r19
    1b84:	c0 01       	movw	r24, r0
    1b86:	a3 9f       	mul	r26, r19
    1b88:	70 0d       	add	r23, r0
    1b8a:	81 1d       	adc	r24, r1
    1b8c:	11 24       	eor	r1, r1
    1b8e:	91 1d       	adc	r25, r1
    1b90:	b2 9f       	mul	r27, r18
    1b92:	70 0d       	add	r23, r0
    1b94:	81 1d       	adc	r24, r1
    1b96:	11 24       	eor	r1, r1
    1b98:	91 1d       	adc	r25, r1
    1b9a:	08 95       	ret

00001b9c <_exit>:
    1b9c:	f8 94       	cli

00001b9e <__stop_program>:
    1b9e:	ff cf       	rjmp	.-2      	; 0x1b9e <__stop_program>

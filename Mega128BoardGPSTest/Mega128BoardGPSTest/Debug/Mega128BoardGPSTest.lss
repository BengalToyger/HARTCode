
Mega128BoardGPSTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  00001b12  00001ba6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001b12  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010e  00800162  00800162  00001c08  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c08  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001c64  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001ca0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f8c  00000000  00000000  00001db0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000dd6  00000000  00000000  00003d3c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000cc1  00000000  00000000  00004b12  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000410  00000000  00000000  000057d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000075f  00000000  00000000  00005be4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000010fa  00000000  00000000  00006343  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  0000743d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	63 c0       	rjmp	.+198    	; 0xc8 <__ctors_end>
       2:	00 00       	nop
       4:	7f c0       	rjmp	.+254    	; 0x104 <__bad_interrupt>
       6:	00 00       	nop
       8:	7d c0       	rjmp	.+250    	; 0x104 <__bad_interrupt>
       a:	00 00       	nop
       c:	7b c0       	rjmp	.+246    	; 0x104 <__bad_interrupt>
       e:	00 00       	nop
      10:	79 c0       	rjmp	.+242    	; 0x104 <__bad_interrupt>
      12:	00 00       	nop
      14:	77 c0       	rjmp	.+238    	; 0x104 <__bad_interrupt>
      16:	00 00       	nop
      18:	75 c0       	rjmp	.+234    	; 0x104 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	73 c0       	rjmp	.+230    	; 0x104 <__bad_interrupt>
      1e:	00 00       	nop
      20:	71 c0       	rjmp	.+226    	; 0x104 <__bad_interrupt>
      22:	00 00       	nop
      24:	6f c0       	rjmp	.+222    	; 0x104 <__bad_interrupt>
      26:	00 00       	nop
      28:	6d c0       	rjmp	.+218    	; 0x104 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6b c0       	rjmp	.+214    	; 0x104 <__bad_interrupt>
      2e:	00 00       	nop
      30:	69 c0       	rjmp	.+210    	; 0x104 <__bad_interrupt>
      32:	00 00       	nop
      34:	67 c0       	rjmp	.+206    	; 0x104 <__bad_interrupt>
      36:	00 00       	nop
      38:	65 c0       	rjmp	.+202    	; 0x104 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	63 c0       	rjmp	.+198    	; 0x104 <__bad_interrupt>
      3e:	00 00       	nop
      40:	61 c0       	rjmp	.+194    	; 0x104 <__bad_interrupt>
      42:	00 00       	nop
      44:	5f c0       	rjmp	.+190    	; 0x104 <__bad_interrupt>
      46:	00 00       	nop
      48:	73 c0       	rjmp	.+230    	; 0x130 <__vector_18>
      4a:	00 00       	nop
      4c:	5b c0       	rjmp	.+182    	; 0x104 <__bad_interrupt>
      4e:	00 00       	nop
      50:	59 c0       	rjmp	.+178    	; 0x104 <__bad_interrupt>
      52:	00 00       	nop
      54:	57 c0       	rjmp	.+174    	; 0x104 <__bad_interrupt>
      56:	00 00       	nop
      58:	55 c0       	rjmp	.+170    	; 0x104 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	53 c0       	rjmp	.+166    	; 0x104 <__bad_interrupt>
      5e:	00 00       	nop
      60:	51 c0       	rjmp	.+162    	; 0x104 <__bad_interrupt>
      62:	00 00       	nop
      64:	4f c0       	rjmp	.+158    	; 0x104 <__bad_interrupt>
      66:	00 00       	nop
      68:	4d c0       	rjmp	.+154    	; 0x104 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4b c0       	rjmp	.+150    	; 0x104 <__bad_interrupt>
      6e:	00 00       	nop
      70:	49 c0       	rjmp	.+146    	; 0x104 <__bad_interrupt>
      72:	00 00       	nop
      74:	47 c0       	rjmp	.+142    	; 0x104 <__bad_interrupt>
      76:	00 00       	nop
      78:	45 c0       	rjmp	.+138    	; 0x104 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	43 c0       	rjmp	.+134    	; 0x104 <__bad_interrupt>
      7e:	00 00       	nop
      80:	41 c0       	rjmp	.+130    	; 0x104 <__bad_interrupt>
      82:	00 00       	nop
      84:	3f c0       	rjmp	.+126    	; 0x104 <__bad_interrupt>
      86:	00 00       	nop
      88:	3d c0       	rjmp	.+122    	; 0x104 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	4e 41       	sbci	r20, 0x1E	; 30
      8e:	4e 49       	Address 0x0000008e is out of bounds.
.word	0xffff	; ????

0000008f <pstr_inity>:
      8f:	49 4e 49 54 59                                      INITY

00000094 <pstr_inf>:
      94:	49 4e 46                                            INF

00000097 <pwr_m10>:
      97:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      a7:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000000af <pwr_p10>:
      af:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      bf:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000000c8 <__ctors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d0 e1       	ldi	r29, 0x10	; 16
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	11 e0       	ldi	r17, 0x01	; 1
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	e2 e1       	ldi	r30, 0x12	; 18
      dc:	fb e1       	ldi	r31, 0x1B	; 27
      de:	00 e0       	ldi	r16, 0x00	; 0
      e0:	0b bf       	out	0x3b, r16	; 59
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x14>
      e4:	07 90       	elpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a2 36       	cpi	r26, 0x62	; 98
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0x10>

000000ee <__do_clear_bss>:
      ee:	22 e0       	ldi	r18, 0x02	; 2
      f0:	a2 e6       	ldi	r26, 0x62	; 98
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	a0 37       	cpi	r26, 0x70	; 112
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	16 d0       	rcall	.+44     	; 0x12c <main>
     100:	0c 94 87 0d 	jmp	0x1b0e	; 0x1b0e <_exit>

00000104 <__bad_interrupt>:
     104:	7d cf       	rjmp	.-262    	; 0x0 <__vectors>

00000106 <time>:
     106:	fc 01       	movw	r30, r24
     108:	0f b6       	in	r0, 0x3f	; 63
     10a:	f8 94       	cli
     10c:	60 91 6a 02 	lds	r22, 0x026A	; 0x80026a <__system_time>
     110:	70 91 6b 02 	lds	r23, 0x026B	; 0x80026b <__system_time+0x1>
     114:	80 91 6c 02 	lds	r24, 0x026C	; 0x80026c <__system_time+0x2>
     118:	90 91 6d 02 	lds	r25, 0x026D	; 0x80026d <__system_time+0x3>
     11c:	0f be       	out	0x3f, r0	; 63
     11e:	30 97       	sbiw	r30, 0x00	; 0
     120:	21 f0       	breq	.+8      	; 0x12a <time+0x24>
     122:	60 83       	st	Z, r22
     124:	71 83       	std	Z+1, r23	; 0x01
     126:	82 83       	std	Z+2, r24	; 0x02
     128:	93 83       	std	Z+3, r25	; 0x03
     12a:	08 95       	ret

0000012c <main>:
#include <avr/interrupt.h>

int main(void)
{
	#ifdef DOUNITTEST
	beginUnitTest();
     12c:	df d3       	rcall	.+1982   	; 0x8ec <beginUnitTest>
	#endif

	while(1){};
     12e:	ff cf       	rjmp	.-2      	; 0x12e <main+0x2>

00000130 <__vector_18>:
	} else if (!checkPUBX(packet)){
		return 0;	
	} else {
		return 1;
	}
}
     130:	1f 92       	push	r1
     132:	0f 92       	push	r0
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	0f 92       	push	r0
     138:	11 24       	eor	r1, r1
     13a:	0b b6       	in	r0, 0x3b	; 59
     13c:	0f 92       	push	r0
     13e:	2f 93       	push	r18
     140:	8f 93       	push	r24
     142:	9f 93       	push	r25
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
     148:	9c b1       	in	r25, 0x0c	; 12
     14a:	c3 98       	cbi	0x18, 3	; 24
     14c:	28 b3       	in	r18, 0x18	; 24
     14e:	81 e0       	ldi	r24, 0x01	; 1
     150:	82 27       	eor	r24, r18
     152:	88 bb       	out	0x18, r24	; 24
     154:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     158:	8f 3f       	cpi	r24, 0xFF	; 255
     15a:	39 f4       	brne	.+14     	; 0x16a <__vector_18+0x3a>
     15c:	c2 98       	cbi	0x18, 2	; 24
     15e:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
     162:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <msgBeginFlag>
     166:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <msgEndFlag>
     16a:	94 32       	cpi	r25, 0x24	; 36
     16c:	d9 f4       	brne	.+54     	; 0x1a4 <__vector_18+0x74>
     16e:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     172:	81 11       	cpse	r24, r1
     174:	5c c0       	rjmp	.+184    	; 0x22e <__vector_18+0xfe>
     176:	c1 9a       	sbi	0x18, 1	; 24
     178:	c3 98       	cbi	0x18, 3	; 24
     17a:	c2 98       	cbi	0x18, 2	; 24
     17c:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <__data_end>
     180:	81 e0       	ldi	r24, 0x01	; 1
     182:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <msgBeginFlag>
     186:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
     18a:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     18e:	f0 e0       	ldi	r31, 0x00	; 0
     190:	ea 59       	subi	r30, 0x9A	; 154
     192:	fe 4f       	sbci	r31, 0xFE	; 254
     194:	84 e2       	ldi	r24, 0x24	; 36
     196:	80 83       	st	Z, r24
     198:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     19c:	8f 5f       	subi	r24, 0xFF	; 255
     19e:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <msgIndex>
     1a2:	5d c0       	rjmp	.+186    	; 0x25e <__vector_18+0x12e>
     1a4:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     1a8:	88 23       	and	r24, r24
     1aa:	c9 f0       	breq	.+50     	; 0x1de <__vector_18+0xae>
     1ac:	9a 32       	cpi	r25, 0x2A	; 42
     1ae:	09 f0       	breq	.+2      	; 0x1b2 <__vector_18+0x82>
     1b0:	4e c0       	rjmp	.+156    	; 0x24e <__vector_18+0x11e>
     1b2:	42 c0       	rjmp	.+132    	; 0x238 <__vector_18+0x108>
     1b4:	c2 9a       	sbi	0x18, 2	; 24
     1b6:	c1 98       	cbi	0x18, 1	; 24
     1b8:	9c 32       	cpi	r25, 0x2C	; 44
     1ba:	29 f4       	brne	.+10     	; 0x1c6 <__vector_18+0x96>
     1bc:	80 91 62 01 	lds	r24, 0x0162	; 0x800162 <__data_end>
     1c0:	8f 5f       	subi	r24, 0xFF	; 255
     1c2:	80 93 62 01 	sts	0x0162, r24	; 0x800162 <__data_end>
     1c6:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     1ca:	f0 e0       	ldi	r31, 0x00	; 0
     1cc:	ea 59       	subi	r30, 0x9A	; 154
     1ce:	fe 4f       	sbci	r31, 0xFE	; 254
     1d0:	90 83       	st	Z, r25
     1d2:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     1d6:	8f 5f       	subi	r24, 0xFF	; 255
     1d8:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <msgIndex>
     1dc:	40 c0       	rjmp	.+128    	; 0x25e <__vector_18+0x12e>
     1de:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     1e2:	88 23       	and	r24, r24
     1e4:	e1 f1       	breq	.+120    	; 0x25e <__vector_18+0x12e>
     1e6:	9a 32       	cpi	r25, 0x2A	; 42
     1e8:	d1 f5       	brne	.+116    	; 0x25e <__vector_18+0x12e>
     1ea:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     1ee:	81 11       	cpse	r24, r1
     1f0:	36 c0       	rjmp	.+108    	; 0x25e <__vector_18+0x12e>
     1f2:	c3 9a       	sbi	0x18, 3	; 24
     1f4:	c1 98       	cbi	0x18, 1	; 24
     1f6:	c2 98       	cbi	0x18, 2	; 24
     1f8:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     1fc:	f0 e0       	ldi	r31, 0x00	; 0
     1fe:	ea 59       	subi	r30, 0x9A	; 154
     200:	fe 4f       	sbci	r31, 0xFE	; 254
     202:	8a e2       	ldi	r24, 0x2A	; 42
     204:	80 83       	st	Z, r24
     206:	80 91 65 01 	lds	r24, 0x0165	; 0x800165 <msgIndex>
     20a:	8f 5f       	subi	r24, 0xFF	; 255
     20c:	80 93 65 01 	sts	0x0165, r24	; 0x800165 <msgIndex>
     210:	e0 91 65 01 	lds	r30, 0x0165	; 0x800165 <msgIndex>
     214:	f0 e0       	ldi	r31, 0x00	; 0
     216:	ea 59       	subi	r30, 0x9A	; 154
     218:	fe 4f       	sbci	r31, 0xFE	; 254
     21a:	10 82       	st	Z, r1
     21c:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
     220:	81 e0       	ldi	r24, 0x01	; 1
     222:	80 93 63 01 	sts	0x0163, r24	; 0x800163 <msgEndFlag>
     226:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <msgBeginFlag>
     22a:	f8 94       	cli
     22c:	18 c0       	rjmp	.+48     	; 0x25e <__vector_18+0x12e>
     22e:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     232:	81 11       	cpse	r24, r1
     234:	09 c0       	rjmp	.+18     	; 0x248 <__vector_18+0x118>
     236:	11 c0       	rjmp	.+34     	; 0x25a <__vector_18+0x12a>
     238:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     23c:	81 11       	cpse	r24, r1
     23e:	d5 cf       	rjmp	.-86     	; 0x1ea <__vector_18+0xba>
     240:	0e c0       	rjmp	.+28     	; 0x25e <__vector_18+0x12e>
     242:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     246:	0b c0       	rjmp	.+22     	; 0x25e <__vector_18+0x12e>
     248:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     24c:	fa cf       	rjmp	.-12     	; 0x242 <__vector_18+0x112>
     24e:	80 91 63 01 	lds	r24, 0x0163	; 0x800163 <msgEndFlag>
     252:	88 23       	and	r24, r24
     254:	09 f4       	brne	.+2      	; 0x258 <__vector_18+0x128>
     256:	ae cf       	rjmp	.-164    	; 0x1b4 <__vector_18+0x84>
     258:	f4 cf       	rjmp	.-24     	; 0x242 <__vector_18+0x112>
     25a:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <msgBeginFlag>
     25e:	ff 91       	pop	r31
     260:	ef 91       	pop	r30
     262:	9f 91       	pop	r25
     264:	8f 91       	pop	r24
     266:	2f 91       	pop	r18
     268:	0f 90       	pop	r0
     26a:	0b be       	out	0x3b, r0	; 59
     26c:	0f 90       	pop	r0
     26e:	0f be       	out	0x3f, r0	; 63
     270:	0f 90       	pop	r0
     272:	1f 90       	pop	r1
     274:	18 95       	reti

00000276 <SendGPS>:
     276:	ef 92       	push	r14
     278:	ff 92       	push	r15
     27a:	1f 93       	push	r17
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	1f 92       	push	r1
     282:	cd b7       	in	r28, 0x3d	; 61
     284:	de b7       	in	r29, 0x3e	; 62
     286:	7c 01       	movw	r14, r24
     288:	16 2f       	mov	r17, r22
     28a:	60 e0       	ldi	r22, 0x00	; 0
     28c:	84 e2       	ldi	r24, 0x24	; 36
     28e:	a0 d3       	rcall	.+1856   	; 0x9d0 <USARTTX>
     290:	19 82       	std	Y+1, r1	; 0x01
     292:	89 81       	ldd	r24, Y+1	; 0x01
     294:	81 17       	cp	r24, r17
     296:	68 f4       	brcc	.+26     	; 0x2b2 <SendGPS+0x3c>
     298:	99 81       	ldd	r25, Y+1	; 0x01
     29a:	f7 01       	movw	r30, r14
     29c:	e9 0f       	add	r30, r25
     29e:	f1 1d       	adc	r31, r1
     2a0:	60 e0       	ldi	r22, 0x00	; 0
     2a2:	80 81       	ld	r24, Z
     2a4:	95 d3       	rcall	.+1834   	; 0x9d0 <USARTTX>
     2a6:	99 81       	ldd	r25, Y+1	; 0x01
     2a8:	9f 5f       	subi	r25, 0xFF	; 255
     2aa:	99 83       	std	Y+1, r25	; 0x01
     2ac:	99 81       	ldd	r25, Y+1	; 0x01
     2ae:	91 17       	cp	r25, r17
     2b0:	98 f3       	brcs	.-26     	; 0x298 <SendGPS+0x22>
     2b2:	60 e0       	ldi	r22, 0x00	; 0
     2b4:	8d e0       	ldi	r24, 0x0D	; 13
     2b6:	8c d3       	rcall	.+1816   	; 0x9d0 <USARTTX>
     2b8:	60 e0       	ldi	r22, 0x00	; 0
     2ba:	8a e0       	ldi	r24, 0x0A	; 10
     2bc:	89 d3       	rcall	.+1810   	; 0x9d0 <USARTTX>
     2be:	0f 90       	pop	r0
     2c0:	df 91       	pop	r29
     2c2:	cf 91       	pop	r28
     2c4:	1f 91       	pop	r17
     2c6:	ff 90       	pop	r15
     2c8:	ef 90       	pop	r14
     2ca:	08 95       	ret

000002cc <CheckSum>:

// Calculates and writes the checksum for an outgoing packet
void CheckSum(char* packet){
     2cc:	0f 93       	push	r16
     2ce:	1f 93       	push	r17
     2d0:	cf 93       	push	r28
     2d2:	df 93       	push	r29
     2d4:	00 d0       	rcall	.+0      	; 0x2d6 <CheckSum+0xa>
     2d6:	00 d0       	rcall	.+0      	; 0x2d8 <CheckSum+0xc>
     2d8:	1f 92       	push	r1
     2da:	cd b7       	in	r28, 0x3d	; 61
     2dc:	de b7       	in	r29, 0x3e	; 62
     2de:	8c 01       	movw	r16, r24
	uint8_t volatile i = 0;
     2e0:	19 82       	std	Y+1, r1	; 0x01
	uint8_t volatile checksum;
	char hexchar[3];
	while(!(packet[i] == '*')){
     2e2:	89 81       	ldd	r24, Y+1	; 0x01
     2e4:	f8 01       	movw	r30, r16
     2e6:	e8 0f       	add	r30, r24
     2e8:	f1 1d       	adc	r31, r1
     2ea:	80 81       	ld	r24, Z
     2ec:	8a 32       	cpi	r24, 0x2A	; 42
     2ee:	91 f0       	breq	.+36     	; 0x314 <CheckSum+0x48>
		checksum ^= packet[i]; //XORs all the packet bytes together to get the checksum
     2f0:	99 81       	ldd	r25, Y+1	; 0x01
     2f2:	8a 81       	ldd	r24, Y+2	; 0x02
     2f4:	f8 01       	movw	r30, r16
     2f6:	e9 0f       	add	r30, r25
     2f8:	f1 1d       	adc	r31, r1
     2fa:	90 81       	ld	r25, Z
     2fc:	98 27       	eor	r25, r24
     2fe:	9a 83       	std	Y+2, r25	; 0x02
		i++;
     300:	99 81       	ldd	r25, Y+1	; 0x01
     302:	9f 5f       	subi	r25, 0xFF	; 255
     304:	99 83       	std	Y+1, r25	; 0x01
// Calculates and writes the checksum for an outgoing packet
void CheckSum(char* packet){
	uint8_t volatile i = 0;
	uint8_t volatile checksum;
	char hexchar[3];
	while(!(packet[i] == '*')){
     306:	89 81       	ldd	r24, Y+1	; 0x01
     308:	f8 01       	movw	r30, r16
     30a:	e8 0f       	add	r30, r24
     30c:	f1 1d       	adc	r31, r1
     30e:	80 81       	ld	r24, Z
     310:	8a 32       	cpi	r24, 0x2A	; 42
     312:	71 f7       	brne	.-36     	; 0x2f0 <CheckSum+0x24>
		checksum ^= packet[i]; //XORs all the packet bytes together to get the checksum
		i++;
	}
	sprintf(hexchar, "%02X", checksum);
     314:	8a 81       	ldd	r24, Y+2	; 0x02
     316:	1f 92       	push	r1
     318:	8f 93       	push	r24
     31a:	80 e3       	ldi	r24, 0x30	; 48
     31c:	91 e0       	ldi	r25, 0x01	; 1
     31e:	9f 93       	push	r25
     320:	8f 93       	push	r24
     322:	ce 01       	movw	r24, r28
     324:	03 96       	adiw	r24, 0x03	; 3
     326:	9f 93       	push	r25
     328:	8f 93       	push	r24
     32a:	60 d7       	rcall	.+3776   	; 0x11ec <sprintf>
	i++;
     32c:	89 81       	ldd	r24, Y+1	; 0x01
     32e:	8f 5f       	subi	r24, 0xFF	; 255
     330:	89 83       	std	Y+1, r24	; 0x01
	packet[i] = hexchar[0];
     332:	89 81       	ldd	r24, Y+1	; 0x01
     334:	f8 01       	movw	r30, r16
     336:	e8 0f       	add	r30, r24
     338:	f1 1d       	adc	r31, r1
     33a:	8b 81       	ldd	r24, Y+3	; 0x03
     33c:	80 83       	st	Z, r24
	i++;
     33e:	89 81       	ldd	r24, Y+1	; 0x01
     340:	8f 5f       	subi	r24, 0xFF	; 255
     342:	89 83       	std	Y+1, r24	; 0x01
	packet[i] = hexchar[1];
     344:	89 81       	ldd	r24, Y+1	; 0x01
     346:	f8 01       	movw	r30, r16
     348:	e8 0f       	add	r30, r24
     34a:	f1 1d       	adc	r31, r1
     34c:	8c 81       	ldd	r24, Y+4	; 0x04
     34e:	80 83       	st	Z, r24
     350:	0f 90       	pop	r0
     352:	0f 90       	pop	r0
     354:	0f 90       	pop	r0
     356:	0f 90       	pop	r0
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
	return;
}
     35c:	0f 90       	pop	r0
     35e:	0f 90       	pop	r0
     360:	0f 90       	pop	r0
     362:	0f 90       	pop	r0
     364:	0f 90       	pop	r0
     366:	df 91       	pop	r29
     368:	cf 91       	pop	r28
     36a:	1f 91       	pop	r17
     36c:	0f 91       	pop	r16
     36e:	08 95       	ret

00000370 <PUBXCFGSetup>:
//	packet: The packet to be sent, consisting of the config message base. The message name gets modified.
//	msg: The particular identifier of the message to be turned off
// Returns:
//	Nothing

void PUBXCFGSetup(char* packet, char* msg){
     370:	cf 93       	push	r28
     372:	df 93       	push	r29
     374:	00 d0       	rcall	.+0      	; 0x376 <PUBXCFGSetup+0x6>
     376:	cd b7       	in	r28, 0x3d	; 61
     378:	de b7       	in	r29, 0x3e	; 62
     37a:	ac 01       	movw	r20, r24
	uint8_t volatile i = MSGSTT; //Sets up the configure message to turn off all the messages we don't want.
     37c:	88 e0       	ldi	r24, 0x08	; 8
     37e:	89 83       	std	Y+1, r24	; 0x01
	uint8_t volatile j = 0; //Takes the message name
     380:	1a 82       	std	Y+2, r1	; 0x02
	for (i; i < MSGEND; i++){
     382:	89 81       	ldd	r24, Y+1	; 0x01
     384:	89 81       	ldd	r24, Y+1	; 0x01
     386:	8b 30       	cpi	r24, 0x0B	; 11
     388:	98 f4       	brcc	.+38     	; 0x3b0 <PUBXCFGSetup+0x40>
		packet[i] = msg[j];
     38a:	29 81       	ldd	r18, Y+1	; 0x01
     38c:	9a 81       	ldd	r25, Y+2	; 0x02
     38e:	fb 01       	movw	r30, r22
     390:	e9 0f       	add	r30, r25
     392:	f1 1d       	adc	r31, r1
     394:	90 81       	ld	r25, Z
     396:	fa 01       	movw	r30, r20
     398:	e2 0f       	add	r30, r18
     39a:	f1 1d       	adc	r31, r1
     39c:	90 83       	st	Z, r25
		j++;
     39e:	9a 81       	ldd	r25, Y+2	; 0x02
     3a0:	9f 5f       	subi	r25, 0xFF	; 255
     3a2:	9a 83       	std	Y+2, r25	; 0x02
//	Nothing

void PUBXCFGSetup(char* packet, char* msg){
	uint8_t volatile i = MSGSTT; //Sets up the configure message to turn off all the messages we don't want.
	uint8_t volatile j = 0; //Takes the message name
	for (i; i < MSGEND; i++){
     3a4:	99 81       	ldd	r25, Y+1	; 0x01
     3a6:	9f 5f       	subi	r25, 0xFF	; 255
     3a8:	99 83       	std	Y+1, r25	; 0x01
     3aa:	99 81       	ldd	r25, Y+1	; 0x01
     3ac:	9b 30       	cpi	r25, 0x0B	; 11
     3ae:	68 f3       	brcs	.-38     	; 0x38a <PUBXCFGSetup+0x1a>
		packet[i] = msg[j];
		j++;
	}
	CheckSum(packet);
     3b0:	ca 01       	movw	r24, r20
     3b2:	8c df       	rcall	.-232    	; 0x2cc <CheckSum>
	return;
}
     3b4:	0f 90       	pop	r0
     3b6:	0f 90       	pop	r0
     3b8:	df 91       	pop	r29
     3ba:	cf 91       	pop	r28
     3bc:	08 95       	ret

000003be <InitGPS>:
		return;
	}
}

//Use RATE (PUBX,40)
uint16_t InitGPS(void){
     3be:	cf 93       	push	r28
     3c0:	df 93       	push	r29
     3c2:	cd b7       	in	r28, 0x3d	; 61
     3c4:	de b7       	in	r29, 0x3e	; 62
     3c6:	6c 97       	sbiw	r28, 0x1c	; 28
     3c8:	0f b6       	in	r0, 0x3f	; 63
     3ca:	f8 94       	cli
     3cc:	de bf       	out	0x3e, r29	; 62
     3ce:	0f be       	out	0x3f, r0	; 63
     3d0:	cd bf       	out	0x3d, r28	; 61
	uint16_t volatile SetUBRR; //Turns off all the messages we don't want
	msgIndex = 0;
     3d2:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <msgIndex>
	msgBeginFlag = 0;
     3d6:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <msgBeginFlag>
	msgEndFlag = 0;
     3da:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <msgEndFlag>
	char CFGMSG[CFGMSGSIZE] = PUBXNOCOMMCFGMSGBASE;
     3de:	8a e1       	ldi	r24, 0x1A	; 26
     3e0:	ea e0       	ldi	r30, 0x0A	; 10
     3e2:	f1 e0       	ldi	r31, 0x01	; 1
     3e4:	de 01       	movw	r26, r28
     3e6:	13 96       	adiw	r26, 0x03	; 3
     3e8:	01 90       	ld	r0, Z+
     3ea:	0d 92       	st	X+, r0
     3ec:	8a 95       	dec	r24
     3ee:	e1 f7       	brne	.-8      	; 0x3e8 <InitGPS+0x2a>
	SetUBRR = InitUSART(GPSBAUD, GPSPORT);
     3f0:	40 e0       	ldi	r20, 0x00	; 0
     3f2:	60 e8       	ldi	r22, 0x80	; 128
     3f4:	75 e2       	ldi	r23, 0x25	; 37
     3f6:	80 e0       	ldi	r24, 0x00	; 0
     3f8:	90 e0       	ldi	r25, 0x00	; 0
     3fa:	ca d2       	rcall	.+1428   	; 0x990 <InitUSART>
     3fc:	9a 83       	std	Y+2, r25	; 0x02
     3fe:	89 83       	std	Y+1, r24	; 0x01
	if (SetUBRR){
     400:	89 81       	ldd	r24, Y+1	; 0x01
     402:	9a 81       	ldd	r25, Y+2	; 0x02
     404:	00 97       	sbiw	r24, 0x00	; 0
     406:	09 f4       	brne	.+2      	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
     408:	5d c0       	rjmp	.+186    	; 0x4c4 <__LOCK_REGION_LENGTH__+0xc4>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     40a:	2f ef       	ldi	r18, 0xFF	; 255
     40c:	87 ea       	ldi	r24, 0xA7	; 167
     40e:	91 e6       	ldi	r25, 0x61	; 97
     410:	21 50       	subi	r18, 0x01	; 1
     412:	80 40       	sbci	r24, 0x00	; 0
     414:	90 40       	sbci	r25, 0x00	; 0
     416:	e1 f7       	brne	.-8      	; 0x410 <__LOCK_REGION_LENGTH__+0x10>
     418:	00 c0       	rjmp	.+0      	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
     41a:	00 00       	nop
		_delay_ms(2000);
		PUBXCFGSetup(CFGMSG, "GLL");
     41c:	65 e3       	ldi	r22, 0x35	; 53
     41e:	71 e0       	ldi	r23, 0x01	; 1
     420:	ce 01       	movw	r24, r28
     422:	03 96       	adiw	r24, 0x03	; 3
     424:	a5 df       	rcall	.-182    	; 0x370 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     426:	6a e1       	ldi	r22, 0x1A	; 26
     428:	ce 01       	movw	r24, r28
     42a:	03 96       	adiw	r24, 0x03	; 3
     42c:	24 df       	rcall	.-440    	; 0x276 <SendGPS>
     42e:	2f ef       	ldi	r18, 0xFF	; 255
     430:	85 ea       	ldi	r24, 0xA5	; 165
     432:	9e e0       	ldi	r25, 0x0E	; 14
     434:	21 50       	subi	r18, 0x01	; 1
     436:	80 40       	sbci	r24, 0x00	; 0
     438:	90 40       	sbci	r25, 0x00	; 0
     43a:	e1 f7       	brne	.-8      	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
     43c:	00 c0       	rjmp	.+0      	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     43e:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "GSA");
     440:	69 e3       	ldi	r22, 0x39	; 57
     442:	71 e0       	ldi	r23, 0x01	; 1
     444:	ce 01       	movw	r24, r28
     446:	03 96       	adiw	r24, 0x03	; 3
     448:	93 df       	rcall	.-218    	; 0x370 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     44a:	6a e1       	ldi	r22, 0x1A	; 26
     44c:	ce 01       	movw	r24, r28
     44e:	03 96       	adiw	r24, 0x03	; 3
     450:	12 df       	rcall	.-476    	; 0x276 <SendGPS>
     452:	2f ef       	ldi	r18, 0xFF	; 255
     454:	85 ea       	ldi	r24, 0xA5	; 165
     456:	9e e0       	ldi	r25, 0x0E	; 14
     458:	21 50       	subi	r18, 0x01	; 1
     45a:	80 40       	sbci	r24, 0x00	; 0
     45c:	90 40       	sbci	r25, 0x00	; 0
     45e:	e1 f7       	brne	.-8      	; 0x458 <__LOCK_REGION_LENGTH__+0x58>
     460:	00 c0       	rjmp	.+0      	; 0x462 <__LOCK_REGION_LENGTH__+0x62>
     462:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "GSV");
     464:	6d e3       	ldi	r22, 0x3D	; 61
     466:	71 e0       	ldi	r23, 0x01	; 1
     468:	ce 01       	movw	r24, r28
     46a:	03 96       	adiw	r24, 0x03	; 3
     46c:	81 df       	rcall	.-254    	; 0x370 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     46e:	6a e1       	ldi	r22, 0x1A	; 26
     470:	ce 01       	movw	r24, r28
     472:	03 96       	adiw	r24, 0x03	; 3
     474:	00 df       	rcall	.-512    	; 0x276 <SendGPS>
     476:	2f ef       	ldi	r18, 0xFF	; 255
     478:	85 ea       	ldi	r24, 0xA5	; 165
     47a:	9e e0       	ldi	r25, 0x0E	; 14
     47c:	21 50       	subi	r18, 0x01	; 1
     47e:	80 40       	sbci	r24, 0x00	; 0
     480:	90 40       	sbci	r25, 0x00	; 0
     482:	e1 f7       	brne	.-8      	; 0x47c <__LOCK_REGION_LENGTH__+0x7c>
     484:	00 c0       	rjmp	.+0      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
     486:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "RMC");
     488:	61 e4       	ldi	r22, 0x41	; 65
     48a:	71 e0       	ldi	r23, 0x01	; 1
     48c:	ce 01       	movw	r24, r28
     48e:	03 96       	adiw	r24, 0x03	; 3
     490:	6f df       	rcall	.-290    	; 0x370 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     492:	6a e1       	ldi	r22, 0x1A	; 26
     494:	ce 01       	movw	r24, r28
     496:	03 96       	adiw	r24, 0x03	; 3
     498:	ee de       	rcall	.-548    	; 0x276 <SendGPS>
     49a:	2f ef       	ldi	r18, 0xFF	; 255
     49c:	85 ea       	ldi	r24, 0xA5	; 165
     49e:	9e e0       	ldi	r25, 0x0E	; 14
     4a0:	21 50       	subi	r18, 0x01	; 1
     4a2:	80 40       	sbci	r24, 0x00	; 0
     4a4:	90 40       	sbci	r25, 0x00	; 0
     4a6:	e1 f7       	brne	.-8      	; 0x4a0 <__LOCK_REGION_LENGTH__+0xa0>
     4a8:	00 c0       	rjmp	.+0      	; 0x4aa <__LOCK_REGION_LENGTH__+0xaa>
     4aa:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "VTG");
     4ac:	65 e4       	ldi	r22, 0x45	; 69
     4ae:	71 e0       	ldi	r23, 0x01	; 1
     4b0:	ce 01       	movw	r24, r28
     4b2:	03 96       	adiw	r24, 0x03	; 3
     4b4:	5d df       	rcall	.-326    	; 0x370 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     4b6:	6a e1       	ldi	r22, 0x1A	; 26
     4b8:	ce 01       	movw	r24, r28
     4ba:	03 96       	adiw	r24, 0x03	; 3
     4bc:	dc de       	rcall	.-584    	; 0x276 <SendGPS>
		sei();
     4be:	78 94       	sei
		return SetUBRR;
     4c0:	89 81       	ldd	r24, Y+1	; 0x01
     4c2:	9a 81       	ldd	r25, Y+2	; 0x02
	} else {
		return 0;
	}
}
     4c4:	6c 96       	adiw	r28, 0x1c	; 28
     4c6:	0f b6       	in	r0, 0x3f	; 63
     4c8:	f8 94       	cli
     4ca:	de bf       	out	0x3e, r29	; 62
     4cc:	0f be       	out	0x3f, r0	; 63
     4ce:	cd bf       	out	0x3d, r28	; 61
     4d0:	df 91       	pop	r29
     4d2:	cf 91       	pop	r28
     4d4:	08 95       	ret

000004d6 <parseDegreesMinutes>:
}

// Parses a string in the format: DDMM.MMMMMMM, where DD is degrees, and MM is minutes.
// degLength is the length of the degrees part. For example, degLength of 3 means
// the string will be DDDMM.MMMMMMM.
float parseDegreesMinutes(char *s, int degLength) {
     4d6:	af 92       	push	r10
     4d8:	bf 92       	push	r11
     4da:	cf 92       	push	r12
     4dc:	df 92       	push	r13
     4de:	ef 92       	push	r14
     4e0:	ff 92       	push	r15
     4e2:	0f 93       	push	r16
     4e4:	1f 93       	push	r17
     4e6:	cf 93       	push	r28
     4e8:	df 93       	push	r29
     4ea:	cd b7       	in	r28, 0x3d	; 61
     4ec:	de b7       	in	r29, 0x3e	; 62
     4ee:	28 97       	sbiw	r28, 0x08	; 8
     4f0:	0f b6       	in	r0, 0x3f	; 63
     4f2:	f8 94       	cli
     4f4:	de bf       	out	0x3e, r29	; 62
     4f6:	0f be       	out	0x3f, r0	; 63
     4f8:	cd bf       	out	0x3d, r28	; 61
     4fa:	6c 01       	movw	r12, r24
     4fc:	8b 01       	movw	r16, r22
	degrees = atof(degreesString);
	// Convert the minutes
	minutes = atof(s + degLength);
	// Convert the minutes to decimal degrees
	return degrees + (minutes / 60);
}
     4fe:	ad b6       	in	r10, 0x3d	; 61
     500:	be b6       	in	r11, 0x3e	; 62

// Parses a string in the format: DDMM.MMMMMMM, where DD is degrees, and MM is minutes.
// degLength is the length of the degrees part. For example, degLength of 3 means
// the string will be DDDMM.MMMMMMM.
float parseDegreesMinutes(char *s, int degLength) {
	char degreesString[degLength + 1];
     502:	cb 01       	movw	r24, r22
     504:	01 96       	adiw	r24, 0x01	; 1
     506:	2d b7       	in	r18, 0x3d	; 61
     508:	3e b7       	in	r19, 0x3e	; 62
     50a:	28 1b       	sub	r18, r24
     50c:	39 0b       	sbc	r19, r25
     50e:	0f b6       	in	r0, 0x3f	; 63
     510:	f8 94       	cli
     512:	3e bf       	out	0x3e, r19	; 62
     514:	0f be       	out	0x3f, r0	; 63
     516:	2d bf       	out	0x3d, r18	; 61
     518:	8d b7       	in	r24, 0x3d	; 61
     51a:	9e b7       	in	r25, 0x3e	; 62
     51c:	01 96       	adiw	r24, 0x01	; 1
     51e:	7c 01       	movw	r14, r24
	float volatile degrees;
	float volatile minutes;
	// Copy the degrees part into degreesString and convert it to a float
	strncpy(degreesString, s, degLength);
     520:	ab 01       	movw	r20, r22
     522:	b6 01       	movw	r22, r12
     524:	3c d6       	rcall	.+3192   	; 0x119e <strncpy>
	degreesString[degLength] = '\0';
     526:	f7 01       	movw	r30, r14
     528:	e0 0f       	add	r30, r16
     52a:	f1 1f       	adc	r31, r17
     52c:	10 82       	st	Z, r1
	degrees = atof(degreesString);
     52e:	c7 01       	movw	r24, r14
     530:	14 d6       	rcall	.+3112   	; 0x115a <atof>
     532:	69 83       	std	Y+1, r22	; 0x01
     534:	7a 83       	std	Y+2, r23	; 0x02
     536:	8b 83       	std	Y+3, r24	; 0x03
     538:	9c 83       	std	Y+4, r25	; 0x04
	// Convert the minutes
	minutes = atof(s + degLength);
     53a:	c6 01       	movw	r24, r12
     53c:	80 0f       	add	r24, r16
     53e:	91 1f       	adc	r25, r17
     540:	0c d6       	rcall	.+3096   	; 0x115a <atof>
     542:	6d 83       	std	Y+5, r22	; 0x05
     544:	7e 83       	std	Y+6, r23	; 0x06
     546:	8f 83       	std	Y+7, r24	; 0x07
     548:	98 87       	std	Y+8, r25	; 0x08
	// Convert the minutes to decimal degrees
	return degrees + (minutes / 60);
     54a:	6d 81       	ldd	r22, Y+5	; 0x05
     54c:	7e 81       	ldd	r23, Y+6	; 0x06
     54e:	8f 81       	ldd	r24, Y+7	; 0x07
     550:	98 85       	ldd	r25, Y+8	; 0x08
     552:	c9 80       	ldd	r12, Y+1	; 0x01
     554:	da 80       	ldd	r13, Y+2	; 0x02
     556:	eb 80       	ldd	r14, Y+3	; 0x03
     558:	fc 80       	ldd	r15, Y+4	; 0x04
     55a:	20 e0       	ldi	r18, 0x00	; 0
     55c:	30 e0       	ldi	r19, 0x00	; 0
     55e:	40 e7       	ldi	r20, 0x70	; 112
     560:	52 e4       	ldi	r21, 0x42	; 66
     562:	a9 d2       	rcall	.+1362   	; 0xab6 <__divsf3>
     564:	a7 01       	movw	r20, r14
     566:	96 01       	movw	r18, r12
     568:	42 d2       	rcall	.+1156   	; 0x9ee <__addsf3>
}
     56a:	0f b6       	in	r0, 0x3f	; 63
     56c:	f8 94       	cli
     56e:	be be       	out	0x3e, r11	; 62
     570:	0f be       	out	0x3f, r0	; 63
     572:	ad be       	out	0x3d, r10	; 61
     574:	28 96       	adiw	r28, 0x08	; 8
     576:	0f b6       	in	r0, 0x3f	; 63
     578:	f8 94       	cli
     57a:	de bf       	out	0x3e, r29	; 62
     57c:	0f be       	out	0x3f, r0	; 63
     57e:	cd bf       	out	0x3d, r28	; 61
     580:	df 91       	pop	r29
     582:	cf 91       	pop	r28
     584:	1f 91       	pop	r17
     586:	0f 91       	pop	r16
     588:	ff 90       	pop	r15
     58a:	ef 90       	pop	r14
     58c:	df 90       	pop	r13
     58e:	cf 90       	pop	r12
     590:	bf 90       	pop	r11
     592:	af 90       	pop	r10
     594:	08 95       	ret

00000596 <parseGGA>:
// Parameters:
//		packet:		the GGA message string
//		GPSdata:	the struct that accepts the final calculated data
// Returns:
//		Nothing
void parseGGA(char *packet, struct GPSStruct *GPSdata) {
     596:	ef 92       	push	r14
     598:	ff 92       	push	r15
     59a:	0f 93       	push	r16
     59c:	1f 93       	push	r17
     59e:	cf 93       	push	r28
     5a0:	df 93       	push	r29
     5a2:	00 d0       	rcall	.+0      	; 0x5a4 <parseGGA+0xe>
     5a4:	cd b7       	in	r28, 0x3d	; 61
     5a6:	de b7       	in	r29, 0x3e	; 62
     5a8:	8b 01       	movw	r16, r22
	char *packetCopy = strdup(packet);
     5aa:	da d5       	rcall	.+2996   	; 0x1160 <strdup>
     5ac:	7c 01       	movw	r14, r24
     5ae:	9a 83       	std	Y+2, r25	; 0x02
     5b0:	89 83       	std	Y+1, r24	; 0x01
	char *msgPart = packetCopy;
	int i;
	
	// Skip the xxGGA and time fields
	for(i = 0; i < 2; i++) {
		strsep(&packetCopy, ",");
     5b2:	69 e4       	ldi	r22, 0x49	; 73
     5b4:	71 e0       	ldi	r23, 0x01	; 1
     5b6:	ce 01       	movw	r24, r28
     5b8:	01 96       	adiw	r24, 0x01	; 1
     5ba:	00 d6       	rcall	.+3072   	; 0x11bc <strsep>
     5bc:	69 e4       	ldi	r22, 0x49	; 73
     5be:	71 e0       	ldi	r23, 0x01	; 1
     5c0:	ce 01       	movw	r24, r28
     5c2:	01 96       	adiw	r24, 0x01	; 1
     5c4:	fb d5       	rcall	.+3062   	; 0x11bc <strsep>
	}
	
	// get the latitude
	msgPart = strsep(&packetCopy, ",");
     5c6:	69 e4       	ldi	r22, 0x49	; 73
     5c8:	71 e0       	ldi	r23, 0x01	; 1
     5ca:	ce 01       	movw	r24, r28
     5cc:	01 96       	adiw	r24, 0x01	; 1
     5ce:	f6 d5       	rcall	.+3052   	; 0x11bc <strsep>
	GPSdata->latitude = parseDegreesMinutes(msgPart, 2);
     5d0:	62 e0       	ldi	r22, 0x02	; 2
     5d2:	70 e0       	ldi	r23, 0x00	; 0
     5d4:	80 df       	rcall	.-256    	; 0x4d6 <parseDegreesMinutes>
     5d6:	f8 01       	movw	r30, r16
     5d8:	62 83       	std	Z+2, r22	; 0x02
     5da:	73 83       	std	Z+3, r23	; 0x03
     5dc:	84 83       	std	Z+4, r24	; 0x04
     5de:	95 83       	std	Z+5, r25	; 0x05
	// get the N/S component of the latitude. If it's 'S', then make the latitude negative
	msgPart = strsep(&packetCopy, ",");
     5e0:	69 e4       	ldi	r22, 0x49	; 73
     5e2:	71 e0       	ldi	r23, 0x01	; 1
     5e4:	ce 01       	movw	r24, r28
     5e6:	01 96       	adiw	r24, 0x01	; 1
     5e8:	e9 d5       	rcall	.+3026   	; 0x11bc <strsep>
	if(*msgPart == 'S') {
     5ea:	fc 01       	movw	r30, r24
     5ec:	80 81       	ld	r24, Z
     5ee:	83 35       	cpi	r24, 0x53	; 83
     5f0:	51 f4       	brne	.+20     	; 0x606 <parseGGA+0x70>
		GPSdata->latitude = -GPSdata->latitude;
     5f2:	f8 01       	movw	r30, r16
     5f4:	82 81       	ldd	r24, Z+2	; 0x02
     5f6:	93 81       	ldd	r25, Z+3	; 0x03
     5f8:	a4 81       	ldd	r26, Z+4	; 0x04
     5fa:	b5 81       	ldd	r27, Z+5	; 0x05
     5fc:	b0 58       	subi	r27, 0x80	; 128
     5fe:	82 83       	std	Z+2, r24	; 0x02
     600:	93 83       	std	Z+3, r25	; 0x03
     602:	a4 83       	std	Z+4, r26	; 0x04
     604:	b5 83       	std	Z+5, r27	; 0x05
	}
	
	// get the longitude
	msgPart = strsep(&packetCopy, ",");
     606:	69 e4       	ldi	r22, 0x49	; 73
     608:	71 e0       	ldi	r23, 0x01	; 1
     60a:	ce 01       	movw	r24, r28
     60c:	01 96       	adiw	r24, 0x01	; 1
     60e:	d6 d5       	rcall	.+2988   	; 0x11bc <strsep>
	GPSdata->longitude = parseDegreesMinutes(msgPart, 3);
     610:	63 e0       	ldi	r22, 0x03	; 3
     612:	70 e0       	ldi	r23, 0x00	; 0
     614:	60 df       	rcall	.-320    	; 0x4d6 <parseDegreesMinutes>
     616:	f8 01       	movw	r30, r16
     618:	66 83       	std	Z+6, r22	; 0x06
     61a:	77 83       	std	Z+7, r23	; 0x07
     61c:	80 87       	std	Z+8, r24	; 0x08
     61e:	91 87       	std	Z+9, r25	; 0x09
	// get the E/W component of the longitude. If it's 'W', then make the longitude negative
	msgPart = strsep(&packetCopy, ",");
     620:	69 e4       	ldi	r22, 0x49	; 73
     622:	71 e0       	ldi	r23, 0x01	; 1
     624:	ce 01       	movw	r24, r28
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	c9 d5       	rcall	.+2962   	; 0x11bc <strsep>
	if(*msgPart == 'W') {
     62a:	fc 01       	movw	r30, r24
     62c:	80 81       	ld	r24, Z
     62e:	87 35       	cpi	r24, 0x57	; 87
     630:	b9 f4       	brne	.+46     	; 0x660 <parseGGA+0xca>
		GPSdata->longitude = -GPSdata->longitude;
     632:	f8 01       	movw	r30, r16
     634:	86 81       	ldd	r24, Z+6	; 0x06
     636:	97 81       	ldd	r25, Z+7	; 0x07
     638:	a0 85       	ldd	r26, Z+8	; 0x08
     63a:	b1 85       	ldd	r27, Z+9	; 0x09
     63c:	b0 58       	subi	r27, 0x80	; 128
     63e:	86 83       	std	Z+6, r24	; 0x06
     640:	97 83       	std	Z+7, r25	; 0x07
     642:	a0 87       	std	Z+8, r26	; 0x08
     644:	b1 87       	std	Z+9, r27	; 0x09
     646:	0c c0       	rjmp	.+24     	; 0x660 <parseGGA+0xca>
	}
	
	// Get the altitude. If there is no altitude, then set it to zero.
	msgPart = strsep(&packetCopy, ",");
	if(*msgPart != '\0') {
		GPSdata->GPSAltitude = atof(msgPart);
     648:	88 d5       	rcall	.+2832   	; 0x115a <atof>
     64a:	a2 d2       	rcall	.+1348   	; 0xb90 <__fixunssfsi>
     64c:	f8 01       	movw	r30, r16
     64e:	71 83       	std	Z+1, r23	; 0x01
     650:	60 83       	st	Z, r22
     652:	03 c0       	rjmp	.+6      	; 0x65a <parseGGA+0xc4>
	} else {
		GPSdata->GPSAltitude = 0;
     654:	f8 01       	movw	r30, r16
     656:	11 82       	std	Z+1, r1	; 0x01
     658:	10 82       	st	Z, r1
	}
	
	free(originalPacketCopy);
     65a:	c7 01       	movw	r24, r14
     65c:	91 d4       	rcall	.+2338   	; 0xf80 <free>
     65e:	19 c0       	rjmp	.+50     	; 0x692 <parseGGA+0xfc>
		GPSdata->longitude = -GPSdata->longitude;
	}
	
	// Skip the quality, numSV, and HDOP fields
	for(i = 0; i < 3; i++) {
		strsep(&packetCopy, ",");
     660:	69 e4       	ldi	r22, 0x49	; 73
     662:	71 e0       	ldi	r23, 0x01	; 1
     664:	ce 01       	movw	r24, r28
     666:	01 96       	adiw	r24, 0x01	; 1
     668:	a9 d5       	rcall	.+2898   	; 0x11bc <strsep>
     66a:	69 e4       	ldi	r22, 0x49	; 73
     66c:	71 e0       	ldi	r23, 0x01	; 1
     66e:	ce 01       	movw	r24, r28
     670:	01 96       	adiw	r24, 0x01	; 1
     672:	a4 d5       	rcall	.+2888   	; 0x11bc <strsep>
     674:	69 e4       	ldi	r22, 0x49	; 73
     676:	71 e0       	ldi	r23, 0x01	; 1
     678:	ce 01       	movw	r24, r28
     67a:	01 96       	adiw	r24, 0x01	; 1
     67c:	9f d5       	rcall	.+2878   	; 0x11bc <strsep>
	}
	
	// Get the altitude. If there is no altitude, then set it to zero.
	msgPart = strsep(&packetCopy, ",");
     67e:	69 e4       	ldi	r22, 0x49	; 73
     680:	71 e0       	ldi	r23, 0x01	; 1
     682:	ce 01       	movw	r24, r28
     684:	01 96       	adiw	r24, 0x01	; 1
     686:	9a d5       	rcall	.+2868   	; 0x11bc <strsep>
	if(*msgPart != '\0') {
     688:	fc 01       	movw	r30, r24
     68a:	20 81       	ld	r18, Z
     68c:	22 23       	and	r18, r18
     68e:	11 f3       	breq	.-60     	; 0x654 <parseGGA+0xbe>
     690:	db cf       	rjmp	.-74     	; 0x648 <parseGGA+0xb2>
		GPSdata->GPSAltitude = 0;
	}
	
	free(originalPacketCopy);
		
}
     692:	0f 90       	pop	r0
     694:	0f 90       	pop	r0
     696:	df 91       	pop	r29
     698:	cf 91       	pop	r28
     69a:	1f 91       	pop	r17
     69c:	0f 91       	pop	r16
     69e:	ff 90       	pop	r15
     6a0:	ef 90       	pop	r14
     6a2:	08 95       	ret

000006a4 <getGPSData>:
// Once message end flag is set, puts data in the GPS struct and resets end flag
// Parameters:
//		GPSdata:	Struct that accepts data
//	Returns:
//		Nothing
void getGPSData(struct GPSStruct *GPSdata){
     6a4:	4f 92       	push	r4
     6a6:	5f 92       	push	r5
     6a8:	6f 92       	push	r6
     6aa:	7f 92       	push	r7
     6ac:	8f 92       	push	r8
     6ae:	9f 92       	push	r9
     6b0:	af 92       	push	r10
     6b2:	bf 92       	push	r11
     6b4:	cf 92       	push	r12
     6b6:	df 92       	push	r13
     6b8:	ef 92       	push	r14
     6ba:	ff 92       	push	r15
     6bc:	0f 93       	push	r16
     6be:	1f 93       	push	r17
     6c0:	cf 93       	push	r28
     6c2:	df 93       	push	r29
     6c4:	cd b7       	in	r28, 0x3d	; 61
     6c6:	de b7       	in	r29, 0x3e	; 62
     6c8:	c2 51       	subi	r28, 0x12	; 18
     6ca:	d1 40       	sbci	r29, 0x01	; 1
     6cc:	0f b6       	in	r0, 0x3f	; 63
     6ce:	f8 94       	cli
     6d0:	de bf       	out	0x3e, r29	; 62
     6d2:	0f be       	out	0x3f, r0	; 63
     6d4:	cd bf       	out	0x3d, r28	; 61
     6d6:	8c 01       	movw	r16, r24
	#ifdef DOUNITTEST
	uint8_t volatile echoLength = 0;
     6d8:	19 82       	std	Y+1, r1	; 0x01
	uint8_t volatile echoIndex = 0;
     6da:	1a 82       	std	Y+2, r1	; 0x02
	int32_t volatile latConvert = 0; 
     6dc:	1b 82       	std	Y+3, r1	; 0x03
     6de:	1c 82       	std	Y+4, r1	; 0x04
     6e0:	1d 82       	std	Y+5, r1	; 0x05
     6e2:	1e 82       	std	Y+6, r1	; 0x06
	int32_t volatile longConvert = 0;
     6e4:	1f 82       	std	Y+7, r1	; 0x07
     6e6:	18 86       	std	Y+8, r1	; 0x08
     6e8:	19 86       	std	Y+9, r1	; 0x09
     6ea:	1a 86       	std	Y+10, r1	; 0x0a
	char echoLatLongAlt[256];
	#endif
	if (msgEndFlag){
     6ec:	90 91 63 01 	lds	r25, 0x0163	; 0x800163 <msgEndFlag>
     6f0:	99 23       	and	r25, r25
     6f2:	09 f4       	brne	.+2      	; 0x6f6 <getGPSData+0x52>
     6f4:	bd c0       	rjmp	.+378    	; 0x870 <getGPSData+0x1cc>
		parseGGA(gpsBuffer, GPSdata);
     6f6:	b8 01       	movw	r22, r16
     6f8:	86 e6       	ldi	r24, 0x66	; 102
     6fa:	91 e0       	ldi	r25, 0x01	; 1
     6fc:	4c df       	rcall	.-360    	; 0x596 <parseGGA>
		msgEndFlag = 0;
     6fe:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <msgEndFlag>
		#ifdef DOUNITTEST
		PORTB &= ~(1 << 3);
     702:	c3 98       	cbi	0x18, 3	; 24
		latConvert = (int32_t)GPSdata->latitude;
     704:	d8 01       	movw	r26, r16
     706:	12 96       	adiw	r26, 0x02	; 2
     708:	4d 90       	ld	r4, X+
     70a:	5d 90       	ld	r5, X+
     70c:	6d 90       	ld	r6, X+
     70e:	7c 90       	ld	r7, X
     710:	15 97       	sbiw	r26, 0x05	; 5
     712:	c5 5f       	subi	r28, 0xF5	; 245
     714:	de 4f       	sbci	r29, 0xFE	; 254
     716:	48 82       	st	Y, r4
     718:	59 82       	std	Y+1, r5	; 0x01
     71a:	6a 82       	std	Y+2, r6	; 0x02
     71c:	7b 82       	std	Y+3, r7	; 0x03
     71e:	cb 50       	subi	r28, 0x0B	; 11
     720:	d1 40       	sbci	r29, 0x01	; 1
     722:	c3 01       	movw	r24, r6
     724:	b2 01       	movw	r22, r4
     726:	2f d2       	rcall	.+1118   	; 0xb86 <__fixsfsi>
     728:	6b 83       	std	Y+3, r22	; 0x03
     72a:	7c 83       	std	Y+4, r23	; 0x04
     72c:	8d 83       	std	Y+5, r24	; 0x05
     72e:	9e 83       	std	Y+6, r25	; 0x06
		longConvert = (int32_t)GPSdata->longitude;
     730:	f8 01       	movw	r30, r16
     732:	86 80       	ldd	r8, Z+6	; 0x06
     734:	97 80       	ldd	r9, Z+7	; 0x07
     736:	a0 84       	ldd	r10, Z+8	; 0x08
     738:	b1 84       	ldd	r11, Z+9	; 0x09
     73a:	c5 01       	movw	r24, r10
     73c:	b4 01       	movw	r22, r8
     73e:	23 d2       	rcall	.+1094   	; 0xb86 <__fixsfsi>
     740:	6f 83       	std	Y+7, r22	; 0x07
     742:	78 87       	std	Y+8, r23	; 0x08
     744:	89 87       	std	Y+9, r24	; 0x09
     746:	9a 87       	std	Y+10, r25	; 0x0a
		echoLength = sprintf(echoLatLongAlt, " %ld.%ld %ld.%ld %u %u", latConvert, labs((int32_t)((GPSdata->latitude - latConvert)*100000)), longConvert, labs((int32_t)((GPSdata->longitude - longConvert)*100000)), GPSdata->GPSAltitude, commaCount);
     748:	20 91 62 01 	lds	r18, 0x0162	; 0x800162 <__data_end>
     74c:	6f 81       	ldd	r22, Y+7	; 0x07
     74e:	78 85       	ldd	r23, Y+8	; 0x08
     750:	89 85       	ldd	r24, Y+9	; 0x09
     752:	9a 85       	ldd	r25, Y+10	; 0x0a
     754:	cf 80       	ldd	r12, Y+7	; 0x07
     756:	d8 84       	ldd	r13, Y+8	; 0x08
     758:	e9 84       	ldd	r14, Y+9	; 0x09
     75a:	fa 84       	ldd	r15, Y+10	; 0x0a
     75c:	4b 80       	ldd	r4, Y+3	; 0x03
     75e:	5c 80       	ldd	r5, Y+4	; 0x04
     760:	6d 80       	ldd	r6, Y+5	; 0x05
     762:	7e 80       	ldd	r7, Y+6	; 0x06
     764:	c1 5f       	subi	r28, 0xF1	; 241
     766:	de 4f       	sbci	r29, 0xFE	; 254
     768:	48 82       	st	Y, r4
     76a:	59 82       	std	Y+1, r5	; 0x01
     76c:	6a 82       	std	Y+2, r6	; 0x02
     76e:	7b 82       	std	Y+3, r7	; 0x03
     770:	cf 50       	subi	r28, 0x0F	; 15
     772:	d1 40       	sbci	r29, 0x01	; 1
     774:	4b 80       	ldd	r4, Y+3	; 0x03
     776:	5c 80       	ldd	r5, Y+4	; 0x04
     778:	6d 80       	ldd	r6, Y+5	; 0x05
     77a:	7e 80       	ldd	r7, Y+6	; 0x06
     77c:	1f 92       	push	r1
     77e:	2f 93       	push	r18
     780:	d8 01       	movw	r26, r16
     782:	11 96       	adiw	r26, 0x01	; 1
     784:	2c 91       	ld	r18, X
     786:	11 97       	sbiw	r26, 0x01	; 1
     788:	2f 93       	push	r18
     78a:	2c 91       	ld	r18, X
     78c:	2f 93       	push	r18
     78e:	2e d2       	rcall	.+1116   	; 0xbec <__floatsisf>
     790:	9b 01       	movw	r18, r22
     792:	ac 01       	movw	r20, r24
     794:	c5 01       	movw	r24, r10
     796:	b4 01       	movw	r22, r8
     798:	29 d1       	rcall	.+594    	; 0x9ec <__subsf3>
     79a:	20 e0       	ldi	r18, 0x00	; 0
     79c:	30 e5       	ldi	r19, 0x50	; 80
     79e:	43 ec       	ldi	r20, 0xC3	; 195
     7a0:	57 e4       	ldi	r21, 0x47	; 71
     7a2:	b0 d2       	rcall	.+1376   	; 0xd04 <__mulsf3>
     7a4:	f0 d1       	rcall	.+992    	; 0xb86 <__fixsfsi>
     7a6:	99 23       	and	r25, r25
     7a8:	3c f4       	brge	.+14     	; 0x7b8 <getGPSData+0x114>
     7aa:	90 95       	com	r25
     7ac:	80 95       	com	r24
     7ae:	70 95       	com	r23
     7b0:	61 95       	neg	r22
     7b2:	7f 4f       	sbci	r23, 0xFF	; 255
     7b4:	8f 4f       	sbci	r24, 0xFF	; 255
     7b6:	9f 4f       	sbci	r25, 0xFF	; 255
     7b8:	9f 93       	push	r25
     7ba:	8f 93       	push	r24
     7bc:	7f 93       	push	r23
     7be:	6f 93       	push	r22
     7c0:	ff 92       	push	r15
     7c2:	ef 92       	push	r14
     7c4:	df 92       	push	r13
     7c6:	cf 92       	push	r12
     7c8:	c1 5f       	subi	r28, 0xF1	; 241
     7ca:	de 4f       	sbci	r29, 0xFE	; 254
     7cc:	68 81       	ld	r22, Y
     7ce:	79 81       	ldd	r23, Y+1	; 0x01
     7d0:	8a 81       	ldd	r24, Y+2	; 0x02
     7d2:	9b 81       	ldd	r25, Y+3	; 0x03
     7d4:	cf 50       	subi	r28, 0x0F	; 15
     7d6:	d1 40       	sbci	r29, 0x01	; 1
     7d8:	09 d2       	rcall	.+1042   	; 0xbec <__floatsisf>
     7da:	9b 01       	movw	r18, r22
     7dc:	ac 01       	movw	r20, r24
     7de:	c5 5f       	subi	r28, 0xF5	; 245
     7e0:	de 4f       	sbci	r29, 0xFE	; 254
     7e2:	68 81       	ld	r22, Y
     7e4:	79 81       	ldd	r23, Y+1	; 0x01
     7e6:	8a 81       	ldd	r24, Y+2	; 0x02
     7e8:	9b 81       	ldd	r25, Y+3	; 0x03
     7ea:	cb 50       	subi	r28, 0x0B	; 11
     7ec:	d1 40       	sbci	r29, 0x01	; 1
     7ee:	fe d0       	rcall	.+508    	; 0x9ec <__subsf3>
     7f0:	20 e0       	ldi	r18, 0x00	; 0
     7f2:	30 e5       	ldi	r19, 0x50	; 80
     7f4:	43 ec       	ldi	r20, 0xC3	; 195
     7f6:	57 e4       	ldi	r21, 0x47	; 71
     7f8:	85 d2       	rcall	.+1290   	; 0xd04 <__mulsf3>
     7fa:	c5 d1       	rcall	.+906    	; 0xb86 <__fixsfsi>
     7fc:	99 23       	and	r25, r25
     7fe:	3c f4       	brge	.+14     	; 0x80e <getGPSData+0x16a>
     800:	90 95       	com	r25
     802:	80 95       	com	r24
     804:	70 95       	com	r23
     806:	61 95       	neg	r22
     808:	7f 4f       	sbci	r23, 0xFF	; 255
     80a:	8f 4f       	sbci	r24, 0xFF	; 255
     80c:	9f 4f       	sbci	r25, 0xFF	; 255
     80e:	9f 93       	push	r25
     810:	8f 93       	push	r24
     812:	7f 93       	push	r23
     814:	6f 93       	push	r22
     816:	7f 92       	push	r7
     818:	6f 92       	push	r6
     81a:	5f 92       	push	r5
     81c:	4f 92       	push	r4
     81e:	8b e4       	ldi	r24, 0x4B	; 75
     820:	91 e0       	ldi	r25, 0x01	; 1
     822:	9f 93       	push	r25
     824:	8f 93       	push	r24
     826:	ce 01       	movw	r24, r28
     828:	0b 96       	adiw	r24, 0x0b	; 11
     82a:	9f 93       	push	r25
     82c:	8f 93       	push	r24
     82e:	de d4       	rcall	.+2492   	; 0x11ec <sprintf>
     830:	89 83       	std	Y+1, r24	; 0x01
		for (echoIndex; echoIndex < echoLength; echoIndex++){
     832:	8a 81       	ldd	r24, Y+2	; 0x02
     834:	9a 81       	ldd	r25, Y+2	; 0x02
     836:	89 81       	ldd	r24, Y+1	; 0x01
     838:	0f b6       	in	r0, 0x3f	; 63
     83a:	f8 94       	cli
     83c:	de bf       	out	0x3e, r29	; 62
     83e:	0f be       	out	0x3f, r0	; 63
     840:	cd bf       	out	0x3d, r28	; 61
     842:	98 17       	cp	r25, r24
     844:	88 f4       	brcc	.+34     	; 0x868 <getGPSData+0x1c4>
			USARTTX(echoLatLongAlt[echoIndex], GPSPORT);
     846:	8a 81       	ldd	r24, Y+2	; 0x02
     848:	eb e0       	ldi	r30, 0x0B	; 11
     84a:	f0 e0       	ldi	r31, 0x00	; 0
     84c:	ec 0f       	add	r30, r28
     84e:	fd 1f       	adc	r31, r29
     850:	e8 0f       	add	r30, r24
     852:	f1 1d       	adc	r31, r1
     854:	60 e0       	ldi	r22, 0x00	; 0
     856:	80 81       	ld	r24, Z
     858:	bb d0       	rcall	.+374    	; 0x9d0 <USARTTX>
		#ifdef DOUNITTEST
		PORTB &= ~(1 << 3);
		latConvert = (int32_t)GPSdata->latitude;
		longConvert = (int32_t)GPSdata->longitude;
		echoLength = sprintf(echoLatLongAlt, " %ld.%ld %ld.%ld %u %u", latConvert, labs((int32_t)((GPSdata->latitude - latConvert)*100000)), longConvert, labs((int32_t)((GPSdata->longitude - longConvert)*100000)), GPSdata->GPSAltitude, commaCount);
		for (echoIndex; echoIndex < echoLength; echoIndex++){
     85a:	8a 81       	ldd	r24, Y+2	; 0x02
     85c:	8f 5f       	subi	r24, 0xFF	; 255
     85e:	8a 83       	std	Y+2, r24	; 0x02
     860:	9a 81       	ldd	r25, Y+2	; 0x02
     862:	89 81       	ldd	r24, Y+1	; 0x01
     864:	98 17       	cp	r25, r24
     866:	78 f3       	brcs	.-34     	; 0x846 <getGPSData+0x1a2>
			USARTTX(echoLatLongAlt[echoIndex], GPSPORT);
		}
		USARTTX('\n', GPSPORT);
     868:	60 e0       	ldi	r22, 0x00	; 0
     86a:	8a e0       	ldi	r24, 0x0A	; 10
     86c:	b1 d0       	rcall	.+354    	; 0x9d0 <USARTTX>
		#endif
		sei();
     86e:	78 94       	sei
	}
	return;
}
     870:	ce 5e       	subi	r28, 0xEE	; 238
     872:	de 4f       	sbci	r29, 0xFE	; 254
     874:	0f b6       	in	r0, 0x3f	; 63
     876:	f8 94       	cli
     878:	de bf       	out	0x3e, r29	; 62
     87a:	0f be       	out	0x3f, r0	; 63
     87c:	cd bf       	out	0x3d, r28	; 61
     87e:	df 91       	pop	r29
     880:	cf 91       	pop	r28
     882:	1f 91       	pop	r17
     884:	0f 91       	pop	r16
     886:	ff 90       	pop	r15
     888:	ef 90       	pop	r14
     88a:	df 90       	pop	r13
     88c:	cf 90       	pop	r12
     88e:	bf 90       	pop	r11
     890:	af 90       	pop	r10
     892:	9f 90       	pop	r9
     894:	8f 90       	pop	r8
     896:	7f 90       	pop	r7
     898:	6f 90       	pop	r6
     89a:	5f 90       	pop	r5
     89c:	4f 90       	pop	r4
     89e:	08 95       	ret

000008a0 <testGPSInterrupt>:
}

// This function should test the GPS interrupt and parsing ability.
// GPS packets should be sent from laptop over FTDI to the board
// and an evident signal should be sent back if the test passed.
void testGPSInterrupt(void){
     8a0:	cf 93       	push	r28
     8a2:	df 93       	push	r29
     8a4:	cd b7       	in	r28, 0x3d	; 61
     8a6:	de b7       	in	r29, 0x3e	; 62
     8a8:	2a 97       	sbiw	r28, 0x0a	; 10
     8aa:	0f b6       	in	r0, 0x3f	; 63
     8ac:	f8 94       	cli
     8ae:	de bf       	out	0x3e, r29	; 62
     8b0:	0f be       	out	0x3f, r0	; 63
     8b2:	cd bf       	out	0x3d, r28	; 61
	struct GPSStruct gpsData;
	gpsData.GPSAltitude = 0;
     8b4:	1a 82       	std	Y+2, r1	; 0x02
     8b6:	19 82       	std	Y+1, r1	; 0x01
	gpsData.latitude = 0;
     8b8:	1b 82       	std	Y+3, r1	; 0x03
     8ba:	1c 82       	std	Y+4, r1	; 0x04
     8bc:	1d 82       	std	Y+5, r1	; 0x05
     8be:	1e 82       	std	Y+6, r1	; 0x06
	gpsData.longitude = 0;
     8c0:	1f 82       	std	Y+7, r1	; 0x07
     8c2:	18 86       	std	Y+8, r1	; 0x08
     8c4:	19 86       	std	Y+9, r1	; 0x09
     8c6:	1a 86       	std	Y+10, r1	; 0x0a
	DDRB = 255;
     8c8:	8f ef       	ldi	r24, 0xFF	; 255
     8ca:	87 bb       	out	0x17, r24	; 23
	PORTB = 255;
     8cc:	88 bb       	out	0x18, r24	; 24
     8ce:	2f ef       	ldi	r18, 0xFF	; 255
     8d0:	89 e6       	ldi	r24, 0x69	; 105
     8d2:	98 e1       	ldi	r25, 0x18	; 24
     8d4:	21 50       	subi	r18, 0x01	; 1
     8d6:	80 40       	sbci	r24, 0x00	; 0
     8d8:	90 40       	sbci	r25, 0x00	; 0
     8da:	e1 f7       	brne	.-8      	; 0x8d4 <testGPSInterrupt+0x34>
     8dc:	00 c0       	rjmp	.+0      	; 0x8de <testGPSInterrupt+0x3e>
     8de:	00 00       	nop
	_delay_ms(500);
	PORTB = 0;
     8e0:	18 ba       	out	0x18, r1	; 24
	InitGPS();
     8e2:	6d dd       	rcall	.-1318   	; 0x3be <InitGPS>
	while (1){
		getGPSData(&gpsData);
     8e4:	ce 01       	movw	r24, r28
     8e6:	01 96       	adiw	r24, 0x01	; 1
     8e8:	dd de       	rcall	.-582    	; 0x6a4 <getGPSData>
	}
     8ea:	fc cf       	rjmp	.-8      	; 0x8e4 <testGPSInterrupt+0x44>

000008ec <beginUnitTest>:
}

void beginUnitTest() {
	srand(time(NULL));
     8ec:	80 e0       	ldi	r24, 0x00	; 0
     8ee:	90 e0       	ldi	r25, 0x00	; 0
     8f0:	0a dc       	rcall	.-2028   	; 0x106 <time>
     8f2:	cb 01       	movw	r24, r22
     8f4:	27 d4       	rcall	.+2126   	; 0x1144 <srand>
	testGPSInterrupt();
     8f6:	d4 df       	rcall	.-88     	; 0x8a0 <testGPSInterrupt>

000008f8 <SetBR>:
#include "USARTComm.h"

uint16_t SetBR(uint32_t baud, uint8_t port){
     8f8:	1f 93       	push	r17
     8fa:	cf 93       	push	r28
     8fc:	df 93       	push	r29
     8fe:	00 d0       	rcall	.+0      	; 0x900 <SetBR+0x8>
     900:	cd b7       	in	r28, 0x3d	; 61
     902:	de b7       	in	r29, 0x3e	; 62
     904:	14 2f       	mov	r17, r20
	uint16_t volatile SetUBRR;
	SetUBRR = (F_CPU/(16*baud) - 1);
     906:	dc 01       	movw	r26, r24
     908:	cb 01       	movw	r24, r22
     90a:	88 0f       	add	r24, r24
     90c:	99 1f       	adc	r25, r25
     90e:	aa 1f       	adc	r26, r26
     910:	bb 1f       	adc	r27, r27
     912:	88 0f       	add	r24, r24
     914:	99 1f       	adc	r25, r25
     916:	aa 1f       	adc	r26, r26
     918:	bb 1f       	adc	r27, r27
     91a:	9c 01       	movw	r18, r24
     91c:	ad 01       	movw	r20, r26
     91e:	22 0f       	add	r18, r18
     920:	33 1f       	adc	r19, r19
     922:	44 1f       	adc	r20, r20
     924:	55 1f       	adc	r21, r21
     926:	22 0f       	add	r18, r18
     928:	33 1f       	adc	r19, r19
     92a:	44 1f       	adc	r20, r20
     92c:	55 1f       	adc	r21, r21
     92e:	60 e0       	ldi	r22, 0x00	; 0
     930:	74 e2       	ldi	r23, 0x24	; 36
     932:	84 ef       	ldi	r24, 0xF4	; 244
     934:	90 e0       	ldi	r25, 0x00	; 0
     936:	6d d2       	rcall	.+1242   	; 0xe12 <__udivmodsi4>
     938:	21 50       	subi	r18, 0x01	; 1
     93a:	31 09       	sbc	r19, r1
     93c:	3a 83       	std	Y+2, r19	; 0x02
     93e:	29 83       	std	Y+1, r18	; 0x01
	if (SetUBRR > 4095 || !SetUBRR){
     940:	89 81       	ldd	r24, Y+1	; 0x01
     942:	9a 81       	ldd	r25, Y+2	; 0x02
     944:	81 15       	cp	r24, r1
     946:	90 41       	sbci	r25, 0x10	; 16
     948:	d8 f4       	brcc	.+54     	; 0x980 <SetBR+0x88>
     94a:	89 81       	ldd	r24, Y+1	; 0x01
     94c:	9a 81       	ldd	r25, Y+2	; 0x02
     94e:	00 97       	sbiw	r24, 0x00	; 0
     950:	c9 f0       	breq	.+50     	; 0x984 <SetBR+0x8c>
		return 0;
	} else {
		if (port){
     952:	11 23       	and	r17, r17
     954:	59 f0       	breq	.+22     	; 0x96c <SetBR+0x74>
			UBRR1H = SetUBRR >> 8;
     956:	89 81       	ldd	r24, Y+1	; 0x01
     958:	9a 81       	ldd	r25, Y+2	; 0x02
     95a:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
			UBRR1L = SetUBRR;
     95e:	89 81       	ldd	r24, Y+1	; 0x01
     960:	9a 81       	ldd	r25, Y+2	; 0x02
     962:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
			return SetUBRR;
     966:	89 81       	ldd	r24, Y+1	; 0x01
     968:	9a 81       	ldd	r25, Y+2	; 0x02
     96a:	0c c0       	rjmp	.+24     	; 0x984 <SetBR+0x8c>
		} else {
			UBRR0H = SetUBRR >> 8;
     96c:	89 81       	ldd	r24, Y+1	; 0x01
     96e:	9a 81       	ldd	r25, Y+2	; 0x02
     970:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
			UBRR0L = SetUBRR;
     974:	89 81       	ldd	r24, Y+1	; 0x01
     976:	9a 81       	ldd	r25, Y+2	; 0x02
     978:	89 b9       	out	0x09, r24	; 9
			return SetUBRR;
     97a:	89 81       	ldd	r24, Y+1	; 0x01
     97c:	9a 81       	ldd	r25, Y+2	; 0x02
     97e:	02 c0       	rjmp	.+4      	; 0x984 <SetBR+0x8c>

uint16_t SetBR(uint32_t baud, uint8_t port){
	uint16_t volatile SetUBRR;
	SetUBRR = (F_CPU/(16*baud) - 1);
	if (SetUBRR > 4095 || !SetUBRR){
		return 0;
     980:	80 e0       	ldi	r24, 0x00	; 0
     982:	90 e0       	ldi	r25, 0x00	; 0
			UBRR0H = SetUBRR >> 8;
			UBRR0L = SetUBRR;
			return SetUBRR;
		}
	}
}
     984:	0f 90       	pop	r0
     986:	0f 90       	pop	r0
     988:	df 91       	pop	r29
     98a:	cf 91       	pop	r28
     98c:	1f 91       	pop	r17
     98e:	08 95       	ret

00000990 <InitUSART>:

uint16_t InitUSART(uint32_t baud, uint8_t port){
     990:	1f 93       	push	r17
     992:	cf 93       	push	r28
     994:	df 93       	push	r29
     996:	00 d0       	rcall	.+0      	; 0x998 <InitUSART+0x8>
     998:	cd b7       	in	r28, 0x3d	; 61
     99a:	de b7       	in	r29, 0x3e	; 62
     99c:	14 2f       	mov	r17, r20
	uint16_t volatile SetUBRR;
	SetUBRR = SetBR(baud, port);
     99e:	ac df       	rcall	.-168    	; 0x8f8 <SetBR>
     9a0:	9a 83       	std	Y+2, r25	; 0x02
     9a2:	89 83       	std	Y+1, r24	; 0x01
	if (SetUBRR){
     9a4:	89 81       	ldd	r24, Y+1	; 0x01
     9a6:	9a 81       	ldd	r25, Y+2	; 0x02
     9a8:	00 97       	sbiw	r24, 0x00	; 0
     9aa:	61 f0       	breq	.+24     	; 0x9c4 <InitUSART+0x34>
		if (port){
     9ac:	11 23       	and	r17, r17
     9ae:	31 f0       	breq	.+12     	; 0x9bc <InitUSART+0x2c>
			UCSR1B = (1 << RXEN1)|(1 << TXEN1);
     9b0:	88 e1       	ldi	r24, 0x18	; 24
     9b2:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
			return SetUBRR;
     9b6:	89 81       	ldd	r24, Y+1	; 0x01
     9b8:	9a 81       	ldd	r25, Y+2	; 0x02
     9ba:	04 c0       	rjmp	.+8      	; 0x9c4 <InitUSART+0x34>
		} else {
			UCSR0B = (1 << RXEN0)|(1 << TXEN0)|(1 << RXCIE0);
     9bc:	88 e9       	ldi	r24, 0x98	; 152
     9be:	8a b9       	out	0x0a, r24	; 10
			return SetUBRR;
     9c0:	89 81       	ldd	r24, Y+1	; 0x01
     9c2:	9a 81       	ldd	r25, Y+2	; 0x02
		}
	} else {
		return 0;
	}
}
     9c4:	0f 90       	pop	r0
     9c6:	0f 90       	pop	r0
     9c8:	df 91       	pop	r29
     9ca:	cf 91       	pop	r28
     9cc:	1f 91       	pop	r17
     9ce:	08 95       	ret

000009d0 <USARTTX>:

void USARTTX(uint8_t TXval, uint8_t port){
	if (port){	
     9d0:	66 23       	and	r22, r22
     9d2:	41 f0       	breq	.+16     	; 0x9e4 <USARTTX+0x14>
		while(!(UCSR1A & (1 << UDRE1))){}
     9d4:	eb e9       	ldi	r30, 0x9B	; 155
     9d6:	f0 e0       	ldi	r31, 0x00	; 0
     9d8:	90 81       	ld	r25, Z
     9da:	95 ff       	sbrs	r25, 5
     9dc:	fd cf       	rjmp	.-6      	; 0x9d8 <USARTTX+0x8>
		UDR1 = TXval;
     9de:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     9e2:	08 95       	ret
	} else {
		while(!(UCSR0A & (1 << UDRE0))){}
     9e4:	5d 9b       	sbis	0x0b, 5	; 11
     9e6:	fe cf       	rjmp	.-4      	; 0x9e4 <USARTTX+0x14>
		UDR0 = TXval;
     9e8:	8c b9       	out	0x0c, r24	; 12
     9ea:	08 95       	ret

000009ec <__subsf3>:
     9ec:	50 58       	subi	r21, 0x80	; 128

000009ee <__addsf3>:
     9ee:	bb 27       	eor	r27, r27
     9f0:	aa 27       	eor	r26, r26
     9f2:	0e d0       	rcall	.+28     	; 0xa10 <__addsf3x>
     9f4:	4d c1       	rjmp	.+666    	; 0xc90 <__fp_round>
     9f6:	3e d1       	rcall	.+636    	; 0xc74 <__fp_pscA>
     9f8:	30 f0       	brcs	.+12     	; 0xa06 <__addsf3+0x18>
     9fa:	43 d1       	rcall	.+646    	; 0xc82 <__fp_pscB>
     9fc:	20 f0       	brcs	.+8      	; 0xa06 <__addsf3+0x18>
     9fe:	31 f4       	brne	.+12     	; 0xa0c <__addsf3+0x1e>
     a00:	9f 3f       	cpi	r25, 0xFF	; 255
     a02:	11 f4       	brne	.+4      	; 0xa08 <__addsf3+0x1a>
     a04:	1e f4       	brtc	.+6      	; 0xa0c <__addsf3+0x1e>
     a06:	33 c1       	rjmp	.+614    	; 0xc6e <__fp_nan>
     a08:	0e f4       	brtc	.+2      	; 0xa0c <__addsf3+0x1e>
     a0a:	e0 95       	com	r30
     a0c:	e7 fb       	bst	r30, 7
     a0e:	29 c1       	rjmp	.+594    	; 0xc62 <__fp_inf>

00000a10 <__addsf3x>:
     a10:	e9 2f       	mov	r30, r25
     a12:	4f d1       	rcall	.+670    	; 0xcb2 <__fp_split3>
     a14:	80 f3       	brcs	.-32     	; 0x9f6 <__addsf3+0x8>
     a16:	ba 17       	cp	r27, r26
     a18:	62 07       	cpc	r22, r18
     a1a:	73 07       	cpc	r23, r19
     a1c:	84 07       	cpc	r24, r20
     a1e:	95 07       	cpc	r25, r21
     a20:	18 f0       	brcs	.+6      	; 0xa28 <__addsf3x+0x18>
     a22:	71 f4       	brne	.+28     	; 0xa40 <__addsf3x+0x30>
     a24:	9e f5       	brtc	.+102    	; 0xa8c <__addsf3x+0x7c>
     a26:	67 c1       	rjmp	.+718    	; 0xcf6 <__fp_zero>
     a28:	0e f4       	brtc	.+2      	; 0xa2c <__addsf3x+0x1c>
     a2a:	e0 95       	com	r30
     a2c:	0b 2e       	mov	r0, r27
     a2e:	ba 2f       	mov	r27, r26
     a30:	a0 2d       	mov	r26, r0
     a32:	0b 01       	movw	r0, r22
     a34:	b9 01       	movw	r22, r18
     a36:	90 01       	movw	r18, r0
     a38:	0c 01       	movw	r0, r24
     a3a:	ca 01       	movw	r24, r20
     a3c:	a0 01       	movw	r20, r0
     a3e:	11 24       	eor	r1, r1
     a40:	ff 27       	eor	r31, r31
     a42:	59 1b       	sub	r21, r25
     a44:	99 f0       	breq	.+38     	; 0xa6c <__addsf3x+0x5c>
     a46:	59 3f       	cpi	r21, 0xF9	; 249
     a48:	50 f4       	brcc	.+20     	; 0xa5e <__addsf3x+0x4e>
     a4a:	50 3e       	cpi	r21, 0xE0	; 224
     a4c:	68 f1       	brcs	.+90     	; 0xaa8 <__addsf3x+0x98>
     a4e:	1a 16       	cp	r1, r26
     a50:	f0 40       	sbci	r31, 0x00	; 0
     a52:	a2 2f       	mov	r26, r18
     a54:	23 2f       	mov	r18, r19
     a56:	34 2f       	mov	r19, r20
     a58:	44 27       	eor	r20, r20
     a5a:	58 5f       	subi	r21, 0xF8	; 248
     a5c:	f3 cf       	rjmp	.-26     	; 0xa44 <__addsf3x+0x34>
     a5e:	46 95       	lsr	r20
     a60:	37 95       	ror	r19
     a62:	27 95       	ror	r18
     a64:	a7 95       	ror	r26
     a66:	f0 40       	sbci	r31, 0x00	; 0
     a68:	53 95       	inc	r21
     a6a:	c9 f7       	brne	.-14     	; 0xa5e <__addsf3x+0x4e>
     a6c:	7e f4       	brtc	.+30     	; 0xa8c <__addsf3x+0x7c>
     a6e:	1f 16       	cp	r1, r31
     a70:	ba 0b       	sbc	r27, r26
     a72:	62 0b       	sbc	r22, r18
     a74:	73 0b       	sbc	r23, r19
     a76:	84 0b       	sbc	r24, r20
     a78:	ba f0       	brmi	.+46     	; 0xaa8 <__addsf3x+0x98>
     a7a:	91 50       	subi	r25, 0x01	; 1
     a7c:	a1 f0       	breq	.+40     	; 0xaa6 <__addsf3x+0x96>
     a7e:	ff 0f       	add	r31, r31
     a80:	bb 1f       	adc	r27, r27
     a82:	66 1f       	adc	r22, r22
     a84:	77 1f       	adc	r23, r23
     a86:	88 1f       	adc	r24, r24
     a88:	c2 f7       	brpl	.-16     	; 0xa7a <__addsf3x+0x6a>
     a8a:	0e c0       	rjmp	.+28     	; 0xaa8 <__addsf3x+0x98>
     a8c:	ba 0f       	add	r27, r26
     a8e:	62 1f       	adc	r22, r18
     a90:	73 1f       	adc	r23, r19
     a92:	84 1f       	adc	r24, r20
     a94:	48 f4       	brcc	.+18     	; 0xaa8 <__addsf3x+0x98>
     a96:	87 95       	ror	r24
     a98:	77 95       	ror	r23
     a9a:	67 95       	ror	r22
     a9c:	b7 95       	ror	r27
     a9e:	f7 95       	ror	r31
     aa0:	9e 3f       	cpi	r25, 0xFE	; 254
     aa2:	08 f0       	brcs	.+2      	; 0xaa6 <__addsf3x+0x96>
     aa4:	b3 cf       	rjmp	.-154    	; 0xa0c <__addsf3+0x1e>
     aa6:	93 95       	inc	r25
     aa8:	88 0f       	add	r24, r24
     aaa:	08 f0       	brcs	.+2      	; 0xaae <__addsf3x+0x9e>
     aac:	99 27       	eor	r25, r25
     aae:	ee 0f       	add	r30, r30
     ab0:	97 95       	ror	r25
     ab2:	87 95       	ror	r24
     ab4:	08 95       	ret

00000ab6 <__divsf3>:
     ab6:	0c d0       	rcall	.+24     	; 0xad0 <__divsf3x>
     ab8:	eb c0       	rjmp	.+470    	; 0xc90 <__fp_round>
     aba:	e3 d0       	rcall	.+454    	; 0xc82 <__fp_pscB>
     abc:	40 f0       	brcs	.+16     	; 0xace <__divsf3+0x18>
     abe:	da d0       	rcall	.+436    	; 0xc74 <__fp_pscA>
     ac0:	30 f0       	brcs	.+12     	; 0xace <__divsf3+0x18>
     ac2:	21 f4       	brne	.+8      	; 0xacc <__divsf3+0x16>
     ac4:	5f 3f       	cpi	r21, 0xFF	; 255
     ac6:	19 f0       	breq	.+6      	; 0xace <__divsf3+0x18>
     ac8:	cc c0       	rjmp	.+408    	; 0xc62 <__fp_inf>
     aca:	51 11       	cpse	r21, r1
     acc:	15 c1       	rjmp	.+554    	; 0xcf8 <__fp_szero>
     ace:	cf c0       	rjmp	.+414    	; 0xc6e <__fp_nan>

00000ad0 <__divsf3x>:
     ad0:	f0 d0       	rcall	.+480    	; 0xcb2 <__fp_split3>
     ad2:	98 f3       	brcs	.-26     	; 0xaba <__divsf3+0x4>

00000ad4 <__divsf3_pse>:
     ad4:	99 23       	and	r25, r25
     ad6:	c9 f3       	breq	.-14     	; 0xaca <__divsf3+0x14>
     ad8:	55 23       	and	r21, r21
     ada:	b1 f3       	breq	.-20     	; 0xac8 <__divsf3+0x12>
     adc:	95 1b       	sub	r25, r21
     ade:	55 0b       	sbc	r21, r21
     ae0:	bb 27       	eor	r27, r27
     ae2:	aa 27       	eor	r26, r26
     ae4:	62 17       	cp	r22, r18
     ae6:	73 07       	cpc	r23, r19
     ae8:	84 07       	cpc	r24, r20
     aea:	38 f0       	brcs	.+14     	; 0xafa <__divsf3_pse+0x26>
     aec:	9f 5f       	subi	r25, 0xFF	; 255
     aee:	5f 4f       	sbci	r21, 0xFF	; 255
     af0:	22 0f       	add	r18, r18
     af2:	33 1f       	adc	r19, r19
     af4:	44 1f       	adc	r20, r20
     af6:	aa 1f       	adc	r26, r26
     af8:	a9 f3       	breq	.-22     	; 0xae4 <__divsf3_pse+0x10>
     afa:	33 d0       	rcall	.+102    	; 0xb62 <__divsf3_pse+0x8e>
     afc:	0e 2e       	mov	r0, r30
     afe:	3a f0       	brmi	.+14     	; 0xb0e <__divsf3_pse+0x3a>
     b00:	e0 e8       	ldi	r30, 0x80	; 128
     b02:	30 d0       	rcall	.+96     	; 0xb64 <__divsf3_pse+0x90>
     b04:	91 50       	subi	r25, 0x01	; 1
     b06:	50 40       	sbci	r21, 0x00	; 0
     b08:	e6 95       	lsr	r30
     b0a:	00 1c       	adc	r0, r0
     b0c:	ca f7       	brpl	.-14     	; 0xb00 <__divsf3_pse+0x2c>
     b0e:	29 d0       	rcall	.+82     	; 0xb62 <__divsf3_pse+0x8e>
     b10:	fe 2f       	mov	r31, r30
     b12:	27 d0       	rcall	.+78     	; 0xb62 <__divsf3_pse+0x8e>
     b14:	66 0f       	add	r22, r22
     b16:	77 1f       	adc	r23, r23
     b18:	88 1f       	adc	r24, r24
     b1a:	bb 1f       	adc	r27, r27
     b1c:	26 17       	cp	r18, r22
     b1e:	37 07       	cpc	r19, r23
     b20:	48 07       	cpc	r20, r24
     b22:	ab 07       	cpc	r26, r27
     b24:	b0 e8       	ldi	r27, 0x80	; 128
     b26:	09 f0       	breq	.+2      	; 0xb2a <__divsf3_pse+0x56>
     b28:	bb 0b       	sbc	r27, r27
     b2a:	80 2d       	mov	r24, r0
     b2c:	bf 01       	movw	r22, r30
     b2e:	ff 27       	eor	r31, r31
     b30:	93 58       	subi	r25, 0x83	; 131
     b32:	5f 4f       	sbci	r21, 0xFF	; 255
     b34:	2a f0       	brmi	.+10     	; 0xb40 <__divsf3_pse+0x6c>
     b36:	9e 3f       	cpi	r25, 0xFE	; 254
     b38:	51 05       	cpc	r21, r1
     b3a:	68 f0       	brcs	.+26     	; 0xb56 <__divsf3_pse+0x82>
     b3c:	92 c0       	rjmp	.+292    	; 0xc62 <__fp_inf>
     b3e:	dc c0       	rjmp	.+440    	; 0xcf8 <__fp_szero>
     b40:	5f 3f       	cpi	r21, 0xFF	; 255
     b42:	ec f3       	brlt	.-6      	; 0xb3e <__divsf3_pse+0x6a>
     b44:	98 3e       	cpi	r25, 0xE8	; 232
     b46:	dc f3       	brlt	.-10     	; 0xb3e <__divsf3_pse+0x6a>
     b48:	86 95       	lsr	r24
     b4a:	77 95       	ror	r23
     b4c:	67 95       	ror	r22
     b4e:	b7 95       	ror	r27
     b50:	f7 95       	ror	r31
     b52:	9f 5f       	subi	r25, 0xFF	; 255
     b54:	c9 f7       	brne	.-14     	; 0xb48 <__divsf3_pse+0x74>
     b56:	88 0f       	add	r24, r24
     b58:	91 1d       	adc	r25, r1
     b5a:	96 95       	lsr	r25
     b5c:	87 95       	ror	r24
     b5e:	97 f9       	bld	r25, 7
     b60:	08 95       	ret
     b62:	e1 e0       	ldi	r30, 0x01	; 1
     b64:	66 0f       	add	r22, r22
     b66:	77 1f       	adc	r23, r23
     b68:	88 1f       	adc	r24, r24
     b6a:	bb 1f       	adc	r27, r27
     b6c:	62 17       	cp	r22, r18
     b6e:	73 07       	cpc	r23, r19
     b70:	84 07       	cpc	r24, r20
     b72:	ba 07       	cpc	r27, r26
     b74:	20 f0       	brcs	.+8      	; 0xb7e <__divsf3_pse+0xaa>
     b76:	62 1b       	sub	r22, r18
     b78:	73 0b       	sbc	r23, r19
     b7a:	84 0b       	sbc	r24, r20
     b7c:	ba 0b       	sbc	r27, r26
     b7e:	ee 1f       	adc	r30, r30
     b80:	88 f7       	brcc	.-30     	; 0xb64 <__divsf3_pse+0x90>
     b82:	e0 95       	com	r30
     b84:	08 95       	ret

00000b86 <__fixsfsi>:
     b86:	04 d0       	rcall	.+8      	; 0xb90 <__fixunssfsi>
     b88:	68 94       	set
     b8a:	b1 11       	cpse	r27, r1
     b8c:	b5 c0       	rjmp	.+362    	; 0xcf8 <__fp_szero>
     b8e:	08 95       	ret

00000b90 <__fixunssfsi>:
     b90:	98 d0       	rcall	.+304    	; 0xcc2 <__fp_splitA>
     b92:	88 f0       	brcs	.+34     	; 0xbb6 <__fixunssfsi+0x26>
     b94:	9f 57       	subi	r25, 0x7F	; 127
     b96:	90 f0       	brcs	.+36     	; 0xbbc <__fixunssfsi+0x2c>
     b98:	b9 2f       	mov	r27, r25
     b9a:	99 27       	eor	r25, r25
     b9c:	b7 51       	subi	r27, 0x17	; 23
     b9e:	a0 f0       	brcs	.+40     	; 0xbc8 <__fixunssfsi+0x38>
     ba0:	d1 f0       	breq	.+52     	; 0xbd6 <__fixunssfsi+0x46>
     ba2:	66 0f       	add	r22, r22
     ba4:	77 1f       	adc	r23, r23
     ba6:	88 1f       	adc	r24, r24
     ba8:	99 1f       	adc	r25, r25
     baa:	1a f0       	brmi	.+6      	; 0xbb2 <__fixunssfsi+0x22>
     bac:	ba 95       	dec	r27
     bae:	c9 f7       	brne	.-14     	; 0xba2 <__fixunssfsi+0x12>
     bb0:	12 c0       	rjmp	.+36     	; 0xbd6 <__fixunssfsi+0x46>
     bb2:	b1 30       	cpi	r27, 0x01	; 1
     bb4:	81 f0       	breq	.+32     	; 0xbd6 <__fixunssfsi+0x46>
     bb6:	9f d0       	rcall	.+318    	; 0xcf6 <__fp_zero>
     bb8:	b1 e0       	ldi	r27, 0x01	; 1
     bba:	08 95       	ret
     bbc:	9c c0       	rjmp	.+312    	; 0xcf6 <__fp_zero>
     bbe:	67 2f       	mov	r22, r23
     bc0:	78 2f       	mov	r23, r24
     bc2:	88 27       	eor	r24, r24
     bc4:	b8 5f       	subi	r27, 0xF8	; 248
     bc6:	39 f0       	breq	.+14     	; 0xbd6 <__fixunssfsi+0x46>
     bc8:	b9 3f       	cpi	r27, 0xF9	; 249
     bca:	cc f3       	brlt	.-14     	; 0xbbe <__fixunssfsi+0x2e>
     bcc:	86 95       	lsr	r24
     bce:	77 95       	ror	r23
     bd0:	67 95       	ror	r22
     bd2:	b3 95       	inc	r27
     bd4:	d9 f7       	brne	.-10     	; 0xbcc <__fixunssfsi+0x3c>
     bd6:	3e f4       	brtc	.+14     	; 0xbe6 <__fixunssfsi+0x56>
     bd8:	90 95       	com	r25
     bda:	80 95       	com	r24
     bdc:	70 95       	com	r23
     bde:	61 95       	neg	r22
     be0:	7f 4f       	sbci	r23, 0xFF	; 255
     be2:	8f 4f       	sbci	r24, 0xFF	; 255
     be4:	9f 4f       	sbci	r25, 0xFF	; 255
     be6:	08 95       	ret

00000be8 <__floatunsisf>:
     be8:	e8 94       	clt
     bea:	09 c0       	rjmp	.+18     	; 0xbfe <__floatsisf+0x12>

00000bec <__floatsisf>:
     bec:	97 fb       	bst	r25, 7
     bee:	3e f4       	brtc	.+14     	; 0xbfe <__floatsisf+0x12>
     bf0:	90 95       	com	r25
     bf2:	80 95       	com	r24
     bf4:	70 95       	com	r23
     bf6:	61 95       	neg	r22
     bf8:	7f 4f       	sbci	r23, 0xFF	; 255
     bfa:	8f 4f       	sbci	r24, 0xFF	; 255
     bfc:	9f 4f       	sbci	r25, 0xFF	; 255
     bfe:	99 23       	and	r25, r25
     c00:	a9 f0       	breq	.+42     	; 0xc2c <__floatsisf+0x40>
     c02:	f9 2f       	mov	r31, r25
     c04:	96 e9       	ldi	r25, 0x96	; 150
     c06:	bb 27       	eor	r27, r27
     c08:	93 95       	inc	r25
     c0a:	f6 95       	lsr	r31
     c0c:	87 95       	ror	r24
     c0e:	77 95       	ror	r23
     c10:	67 95       	ror	r22
     c12:	b7 95       	ror	r27
     c14:	f1 11       	cpse	r31, r1
     c16:	f8 cf       	rjmp	.-16     	; 0xc08 <__floatsisf+0x1c>
     c18:	fa f4       	brpl	.+62     	; 0xc58 <__floatsisf+0x6c>
     c1a:	bb 0f       	add	r27, r27
     c1c:	11 f4       	brne	.+4      	; 0xc22 <__floatsisf+0x36>
     c1e:	60 ff       	sbrs	r22, 0
     c20:	1b c0       	rjmp	.+54     	; 0xc58 <__floatsisf+0x6c>
     c22:	6f 5f       	subi	r22, 0xFF	; 255
     c24:	7f 4f       	sbci	r23, 0xFF	; 255
     c26:	8f 4f       	sbci	r24, 0xFF	; 255
     c28:	9f 4f       	sbci	r25, 0xFF	; 255
     c2a:	16 c0       	rjmp	.+44     	; 0xc58 <__floatsisf+0x6c>
     c2c:	88 23       	and	r24, r24
     c2e:	11 f0       	breq	.+4      	; 0xc34 <__floatsisf+0x48>
     c30:	96 e9       	ldi	r25, 0x96	; 150
     c32:	11 c0       	rjmp	.+34     	; 0xc56 <__floatsisf+0x6a>
     c34:	77 23       	and	r23, r23
     c36:	21 f0       	breq	.+8      	; 0xc40 <__floatsisf+0x54>
     c38:	9e e8       	ldi	r25, 0x8E	; 142
     c3a:	87 2f       	mov	r24, r23
     c3c:	76 2f       	mov	r23, r22
     c3e:	05 c0       	rjmp	.+10     	; 0xc4a <__floatsisf+0x5e>
     c40:	66 23       	and	r22, r22
     c42:	71 f0       	breq	.+28     	; 0xc60 <__floatsisf+0x74>
     c44:	96 e8       	ldi	r25, 0x86	; 134
     c46:	86 2f       	mov	r24, r22
     c48:	70 e0       	ldi	r23, 0x00	; 0
     c4a:	60 e0       	ldi	r22, 0x00	; 0
     c4c:	2a f0       	brmi	.+10     	; 0xc58 <__floatsisf+0x6c>
     c4e:	9a 95       	dec	r25
     c50:	66 0f       	add	r22, r22
     c52:	77 1f       	adc	r23, r23
     c54:	88 1f       	adc	r24, r24
     c56:	da f7       	brpl	.-10     	; 0xc4e <__floatsisf+0x62>
     c58:	88 0f       	add	r24, r24
     c5a:	96 95       	lsr	r25
     c5c:	87 95       	ror	r24
     c5e:	97 f9       	bld	r25, 7
     c60:	08 95       	ret

00000c62 <__fp_inf>:
     c62:	97 f9       	bld	r25, 7
     c64:	9f 67       	ori	r25, 0x7F	; 127
     c66:	80 e8       	ldi	r24, 0x80	; 128
     c68:	70 e0       	ldi	r23, 0x00	; 0
     c6a:	60 e0       	ldi	r22, 0x00	; 0
     c6c:	08 95       	ret

00000c6e <__fp_nan>:
     c6e:	9f ef       	ldi	r25, 0xFF	; 255
     c70:	80 ec       	ldi	r24, 0xC0	; 192
     c72:	08 95       	ret

00000c74 <__fp_pscA>:
     c74:	00 24       	eor	r0, r0
     c76:	0a 94       	dec	r0
     c78:	16 16       	cp	r1, r22
     c7a:	17 06       	cpc	r1, r23
     c7c:	18 06       	cpc	r1, r24
     c7e:	09 06       	cpc	r0, r25
     c80:	08 95       	ret

00000c82 <__fp_pscB>:
     c82:	00 24       	eor	r0, r0
     c84:	0a 94       	dec	r0
     c86:	12 16       	cp	r1, r18
     c88:	13 06       	cpc	r1, r19
     c8a:	14 06       	cpc	r1, r20
     c8c:	05 06       	cpc	r0, r21
     c8e:	08 95       	ret

00000c90 <__fp_round>:
     c90:	09 2e       	mov	r0, r25
     c92:	03 94       	inc	r0
     c94:	00 0c       	add	r0, r0
     c96:	11 f4       	brne	.+4      	; 0xc9c <__fp_round+0xc>
     c98:	88 23       	and	r24, r24
     c9a:	52 f0       	brmi	.+20     	; 0xcb0 <__fp_round+0x20>
     c9c:	bb 0f       	add	r27, r27
     c9e:	40 f4       	brcc	.+16     	; 0xcb0 <__fp_round+0x20>
     ca0:	bf 2b       	or	r27, r31
     ca2:	11 f4       	brne	.+4      	; 0xca8 <__fp_round+0x18>
     ca4:	60 ff       	sbrs	r22, 0
     ca6:	04 c0       	rjmp	.+8      	; 0xcb0 <__fp_round+0x20>
     ca8:	6f 5f       	subi	r22, 0xFF	; 255
     caa:	7f 4f       	sbci	r23, 0xFF	; 255
     cac:	8f 4f       	sbci	r24, 0xFF	; 255
     cae:	9f 4f       	sbci	r25, 0xFF	; 255
     cb0:	08 95       	ret

00000cb2 <__fp_split3>:
     cb2:	57 fd       	sbrc	r21, 7
     cb4:	90 58       	subi	r25, 0x80	; 128
     cb6:	44 0f       	add	r20, r20
     cb8:	55 1f       	adc	r21, r21
     cba:	59 f0       	breq	.+22     	; 0xcd2 <__fp_splitA+0x10>
     cbc:	5f 3f       	cpi	r21, 0xFF	; 255
     cbe:	71 f0       	breq	.+28     	; 0xcdc <__fp_splitA+0x1a>
     cc0:	47 95       	ror	r20

00000cc2 <__fp_splitA>:
     cc2:	88 0f       	add	r24, r24
     cc4:	97 fb       	bst	r25, 7
     cc6:	99 1f       	adc	r25, r25
     cc8:	61 f0       	breq	.+24     	; 0xce2 <__fp_splitA+0x20>
     cca:	9f 3f       	cpi	r25, 0xFF	; 255
     ccc:	79 f0       	breq	.+30     	; 0xcec <__fp_splitA+0x2a>
     cce:	87 95       	ror	r24
     cd0:	08 95       	ret
     cd2:	12 16       	cp	r1, r18
     cd4:	13 06       	cpc	r1, r19
     cd6:	14 06       	cpc	r1, r20
     cd8:	55 1f       	adc	r21, r21
     cda:	f2 cf       	rjmp	.-28     	; 0xcc0 <__fp_split3+0xe>
     cdc:	46 95       	lsr	r20
     cde:	f1 df       	rcall	.-30     	; 0xcc2 <__fp_splitA>
     ce0:	08 c0       	rjmp	.+16     	; 0xcf2 <__fp_splitA+0x30>
     ce2:	16 16       	cp	r1, r22
     ce4:	17 06       	cpc	r1, r23
     ce6:	18 06       	cpc	r1, r24
     ce8:	99 1f       	adc	r25, r25
     cea:	f1 cf       	rjmp	.-30     	; 0xcce <__fp_splitA+0xc>
     cec:	86 95       	lsr	r24
     cee:	71 05       	cpc	r23, r1
     cf0:	61 05       	cpc	r22, r1
     cf2:	08 94       	sec
     cf4:	08 95       	ret

00000cf6 <__fp_zero>:
     cf6:	e8 94       	clt

00000cf8 <__fp_szero>:
     cf8:	bb 27       	eor	r27, r27
     cfa:	66 27       	eor	r22, r22
     cfc:	77 27       	eor	r23, r23
     cfe:	cb 01       	movw	r24, r22
     d00:	97 f9       	bld	r25, 7
     d02:	08 95       	ret

00000d04 <__mulsf3>:
     d04:	0b d0       	rcall	.+22     	; 0xd1c <__mulsf3x>
     d06:	c4 cf       	rjmp	.-120    	; 0xc90 <__fp_round>
     d08:	b5 df       	rcall	.-150    	; 0xc74 <__fp_pscA>
     d0a:	28 f0       	brcs	.+10     	; 0xd16 <__mulsf3+0x12>
     d0c:	ba df       	rcall	.-140    	; 0xc82 <__fp_pscB>
     d0e:	18 f0       	brcs	.+6      	; 0xd16 <__mulsf3+0x12>
     d10:	95 23       	and	r25, r21
     d12:	09 f0       	breq	.+2      	; 0xd16 <__mulsf3+0x12>
     d14:	a6 cf       	rjmp	.-180    	; 0xc62 <__fp_inf>
     d16:	ab cf       	rjmp	.-170    	; 0xc6e <__fp_nan>
     d18:	11 24       	eor	r1, r1
     d1a:	ee cf       	rjmp	.-36     	; 0xcf8 <__fp_szero>

00000d1c <__mulsf3x>:
     d1c:	ca df       	rcall	.-108    	; 0xcb2 <__fp_split3>
     d1e:	a0 f3       	brcs	.-24     	; 0xd08 <__mulsf3+0x4>

00000d20 <__mulsf3_pse>:
     d20:	95 9f       	mul	r25, r21
     d22:	d1 f3       	breq	.-12     	; 0xd18 <__mulsf3+0x14>
     d24:	95 0f       	add	r25, r21
     d26:	50 e0       	ldi	r21, 0x00	; 0
     d28:	55 1f       	adc	r21, r21
     d2a:	62 9f       	mul	r22, r18
     d2c:	f0 01       	movw	r30, r0
     d2e:	72 9f       	mul	r23, r18
     d30:	bb 27       	eor	r27, r27
     d32:	f0 0d       	add	r31, r0
     d34:	b1 1d       	adc	r27, r1
     d36:	63 9f       	mul	r22, r19
     d38:	aa 27       	eor	r26, r26
     d3a:	f0 0d       	add	r31, r0
     d3c:	b1 1d       	adc	r27, r1
     d3e:	aa 1f       	adc	r26, r26
     d40:	64 9f       	mul	r22, r20
     d42:	66 27       	eor	r22, r22
     d44:	b0 0d       	add	r27, r0
     d46:	a1 1d       	adc	r26, r1
     d48:	66 1f       	adc	r22, r22
     d4a:	82 9f       	mul	r24, r18
     d4c:	22 27       	eor	r18, r18
     d4e:	b0 0d       	add	r27, r0
     d50:	a1 1d       	adc	r26, r1
     d52:	62 1f       	adc	r22, r18
     d54:	73 9f       	mul	r23, r19
     d56:	b0 0d       	add	r27, r0
     d58:	a1 1d       	adc	r26, r1
     d5a:	62 1f       	adc	r22, r18
     d5c:	83 9f       	mul	r24, r19
     d5e:	a0 0d       	add	r26, r0
     d60:	61 1d       	adc	r22, r1
     d62:	22 1f       	adc	r18, r18
     d64:	74 9f       	mul	r23, r20
     d66:	33 27       	eor	r19, r19
     d68:	a0 0d       	add	r26, r0
     d6a:	61 1d       	adc	r22, r1
     d6c:	23 1f       	adc	r18, r19
     d6e:	84 9f       	mul	r24, r20
     d70:	60 0d       	add	r22, r0
     d72:	21 1d       	adc	r18, r1
     d74:	82 2f       	mov	r24, r18
     d76:	76 2f       	mov	r23, r22
     d78:	6a 2f       	mov	r22, r26
     d7a:	11 24       	eor	r1, r1
     d7c:	9f 57       	subi	r25, 0x7F	; 127
     d7e:	50 40       	sbci	r21, 0x00	; 0
     d80:	8a f0       	brmi	.+34     	; 0xda4 <__mulsf3_pse+0x84>
     d82:	e1 f0       	breq	.+56     	; 0xdbc <__mulsf3_pse+0x9c>
     d84:	88 23       	and	r24, r24
     d86:	4a f0       	brmi	.+18     	; 0xd9a <__mulsf3_pse+0x7a>
     d88:	ee 0f       	add	r30, r30
     d8a:	ff 1f       	adc	r31, r31
     d8c:	bb 1f       	adc	r27, r27
     d8e:	66 1f       	adc	r22, r22
     d90:	77 1f       	adc	r23, r23
     d92:	88 1f       	adc	r24, r24
     d94:	91 50       	subi	r25, 0x01	; 1
     d96:	50 40       	sbci	r21, 0x00	; 0
     d98:	a9 f7       	brne	.-22     	; 0xd84 <__mulsf3_pse+0x64>
     d9a:	9e 3f       	cpi	r25, 0xFE	; 254
     d9c:	51 05       	cpc	r21, r1
     d9e:	70 f0       	brcs	.+28     	; 0xdbc <__mulsf3_pse+0x9c>
     da0:	60 cf       	rjmp	.-320    	; 0xc62 <__fp_inf>
     da2:	aa cf       	rjmp	.-172    	; 0xcf8 <__fp_szero>
     da4:	5f 3f       	cpi	r21, 0xFF	; 255
     da6:	ec f3       	brlt	.-6      	; 0xda2 <__mulsf3_pse+0x82>
     da8:	98 3e       	cpi	r25, 0xE8	; 232
     daa:	dc f3       	brlt	.-10     	; 0xda2 <__mulsf3_pse+0x82>
     dac:	86 95       	lsr	r24
     dae:	77 95       	ror	r23
     db0:	67 95       	ror	r22
     db2:	b7 95       	ror	r27
     db4:	f7 95       	ror	r31
     db6:	e7 95       	ror	r30
     db8:	9f 5f       	subi	r25, 0xFF	; 255
     dba:	c1 f7       	brne	.-16     	; 0xdac <__mulsf3_pse+0x8c>
     dbc:	fe 2b       	or	r31, r30
     dbe:	88 0f       	add	r24, r24
     dc0:	91 1d       	adc	r25, r1
     dc2:	96 95       	lsr	r25
     dc4:	87 95       	ror	r24
     dc6:	97 f9       	bld	r25, 7
     dc8:	08 95       	ret

00000dca <__fp_cmp>:
     dca:	99 0f       	add	r25, r25
     dcc:	00 08       	sbc	r0, r0
     dce:	55 0f       	add	r21, r21
     dd0:	aa 0b       	sbc	r26, r26
     dd2:	e0 e8       	ldi	r30, 0x80	; 128
     dd4:	fe ef       	ldi	r31, 0xFE	; 254
     dd6:	16 16       	cp	r1, r22
     dd8:	17 06       	cpc	r1, r23
     dda:	e8 07       	cpc	r30, r24
     ddc:	f9 07       	cpc	r31, r25
     dde:	c0 f0       	brcs	.+48     	; 0xe10 <__fp_cmp+0x46>
     de0:	12 16       	cp	r1, r18
     de2:	13 06       	cpc	r1, r19
     de4:	e4 07       	cpc	r30, r20
     de6:	f5 07       	cpc	r31, r21
     de8:	98 f0       	brcs	.+38     	; 0xe10 <__fp_cmp+0x46>
     dea:	62 1b       	sub	r22, r18
     dec:	73 0b       	sbc	r23, r19
     dee:	84 0b       	sbc	r24, r20
     df0:	95 0b       	sbc	r25, r21
     df2:	39 f4       	brne	.+14     	; 0xe02 <__fp_cmp+0x38>
     df4:	0a 26       	eor	r0, r26
     df6:	61 f0       	breq	.+24     	; 0xe10 <__fp_cmp+0x46>
     df8:	23 2b       	or	r18, r19
     dfa:	24 2b       	or	r18, r20
     dfc:	25 2b       	or	r18, r21
     dfe:	21 f4       	brne	.+8      	; 0xe08 <__fp_cmp+0x3e>
     e00:	08 95       	ret
     e02:	0a 26       	eor	r0, r26
     e04:	09 f4       	brne	.+2      	; 0xe08 <__fp_cmp+0x3e>
     e06:	a1 40       	sbci	r26, 0x01	; 1
     e08:	a6 95       	lsr	r26
     e0a:	8f ef       	ldi	r24, 0xFF	; 255
     e0c:	81 1d       	adc	r24, r1
     e0e:	81 1d       	adc	r24, r1
     e10:	08 95       	ret

00000e12 <__udivmodsi4>:
     e12:	a1 e2       	ldi	r26, 0x21	; 33
     e14:	1a 2e       	mov	r1, r26
     e16:	aa 1b       	sub	r26, r26
     e18:	bb 1b       	sub	r27, r27
     e1a:	fd 01       	movw	r30, r26
     e1c:	0d c0       	rjmp	.+26     	; 0xe38 <__udivmodsi4_ep>

00000e1e <__udivmodsi4_loop>:
     e1e:	aa 1f       	adc	r26, r26
     e20:	bb 1f       	adc	r27, r27
     e22:	ee 1f       	adc	r30, r30
     e24:	ff 1f       	adc	r31, r31
     e26:	a2 17       	cp	r26, r18
     e28:	b3 07       	cpc	r27, r19
     e2a:	e4 07       	cpc	r30, r20
     e2c:	f5 07       	cpc	r31, r21
     e2e:	20 f0       	brcs	.+8      	; 0xe38 <__udivmodsi4_ep>
     e30:	a2 1b       	sub	r26, r18
     e32:	b3 0b       	sbc	r27, r19
     e34:	e4 0b       	sbc	r30, r20
     e36:	f5 0b       	sbc	r31, r21

00000e38 <__udivmodsi4_ep>:
     e38:	66 1f       	adc	r22, r22
     e3a:	77 1f       	adc	r23, r23
     e3c:	88 1f       	adc	r24, r24
     e3e:	99 1f       	adc	r25, r25
     e40:	1a 94       	dec	r1
     e42:	69 f7       	brne	.-38     	; 0xe1e <__udivmodsi4_loop>
     e44:	60 95       	com	r22
     e46:	70 95       	com	r23
     e48:	80 95       	com	r24
     e4a:	90 95       	com	r25
     e4c:	9b 01       	movw	r18, r22
     e4e:	ac 01       	movw	r20, r24
     e50:	bd 01       	movw	r22, r26
     e52:	cf 01       	movw	r24, r30
     e54:	08 95       	ret

00000e56 <malloc>:
     e56:	cf 93       	push	r28
     e58:	df 93       	push	r29
     e5a:	82 30       	cpi	r24, 0x02	; 2
     e5c:	91 05       	cpc	r25, r1
     e5e:	10 f4       	brcc	.+4      	; 0xe64 <malloc+0xe>
     e60:	82 e0       	ldi	r24, 0x02	; 2
     e62:	90 e0       	ldi	r25, 0x00	; 0
     e64:	e0 91 68 02 	lds	r30, 0x0268	; 0x800268 <__flp>
     e68:	f0 91 69 02 	lds	r31, 0x0269	; 0x800269 <__flp+0x1>
     e6c:	20 e0       	ldi	r18, 0x00	; 0
     e6e:	30 e0       	ldi	r19, 0x00	; 0
     e70:	c0 e0       	ldi	r28, 0x00	; 0
     e72:	d0 e0       	ldi	r29, 0x00	; 0
     e74:	30 97       	sbiw	r30, 0x00	; 0
     e76:	11 f1       	breq	.+68     	; 0xebc <malloc+0x66>
     e78:	40 81       	ld	r20, Z
     e7a:	51 81       	ldd	r21, Z+1	; 0x01
     e7c:	48 17       	cp	r20, r24
     e7e:	59 07       	cpc	r21, r25
     e80:	c0 f0       	brcs	.+48     	; 0xeb2 <malloc+0x5c>
     e82:	48 17       	cp	r20, r24
     e84:	59 07       	cpc	r21, r25
     e86:	61 f4       	brne	.+24     	; 0xea0 <malloc+0x4a>
     e88:	82 81       	ldd	r24, Z+2	; 0x02
     e8a:	93 81       	ldd	r25, Z+3	; 0x03
     e8c:	20 97       	sbiw	r28, 0x00	; 0
     e8e:	19 f0       	breq	.+6      	; 0xe96 <malloc+0x40>
     e90:	9b 83       	std	Y+3, r25	; 0x03
     e92:	8a 83       	std	Y+2, r24	; 0x02
     e94:	2b c0       	rjmp	.+86     	; 0xeec <malloc+0x96>
     e96:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <__flp+0x1>
     e9a:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <__flp>
     e9e:	26 c0       	rjmp	.+76     	; 0xeec <malloc+0x96>
     ea0:	21 15       	cp	r18, r1
     ea2:	31 05       	cpc	r19, r1
     ea4:	19 f0       	breq	.+6      	; 0xeac <malloc+0x56>
     ea6:	42 17       	cp	r20, r18
     ea8:	53 07       	cpc	r21, r19
     eaa:	18 f4       	brcc	.+6      	; 0xeb2 <malloc+0x5c>
     eac:	9a 01       	movw	r18, r20
     eae:	be 01       	movw	r22, r28
     eb0:	df 01       	movw	r26, r30
     eb2:	ef 01       	movw	r28, r30
     eb4:	02 80       	ldd	r0, Z+2	; 0x02
     eb6:	f3 81       	ldd	r31, Z+3	; 0x03
     eb8:	e0 2d       	mov	r30, r0
     eba:	dc cf       	rjmp	.-72     	; 0xe74 <malloc+0x1e>
     ebc:	21 15       	cp	r18, r1
     ebe:	31 05       	cpc	r19, r1
     ec0:	09 f1       	breq	.+66     	; 0xf04 <malloc+0xae>
     ec2:	28 1b       	sub	r18, r24
     ec4:	39 0b       	sbc	r19, r25
     ec6:	24 30       	cpi	r18, 0x04	; 4
     ec8:	31 05       	cpc	r19, r1
     eca:	90 f4       	brcc	.+36     	; 0xef0 <malloc+0x9a>
     ecc:	12 96       	adiw	r26, 0x02	; 2
     ece:	8d 91       	ld	r24, X+
     ed0:	9c 91       	ld	r25, X
     ed2:	13 97       	sbiw	r26, 0x03	; 3
     ed4:	61 15       	cp	r22, r1
     ed6:	71 05       	cpc	r23, r1
     ed8:	21 f0       	breq	.+8      	; 0xee2 <malloc+0x8c>
     eda:	fb 01       	movw	r30, r22
     edc:	93 83       	std	Z+3, r25	; 0x03
     ede:	82 83       	std	Z+2, r24	; 0x02
     ee0:	04 c0       	rjmp	.+8      	; 0xeea <malloc+0x94>
     ee2:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <__flp+0x1>
     ee6:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <__flp>
     eea:	fd 01       	movw	r30, r26
     eec:	32 96       	adiw	r30, 0x02	; 2
     eee:	44 c0       	rjmp	.+136    	; 0xf78 <malloc+0x122>
     ef0:	fd 01       	movw	r30, r26
     ef2:	e2 0f       	add	r30, r18
     ef4:	f3 1f       	adc	r31, r19
     ef6:	81 93       	st	Z+, r24
     ef8:	91 93       	st	Z+, r25
     efa:	22 50       	subi	r18, 0x02	; 2
     efc:	31 09       	sbc	r19, r1
     efe:	2d 93       	st	X+, r18
     f00:	3c 93       	st	X, r19
     f02:	3a c0       	rjmp	.+116    	; 0xf78 <malloc+0x122>
     f04:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <__brkval>
     f08:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <__brkval+0x1>
     f0c:	23 2b       	or	r18, r19
     f0e:	41 f4       	brne	.+16     	; 0xf20 <malloc+0xca>
     f10:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     f14:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     f18:	30 93 67 02 	sts	0x0267, r19	; 0x800267 <__brkval+0x1>
     f1c:	20 93 66 02 	sts	0x0266, r18	; 0x800266 <__brkval>
     f20:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     f24:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     f28:	21 15       	cp	r18, r1
     f2a:	31 05       	cpc	r19, r1
     f2c:	41 f4       	brne	.+16     	; 0xf3e <malloc+0xe8>
     f2e:	2d b7       	in	r18, 0x3d	; 61
     f30:	3e b7       	in	r19, 0x3e	; 62
     f32:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     f36:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     f3a:	24 1b       	sub	r18, r20
     f3c:	35 0b       	sbc	r19, r21
     f3e:	e0 91 66 02 	lds	r30, 0x0266	; 0x800266 <__brkval>
     f42:	f0 91 67 02 	lds	r31, 0x0267	; 0x800267 <__brkval+0x1>
     f46:	e2 17       	cp	r30, r18
     f48:	f3 07       	cpc	r31, r19
     f4a:	a0 f4       	brcc	.+40     	; 0xf74 <malloc+0x11e>
     f4c:	2e 1b       	sub	r18, r30
     f4e:	3f 0b       	sbc	r19, r31
     f50:	28 17       	cp	r18, r24
     f52:	39 07       	cpc	r19, r25
     f54:	78 f0       	brcs	.+30     	; 0xf74 <malloc+0x11e>
     f56:	ac 01       	movw	r20, r24
     f58:	4e 5f       	subi	r20, 0xFE	; 254
     f5a:	5f 4f       	sbci	r21, 0xFF	; 255
     f5c:	24 17       	cp	r18, r20
     f5e:	35 07       	cpc	r19, r21
     f60:	48 f0       	brcs	.+18     	; 0xf74 <malloc+0x11e>
     f62:	4e 0f       	add	r20, r30
     f64:	5f 1f       	adc	r21, r31
     f66:	50 93 67 02 	sts	0x0267, r21	; 0x800267 <__brkval+0x1>
     f6a:	40 93 66 02 	sts	0x0266, r20	; 0x800266 <__brkval>
     f6e:	81 93       	st	Z+, r24
     f70:	91 93       	st	Z+, r25
     f72:	02 c0       	rjmp	.+4      	; 0xf78 <malloc+0x122>
     f74:	e0 e0       	ldi	r30, 0x00	; 0
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	cf 01       	movw	r24, r30
     f7a:	df 91       	pop	r29
     f7c:	cf 91       	pop	r28
     f7e:	08 95       	ret

00000f80 <free>:
     f80:	0f 93       	push	r16
     f82:	1f 93       	push	r17
     f84:	cf 93       	push	r28
     f86:	df 93       	push	r29
     f88:	00 97       	sbiw	r24, 0x00	; 0
     f8a:	09 f4       	brne	.+2      	; 0xf8e <free+0xe>
     f8c:	8c c0       	rjmp	.+280    	; 0x10a6 <free+0x126>
     f8e:	fc 01       	movw	r30, r24
     f90:	32 97       	sbiw	r30, 0x02	; 2
     f92:	13 82       	std	Z+3, r1	; 0x03
     f94:	12 82       	std	Z+2, r1	; 0x02
     f96:	00 91 68 02 	lds	r16, 0x0268	; 0x800268 <__flp>
     f9a:	10 91 69 02 	lds	r17, 0x0269	; 0x800269 <__flp+0x1>
     f9e:	01 15       	cp	r16, r1
     fa0:	11 05       	cpc	r17, r1
     fa2:	81 f4       	brne	.+32     	; 0xfc4 <free+0x44>
     fa4:	20 81       	ld	r18, Z
     fa6:	31 81       	ldd	r19, Z+1	; 0x01
     fa8:	82 0f       	add	r24, r18
     faa:	93 1f       	adc	r25, r19
     fac:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <__brkval>
     fb0:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <__brkval+0x1>
     fb4:	28 17       	cp	r18, r24
     fb6:	39 07       	cpc	r19, r25
     fb8:	79 f5       	brne	.+94     	; 0x1018 <free+0x98>
     fba:	f0 93 67 02 	sts	0x0267, r31	; 0x800267 <__brkval+0x1>
     fbe:	e0 93 66 02 	sts	0x0266, r30	; 0x800266 <__brkval>
     fc2:	71 c0       	rjmp	.+226    	; 0x10a6 <free+0x126>
     fc4:	d8 01       	movw	r26, r16
     fc6:	40 e0       	ldi	r20, 0x00	; 0
     fc8:	50 e0       	ldi	r21, 0x00	; 0
     fca:	ae 17       	cp	r26, r30
     fcc:	bf 07       	cpc	r27, r31
     fce:	50 f4       	brcc	.+20     	; 0xfe4 <free+0x64>
     fd0:	12 96       	adiw	r26, 0x02	; 2
     fd2:	2d 91       	ld	r18, X+
     fd4:	3c 91       	ld	r19, X
     fd6:	13 97       	sbiw	r26, 0x03	; 3
     fd8:	ad 01       	movw	r20, r26
     fda:	21 15       	cp	r18, r1
     fdc:	31 05       	cpc	r19, r1
     fde:	09 f1       	breq	.+66     	; 0x1022 <free+0xa2>
     fe0:	d9 01       	movw	r26, r18
     fe2:	f3 cf       	rjmp	.-26     	; 0xfca <free+0x4a>
     fe4:	9d 01       	movw	r18, r26
     fe6:	da 01       	movw	r26, r20
     fe8:	33 83       	std	Z+3, r19	; 0x03
     fea:	22 83       	std	Z+2, r18	; 0x02
     fec:	60 81       	ld	r22, Z
     fee:	71 81       	ldd	r23, Z+1	; 0x01
     ff0:	86 0f       	add	r24, r22
     ff2:	97 1f       	adc	r25, r23
     ff4:	82 17       	cp	r24, r18
     ff6:	93 07       	cpc	r25, r19
     ff8:	69 f4       	brne	.+26     	; 0x1014 <free+0x94>
     ffa:	ec 01       	movw	r28, r24
     ffc:	28 81       	ld	r18, Y
     ffe:	39 81       	ldd	r19, Y+1	; 0x01
    1000:	26 0f       	add	r18, r22
    1002:	37 1f       	adc	r19, r23
    1004:	2e 5f       	subi	r18, 0xFE	; 254
    1006:	3f 4f       	sbci	r19, 0xFF	; 255
    1008:	31 83       	std	Z+1, r19	; 0x01
    100a:	20 83       	st	Z, r18
    100c:	8a 81       	ldd	r24, Y+2	; 0x02
    100e:	9b 81       	ldd	r25, Y+3	; 0x03
    1010:	93 83       	std	Z+3, r25	; 0x03
    1012:	82 83       	std	Z+2, r24	; 0x02
    1014:	45 2b       	or	r20, r21
    1016:	29 f4       	brne	.+10     	; 0x1022 <free+0xa2>
    1018:	f0 93 69 02 	sts	0x0269, r31	; 0x800269 <__flp+0x1>
    101c:	e0 93 68 02 	sts	0x0268, r30	; 0x800268 <__flp>
    1020:	42 c0       	rjmp	.+132    	; 0x10a6 <free+0x126>
    1022:	13 96       	adiw	r26, 0x03	; 3
    1024:	fc 93       	st	X, r31
    1026:	ee 93       	st	-X, r30
    1028:	12 97       	sbiw	r26, 0x02	; 2
    102a:	ed 01       	movw	r28, r26
    102c:	49 91       	ld	r20, Y+
    102e:	59 91       	ld	r21, Y+
    1030:	9e 01       	movw	r18, r28
    1032:	24 0f       	add	r18, r20
    1034:	35 1f       	adc	r19, r21
    1036:	e2 17       	cp	r30, r18
    1038:	f3 07       	cpc	r31, r19
    103a:	71 f4       	brne	.+28     	; 0x1058 <free+0xd8>
    103c:	80 81       	ld	r24, Z
    103e:	91 81       	ldd	r25, Z+1	; 0x01
    1040:	84 0f       	add	r24, r20
    1042:	95 1f       	adc	r25, r21
    1044:	02 96       	adiw	r24, 0x02	; 2
    1046:	11 96       	adiw	r26, 0x01	; 1
    1048:	9c 93       	st	X, r25
    104a:	8e 93       	st	-X, r24
    104c:	82 81       	ldd	r24, Z+2	; 0x02
    104e:	93 81       	ldd	r25, Z+3	; 0x03
    1050:	13 96       	adiw	r26, 0x03	; 3
    1052:	9c 93       	st	X, r25
    1054:	8e 93       	st	-X, r24
    1056:	12 97       	sbiw	r26, 0x02	; 2
    1058:	e0 e0       	ldi	r30, 0x00	; 0
    105a:	f0 e0       	ldi	r31, 0x00	; 0
    105c:	d8 01       	movw	r26, r16
    105e:	12 96       	adiw	r26, 0x02	; 2
    1060:	8d 91       	ld	r24, X+
    1062:	9c 91       	ld	r25, X
    1064:	13 97       	sbiw	r26, 0x03	; 3
    1066:	00 97       	sbiw	r24, 0x00	; 0
    1068:	19 f0       	breq	.+6      	; 0x1070 <free+0xf0>
    106a:	f8 01       	movw	r30, r16
    106c:	8c 01       	movw	r16, r24
    106e:	f6 cf       	rjmp	.-20     	; 0x105c <free+0xdc>
    1070:	8d 91       	ld	r24, X+
    1072:	9c 91       	ld	r25, X
    1074:	98 01       	movw	r18, r16
    1076:	2e 5f       	subi	r18, 0xFE	; 254
    1078:	3f 4f       	sbci	r19, 0xFF	; 255
    107a:	82 0f       	add	r24, r18
    107c:	93 1f       	adc	r25, r19
    107e:	20 91 66 02 	lds	r18, 0x0266	; 0x800266 <__brkval>
    1082:	30 91 67 02 	lds	r19, 0x0267	; 0x800267 <__brkval+0x1>
    1086:	28 17       	cp	r18, r24
    1088:	39 07       	cpc	r19, r25
    108a:	69 f4       	brne	.+26     	; 0x10a6 <free+0x126>
    108c:	30 97       	sbiw	r30, 0x00	; 0
    108e:	29 f4       	brne	.+10     	; 0x109a <free+0x11a>
    1090:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <__flp+0x1>
    1094:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <__flp>
    1098:	02 c0       	rjmp	.+4      	; 0x109e <free+0x11e>
    109a:	13 82       	std	Z+3, r1	; 0x03
    109c:	12 82       	std	Z+2, r1	; 0x02
    109e:	10 93 67 02 	sts	0x0267, r17	; 0x800267 <__brkval+0x1>
    10a2:	00 93 66 02 	sts	0x0266, r16	; 0x800266 <__brkval>
    10a6:	df 91       	pop	r29
    10a8:	cf 91       	pop	r28
    10aa:	1f 91       	pop	r17
    10ac:	0f 91       	pop	r16
    10ae:	08 95       	ret

000010b0 <do_rand>:
    10b0:	8f 92       	push	r8
    10b2:	9f 92       	push	r9
    10b4:	af 92       	push	r10
    10b6:	bf 92       	push	r11
    10b8:	cf 92       	push	r12
    10ba:	df 92       	push	r13
    10bc:	ef 92       	push	r14
    10be:	ff 92       	push	r15
    10c0:	cf 93       	push	r28
    10c2:	df 93       	push	r29
    10c4:	ec 01       	movw	r28, r24
    10c6:	68 81       	ld	r22, Y
    10c8:	79 81       	ldd	r23, Y+1	; 0x01
    10ca:	8a 81       	ldd	r24, Y+2	; 0x02
    10cc:	9b 81       	ldd	r25, Y+3	; 0x03
    10ce:	61 15       	cp	r22, r1
    10d0:	71 05       	cpc	r23, r1
    10d2:	81 05       	cpc	r24, r1
    10d4:	91 05       	cpc	r25, r1
    10d6:	21 f4       	brne	.+8      	; 0x10e0 <do_rand+0x30>
    10d8:	64 e2       	ldi	r22, 0x24	; 36
    10da:	79 ed       	ldi	r23, 0xD9	; 217
    10dc:	8b e5       	ldi	r24, 0x5B	; 91
    10de:	97 e0       	ldi	r25, 0x07	; 7
    10e0:	2d e1       	ldi	r18, 0x1D	; 29
    10e2:	33 ef       	ldi	r19, 0xF3	; 243
    10e4:	41 e0       	ldi	r20, 0x01	; 1
    10e6:	50 e0       	ldi	r21, 0x00	; 0
    10e8:	d7 d4       	rcall	.+2478   	; 0x1a98 <__divmodsi4>
    10ea:	49 01       	movw	r8, r18
    10ec:	5a 01       	movw	r10, r20
    10ee:	9b 01       	movw	r18, r22
    10f0:	ac 01       	movw	r20, r24
    10f2:	a7 ea       	ldi	r26, 0xA7	; 167
    10f4:	b1 e4       	ldi	r27, 0x41	; 65
    10f6:	ec d4       	rcall	.+2520   	; 0x1ad0 <__muluhisi3>
    10f8:	6b 01       	movw	r12, r22
    10fa:	7c 01       	movw	r14, r24
    10fc:	ac ee       	ldi	r26, 0xEC	; 236
    10fe:	b4 ef       	ldi	r27, 0xF4	; 244
    1100:	a5 01       	movw	r20, r10
    1102:	94 01       	movw	r18, r8
    1104:	f1 d4       	rcall	.+2530   	; 0x1ae8 <__mulohisi3>
    1106:	dc 01       	movw	r26, r24
    1108:	cb 01       	movw	r24, r22
    110a:	8c 0d       	add	r24, r12
    110c:	9d 1d       	adc	r25, r13
    110e:	ae 1d       	adc	r26, r14
    1110:	bf 1d       	adc	r27, r15
    1112:	b7 ff       	sbrs	r27, 7
    1114:	03 c0       	rjmp	.+6      	; 0x111c <__stack+0x1d>
    1116:	01 97       	sbiw	r24, 0x01	; 1
    1118:	a1 09       	sbc	r26, r1
    111a:	b0 48       	sbci	r27, 0x80	; 128
    111c:	88 83       	st	Y, r24
    111e:	99 83       	std	Y+1, r25	; 0x01
    1120:	aa 83       	std	Y+2, r26	; 0x02
    1122:	bb 83       	std	Y+3, r27	; 0x03
    1124:	9f 77       	andi	r25, 0x7F	; 127
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	ff 90       	pop	r15
    112c:	ef 90       	pop	r14
    112e:	df 90       	pop	r13
    1130:	cf 90       	pop	r12
    1132:	bf 90       	pop	r11
    1134:	af 90       	pop	r10
    1136:	9f 90       	pop	r9
    1138:	8f 90       	pop	r8
    113a:	08 95       	ret

0000113c <rand_r>:
    113c:	b9 cf       	rjmp	.-142    	; 0x10b0 <do_rand>

0000113e <rand>:
    113e:	86 e0       	ldi	r24, 0x06	; 6
    1140:	91 e0       	ldi	r25, 0x01	; 1
    1142:	b6 cf       	rjmp	.-148    	; 0x10b0 <do_rand>

00001144 <srand>:
    1144:	a0 e0       	ldi	r26, 0x00	; 0
    1146:	b0 e0       	ldi	r27, 0x00	; 0
    1148:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
    114c:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
    1150:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
    1154:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
    1158:	08 95       	ret

0000115a <atof>:
    115a:	66 27       	eor	r22, r22
    115c:	77 27       	eor	r23, r23
    115e:	63 c2       	rjmp	.+1222   	; 0x1626 <strtod>

00001160 <strdup>:
    1160:	0f 93       	push	r16
    1162:	1f 93       	push	r17
    1164:	cf 93       	push	r28
    1166:	df 93       	push	r29
    1168:	8c 01       	movw	r16, r24
    116a:	fc 01       	movw	r30, r24
    116c:	01 90       	ld	r0, Z+
    116e:	00 20       	and	r0, r0
    1170:	e9 f7       	brne	.-6      	; 0x116c <strdup+0xc>
    1172:	cf 01       	movw	r24, r30
    1174:	80 1b       	sub	r24, r16
    1176:	91 0b       	sbc	r25, r17
    1178:	6e de       	rcall	.-804    	; 0xe56 <malloc>
    117a:	ec 01       	movw	r28, r24
    117c:	00 97       	sbiw	r24, 0x00	; 0
    117e:	11 f0       	breq	.+4      	; 0x1184 <strdup+0x24>
    1180:	b8 01       	movw	r22, r16
    1182:	06 d0       	rcall	.+12     	; 0x1190 <strcpy>
    1184:	ce 01       	movw	r24, r28
    1186:	df 91       	pop	r29
    1188:	cf 91       	pop	r28
    118a:	1f 91       	pop	r17
    118c:	0f 91       	pop	r16
    118e:	08 95       	ret

00001190 <strcpy>:
    1190:	fb 01       	movw	r30, r22
    1192:	dc 01       	movw	r26, r24
    1194:	01 90       	ld	r0, Z+
    1196:	0d 92       	st	X+, r0
    1198:	00 20       	and	r0, r0
    119a:	e1 f7       	brne	.-8      	; 0x1194 <strcpy+0x4>
    119c:	08 95       	ret

0000119e <strncpy>:
    119e:	fb 01       	movw	r30, r22
    11a0:	dc 01       	movw	r26, r24
    11a2:	41 50       	subi	r20, 0x01	; 1
    11a4:	50 40       	sbci	r21, 0x00	; 0
    11a6:	48 f0       	brcs	.+18     	; 0x11ba <strncpy+0x1c>
    11a8:	01 90       	ld	r0, Z+
    11aa:	0d 92       	st	X+, r0
    11ac:	00 20       	and	r0, r0
    11ae:	c9 f7       	brne	.-14     	; 0x11a2 <strncpy+0x4>
    11b0:	01 c0       	rjmp	.+2      	; 0x11b4 <strncpy+0x16>
    11b2:	1d 92       	st	X+, r1
    11b4:	41 50       	subi	r20, 0x01	; 1
    11b6:	50 40       	sbci	r21, 0x00	; 0
    11b8:	e0 f7       	brcc	.-8      	; 0x11b2 <strncpy+0x14>
    11ba:	08 95       	ret

000011bc <strsep>:
    11bc:	fc 01       	movw	r30, r24
    11be:	a0 81       	ld	r26, Z
    11c0:	b1 81       	ldd	r27, Z+1	; 0x01
    11c2:	ad 01       	movw	r20, r26
    11c4:	10 96       	adiw	r26, 0x00	; 0
    11c6:	81 f0       	breq	.+32     	; 0x11e8 <strsep+0x2c>
    11c8:	3d 91       	ld	r19, X+
    11ca:	fb 01       	movw	r30, r22
    11cc:	01 90       	ld	r0, Z+
    11ce:	03 16       	cp	r0, r19
    11d0:	01 10       	cpse	r0, r1
    11d2:	e1 f7       	brne	.-8      	; 0x11cc <strsep+0x10>
    11d4:	c9 f7       	brne	.-14     	; 0x11c8 <strsep+0xc>
    11d6:	00 20       	and	r0, r0
    11d8:	11 f4       	brne	.+4      	; 0x11de <strsep+0x22>
    11da:	d0 01       	movw	r26, r0
    11dc:	02 c0       	rjmp	.+4      	; 0x11e2 <strsep+0x26>
    11de:	1e 92       	st	-X, r1
    11e0:	11 96       	adiw	r26, 0x01	; 1
    11e2:	fc 01       	movw	r30, r24
    11e4:	a0 83       	st	Z, r26
    11e6:	b1 83       	std	Z+1, r27	; 0x01
    11e8:	ca 01       	movw	r24, r20
    11ea:	08 95       	ret

000011ec <sprintf>:
    11ec:	0f 93       	push	r16
    11ee:	1f 93       	push	r17
    11f0:	cf 93       	push	r28
    11f2:	df 93       	push	r29
    11f4:	cd b7       	in	r28, 0x3d	; 61
    11f6:	de b7       	in	r29, 0x3e	; 62
    11f8:	2e 97       	sbiw	r28, 0x0e	; 14
    11fa:	0f b6       	in	r0, 0x3f	; 63
    11fc:	f8 94       	cli
    11fe:	de bf       	out	0x3e, r29	; 62
    1200:	0f be       	out	0x3f, r0	; 63
    1202:	cd bf       	out	0x3d, r28	; 61
    1204:	0d 89       	ldd	r16, Y+21	; 0x15
    1206:	1e 89       	ldd	r17, Y+22	; 0x16
    1208:	86 e0       	ldi	r24, 0x06	; 6
    120a:	8c 83       	std	Y+4, r24	; 0x04
    120c:	1a 83       	std	Y+2, r17	; 0x02
    120e:	09 83       	std	Y+1, r16	; 0x01
    1210:	8f ef       	ldi	r24, 0xFF	; 255
    1212:	9f e7       	ldi	r25, 0x7F	; 127
    1214:	9e 83       	std	Y+6, r25	; 0x06
    1216:	8d 83       	std	Y+5, r24	; 0x05
    1218:	ae 01       	movw	r20, r28
    121a:	47 5e       	subi	r20, 0xE7	; 231
    121c:	5f 4f       	sbci	r21, 0xFF	; 255
    121e:	6f 89       	ldd	r22, Y+23	; 0x17
    1220:	78 8d       	ldd	r23, Y+24	; 0x18
    1222:	ce 01       	movw	r24, r28
    1224:	01 96       	adiw	r24, 0x01	; 1
    1226:	11 d0       	rcall	.+34     	; 0x124a <vfprintf>
    1228:	2f 81       	ldd	r18, Y+7	; 0x07
    122a:	38 85       	ldd	r19, Y+8	; 0x08
    122c:	f8 01       	movw	r30, r16
    122e:	e2 0f       	add	r30, r18
    1230:	f3 1f       	adc	r31, r19
    1232:	10 82       	st	Z, r1
    1234:	2e 96       	adiw	r28, 0x0e	; 14
    1236:	0f b6       	in	r0, 0x3f	; 63
    1238:	f8 94       	cli
    123a:	de bf       	out	0x3e, r29	; 62
    123c:	0f be       	out	0x3f, r0	; 63
    123e:	cd bf       	out	0x3d, r28	; 61
    1240:	df 91       	pop	r29
    1242:	cf 91       	pop	r28
    1244:	1f 91       	pop	r17
    1246:	0f 91       	pop	r16
    1248:	08 95       	ret

0000124a <vfprintf>:
    124a:	2f 92       	push	r2
    124c:	3f 92       	push	r3
    124e:	4f 92       	push	r4
    1250:	5f 92       	push	r5
    1252:	6f 92       	push	r6
    1254:	7f 92       	push	r7
    1256:	8f 92       	push	r8
    1258:	9f 92       	push	r9
    125a:	af 92       	push	r10
    125c:	bf 92       	push	r11
    125e:	cf 92       	push	r12
    1260:	df 92       	push	r13
    1262:	ef 92       	push	r14
    1264:	ff 92       	push	r15
    1266:	0f 93       	push	r16
    1268:	1f 93       	push	r17
    126a:	cf 93       	push	r28
    126c:	df 93       	push	r29
    126e:	cd b7       	in	r28, 0x3d	; 61
    1270:	de b7       	in	r29, 0x3e	; 62
    1272:	2c 97       	sbiw	r28, 0x0c	; 12
    1274:	0f b6       	in	r0, 0x3f	; 63
    1276:	f8 94       	cli
    1278:	de bf       	out	0x3e, r29	; 62
    127a:	0f be       	out	0x3f, r0	; 63
    127c:	cd bf       	out	0x3d, r28	; 61
    127e:	7c 01       	movw	r14, r24
    1280:	6b 01       	movw	r12, r22
    1282:	8a 01       	movw	r16, r20
    1284:	fc 01       	movw	r30, r24
    1286:	17 82       	std	Z+7, r1	; 0x07
    1288:	16 82       	std	Z+6, r1	; 0x06
    128a:	83 81       	ldd	r24, Z+3	; 0x03
    128c:	81 ff       	sbrs	r24, 1
    128e:	b0 c1       	rjmp	.+864    	; 0x15f0 <vfprintf+0x3a6>
    1290:	ce 01       	movw	r24, r28
    1292:	01 96       	adiw	r24, 0x01	; 1
    1294:	4c 01       	movw	r8, r24
    1296:	f7 01       	movw	r30, r14
    1298:	93 81       	ldd	r25, Z+3	; 0x03
    129a:	f6 01       	movw	r30, r12
    129c:	93 fd       	sbrc	r25, 3
    129e:	85 91       	lpm	r24, Z+
    12a0:	93 ff       	sbrs	r25, 3
    12a2:	81 91       	ld	r24, Z+
    12a4:	6f 01       	movw	r12, r30
    12a6:	88 23       	and	r24, r24
    12a8:	09 f4       	brne	.+2      	; 0x12ac <vfprintf+0x62>
    12aa:	9e c1       	rjmp	.+828    	; 0x15e8 <vfprintf+0x39e>
    12ac:	85 32       	cpi	r24, 0x25	; 37
    12ae:	39 f4       	brne	.+14     	; 0x12be <vfprintf+0x74>
    12b0:	93 fd       	sbrc	r25, 3
    12b2:	85 91       	lpm	r24, Z+
    12b4:	93 ff       	sbrs	r25, 3
    12b6:	81 91       	ld	r24, Z+
    12b8:	6f 01       	movw	r12, r30
    12ba:	85 32       	cpi	r24, 0x25	; 37
    12bc:	21 f4       	brne	.+8      	; 0x12c6 <vfprintf+0x7c>
    12be:	b7 01       	movw	r22, r14
    12c0:	90 e0       	ldi	r25, 0x00	; 0
    12c2:	4d d3       	rcall	.+1690   	; 0x195e <fputc>
    12c4:	e8 cf       	rjmp	.-48     	; 0x1296 <vfprintf+0x4c>
    12c6:	51 2c       	mov	r5, r1
    12c8:	31 2c       	mov	r3, r1
    12ca:	20 e0       	ldi	r18, 0x00	; 0
    12cc:	20 32       	cpi	r18, 0x20	; 32
    12ce:	a0 f4       	brcc	.+40     	; 0x12f8 <vfprintf+0xae>
    12d0:	8b 32       	cpi	r24, 0x2B	; 43
    12d2:	69 f0       	breq	.+26     	; 0x12ee <vfprintf+0xa4>
    12d4:	30 f4       	brcc	.+12     	; 0x12e2 <vfprintf+0x98>
    12d6:	80 32       	cpi	r24, 0x20	; 32
    12d8:	59 f0       	breq	.+22     	; 0x12f0 <vfprintf+0xa6>
    12da:	83 32       	cpi	r24, 0x23	; 35
    12dc:	69 f4       	brne	.+26     	; 0x12f8 <vfprintf+0xae>
    12de:	20 61       	ori	r18, 0x10	; 16
    12e0:	2c c0       	rjmp	.+88     	; 0x133a <vfprintf+0xf0>
    12e2:	8d 32       	cpi	r24, 0x2D	; 45
    12e4:	39 f0       	breq	.+14     	; 0x12f4 <vfprintf+0xaa>
    12e6:	80 33       	cpi	r24, 0x30	; 48
    12e8:	39 f4       	brne	.+14     	; 0x12f8 <vfprintf+0xae>
    12ea:	21 60       	ori	r18, 0x01	; 1
    12ec:	26 c0       	rjmp	.+76     	; 0x133a <vfprintf+0xf0>
    12ee:	22 60       	ori	r18, 0x02	; 2
    12f0:	24 60       	ori	r18, 0x04	; 4
    12f2:	23 c0       	rjmp	.+70     	; 0x133a <vfprintf+0xf0>
    12f4:	28 60       	ori	r18, 0x08	; 8
    12f6:	21 c0       	rjmp	.+66     	; 0x133a <vfprintf+0xf0>
    12f8:	27 fd       	sbrc	r18, 7
    12fa:	27 c0       	rjmp	.+78     	; 0x134a <vfprintf+0x100>
    12fc:	30 ed       	ldi	r19, 0xD0	; 208
    12fe:	38 0f       	add	r19, r24
    1300:	3a 30       	cpi	r19, 0x0A	; 10
    1302:	78 f4       	brcc	.+30     	; 0x1322 <vfprintf+0xd8>
    1304:	26 ff       	sbrs	r18, 6
    1306:	06 c0       	rjmp	.+12     	; 0x1314 <vfprintf+0xca>
    1308:	fa e0       	ldi	r31, 0x0A	; 10
    130a:	5f 9e       	mul	r5, r31
    130c:	30 0d       	add	r19, r0
    130e:	11 24       	eor	r1, r1
    1310:	53 2e       	mov	r5, r19
    1312:	13 c0       	rjmp	.+38     	; 0x133a <vfprintf+0xf0>
    1314:	8a e0       	ldi	r24, 0x0A	; 10
    1316:	38 9e       	mul	r3, r24
    1318:	30 0d       	add	r19, r0
    131a:	11 24       	eor	r1, r1
    131c:	33 2e       	mov	r3, r19
    131e:	20 62       	ori	r18, 0x20	; 32
    1320:	0c c0       	rjmp	.+24     	; 0x133a <vfprintf+0xf0>
    1322:	8e 32       	cpi	r24, 0x2E	; 46
    1324:	21 f4       	brne	.+8      	; 0x132e <vfprintf+0xe4>
    1326:	26 fd       	sbrc	r18, 6
    1328:	5f c1       	rjmp	.+702    	; 0x15e8 <vfprintf+0x39e>
    132a:	20 64       	ori	r18, 0x40	; 64
    132c:	06 c0       	rjmp	.+12     	; 0x133a <vfprintf+0xf0>
    132e:	8c 36       	cpi	r24, 0x6C	; 108
    1330:	11 f4       	brne	.+4      	; 0x1336 <vfprintf+0xec>
    1332:	20 68       	ori	r18, 0x80	; 128
    1334:	02 c0       	rjmp	.+4      	; 0x133a <vfprintf+0xf0>
    1336:	88 36       	cpi	r24, 0x68	; 104
    1338:	41 f4       	brne	.+16     	; 0x134a <vfprintf+0x100>
    133a:	f6 01       	movw	r30, r12
    133c:	93 fd       	sbrc	r25, 3
    133e:	85 91       	lpm	r24, Z+
    1340:	93 ff       	sbrs	r25, 3
    1342:	81 91       	ld	r24, Z+
    1344:	6f 01       	movw	r12, r30
    1346:	81 11       	cpse	r24, r1
    1348:	c1 cf       	rjmp	.-126    	; 0x12cc <vfprintf+0x82>
    134a:	98 2f       	mov	r25, r24
    134c:	9f 7d       	andi	r25, 0xDF	; 223
    134e:	95 54       	subi	r25, 0x45	; 69
    1350:	93 30       	cpi	r25, 0x03	; 3
    1352:	28 f4       	brcc	.+10     	; 0x135e <vfprintf+0x114>
    1354:	0c 5f       	subi	r16, 0xFC	; 252
    1356:	1f 4f       	sbci	r17, 0xFF	; 255
    1358:	ff e3       	ldi	r31, 0x3F	; 63
    135a:	f9 83       	std	Y+1, r31	; 0x01
    135c:	0d c0       	rjmp	.+26     	; 0x1378 <vfprintf+0x12e>
    135e:	83 36       	cpi	r24, 0x63	; 99
    1360:	31 f0       	breq	.+12     	; 0x136e <vfprintf+0x124>
    1362:	83 37       	cpi	r24, 0x73	; 115
    1364:	71 f0       	breq	.+28     	; 0x1382 <vfprintf+0x138>
    1366:	83 35       	cpi	r24, 0x53	; 83
    1368:	09 f0       	breq	.+2      	; 0x136c <vfprintf+0x122>
    136a:	57 c0       	rjmp	.+174    	; 0x141a <vfprintf+0x1d0>
    136c:	21 c0       	rjmp	.+66     	; 0x13b0 <vfprintf+0x166>
    136e:	f8 01       	movw	r30, r16
    1370:	80 81       	ld	r24, Z
    1372:	89 83       	std	Y+1, r24	; 0x01
    1374:	0e 5f       	subi	r16, 0xFE	; 254
    1376:	1f 4f       	sbci	r17, 0xFF	; 255
    1378:	44 24       	eor	r4, r4
    137a:	43 94       	inc	r4
    137c:	51 2c       	mov	r5, r1
    137e:	54 01       	movw	r10, r8
    1380:	14 c0       	rjmp	.+40     	; 0x13aa <vfprintf+0x160>
    1382:	38 01       	movw	r6, r16
    1384:	f2 e0       	ldi	r31, 0x02	; 2
    1386:	6f 0e       	add	r6, r31
    1388:	71 1c       	adc	r7, r1
    138a:	f8 01       	movw	r30, r16
    138c:	a0 80       	ld	r10, Z
    138e:	b1 80       	ldd	r11, Z+1	; 0x01
    1390:	26 ff       	sbrs	r18, 6
    1392:	03 c0       	rjmp	.+6      	; 0x139a <vfprintf+0x150>
    1394:	65 2d       	mov	r22, r5
    1396:	70 e0       	ldi	r23, 0x00	; 0
    1398:	02 c0       	rjmp	.+4      	; 0x139e <vfprintf+0x154>
    139a:	6f ef       	ldi	r22, 0xFF	; 255
    139c:	7f ef       	ldi	r23, 0xFF	; 255
    139e:	c5 01       	movw	r24, r10
    13a0:	2c 87       	std	Y+12, r18	; 0x0c
    13a2:	d2 d2       	rcall	.+1444   	; 0x1948 <strnlen>
    13a4:	2c 01       	movw	r4, r24
    13a6:	83 01       	movw	r16, r6
    13a8:	2c 85       	ldd	r18, Y+12	; 0x0c
    13aa:	2f 77       	andi	r18, 0x7F	; 127
    13ac:	22 2e       	mov	r2, r18
    13ae:	16 c0       	rjmp	.+44     	; 0x13dc <vfprintf+0x192>
    13b0:	38 01       	movw	r6, r16
    13b2:	f2 e0       	ldi	r31, 0x02	; 2
    13b4:	6f 0e       	add	r6, r31
    13b6:	71 1c       	adc	r7, r1
    13b8:	f8 01       	movw	r30, r16
    13ba:	a0 80       	ld	r10, Z
    13bc:	b1 80       	ldd	r11, Z+1	; 0x01
    13be:	26 ff       	sbrs	r18, 6
    13c0:	03 c0       	rjmp	.+6      	; 0x13c8 <vfprintf+0x17e>
    13c2:	65 2d       	mov	r22, r5
    13c4:	70 e0       	ldi	r23, 0x00	; 0
    13c6:	02 c0       	rjmp	.+4      	; 0x13cc <vfprintf+0x182>
    13c8:	6f ef       	ldi	r22, 0xFF	; 255
    13ca:	7f ef       	ldi	r23, 0xFF	; 255
    13cc:	c5 01       	movw	r24, r10
    13ce:	2c 87       	std	Y+12, r18	; 0x0c
    13d0:	b0 d2       	rcall	.+1376   	; 0x1932 <strnlen_P>
    13d2:	2c 01       	movw	r4, r24
    13d4:	2c 85       	ldd	r18, Y+12	; 0x0c
    13d6:	20 68       	ori	r18, 0x80	; 128
    13d8:	22 2e       	mov	r2, r18
    13da:	83 01       	movw	r16, r6
    13dc:	23 fc       	sbrc	r2, 3
    13de:	19 c0       	rjmp	.+50     	; 0x1412 <vfprintf+0x1c8>
    13e0:	83 2d       	mov	r24, r3
    13e2:	90 e0       	ldi	r25, 0x00	; 0
    13e4:	48 16       	cp	r4, r24
    13e6:	59 06       	cpc	r5, r25
    13e8:	a0 f4       	brcc	.+40     	; 0x1412 <vfprintf+0x1c8>
    13ea:	b7 01       	movw	r22, r14
    13ec:	80 e2       	ldi	r24, 0x20	; 32
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	b6 d2       	rcall	.+1388   	; 0x195e <fputc>
    13f2:	3a 94       	dec	r3
    13f4:	f5 cf       	rjmp	.-22     	; 0x13e0 <vfprintf+0x196>
    13f6:	f5 01       	movw	r30, r10
    13f8:	27 fc       	sbrc	r2, 7
    13fa:	85 91       	lpm	r24, Z+
    13fc:	27 fe       	sbrs	r2, 7
    13fe:	81 91       	ld	r24, Z+
    1400:	5f 01       	movw	r10, r30
    1402:	b7 01       	movw	r22, r14
    1404:	90 e0       	ldi	r25, 0x00	; 0
    1406:	ab d2       	rcall	.+1366   	; 0x195e <fputc>
    1408:	31 10       	cpse	r3, r1
    140a:	3a 94       	dec	r3
    140c:	f1 e0       	ldi	r31, 0x01	; 1
    140e:	4f 1a       	sub	r4, r31
    1410:	51 08       	sbc	r5, r1
    1412:	41 14       	cp	r4, r1
    1414:	51 04       	cpc	r5, r1
    1416:	79 f7       	brne	.-34     	; 0x13f6 <vfprintf+0x1ac>
    1418:	de c0       	rjmp	.+444    	; 0x15d6 <vfprintf+0x38c>
    141a:	84 36       	cpi	r24, 0x64	; 100
    141c:	11 f0       	breq	.+4      	; 0x1422 <vfprintf+0x1d8>
    141e:	89 36       	cpi	r24, 0x69	; 105
    1420:	31 f5       	brne	.+76     	; 0x146e <vfprintf+0x224>
    1422:	f8 01       	movw	r30, r16
    1424:	27 ff       	sbrs	r18, 7
    1426:	07 c0       	rjmp	.+14     	; 0x1436 <vfprintf+0x1ec>
    1428:	60 81       	ld	r22, Z
    142a:	71 81       	ldd	r23, Z+1	; 0x01
    142c:	82 81       	ldd	r24, Z+2	; 0x02
    142e:	93 81       	ldd	r25, Z+3	; 0x03
    1430:	0c 5f       	subi	r16, 0xFC	; 252
    1432:	1f 4f       	sbci	r17, 0xFF	; 255
    1434:	08 c0       	rjmp	.+16     	; 0x1446 <vfprintf+0x1fc>
    1436:	60 81       	ld	r22, Z
    1438:	71 81       	ldd	r23, Z+1	; 0x01
    143a:	07 2e       	mov	r0, r23
    143c:	00 0c       	add	r0, r0
    143e:	88 0b       	sbc	r24, r24
    1440:	99 0b       	sbc	r25, r25
    1442:	0e 5f       	subi	r16, 0xFE	; 254
    1444:	1f 4f       	sbci	r17, 0xFF	; 255
    1446:	2f 76       	andi	r18, 0x6F	; 111
    1448:	72 2e       	mov	r7, r18
    144a:	97 ff       	sbrs	r25, 7
    144c:	09 c0       	rjmp	.+18     	; 0x1460 <vfprintf+0x216>
    144e:	90 95       	com	r25
    1450:	80 95       	com	r24
    1452:	70 95       	com	r23
    1454:	61 95       	neg	r22
    1456:	7f 4f       	sbci	r23, 0xFF	; 255
    1458:	8f 4f       	sbci	r24, 0xFF	; 255
    145a:	9f 4f       	sbci	r25, 0xFF	; 255
    145c:	20 68       	ori	r18, 0x80	; 128
    145e:	72 2e       	mov	r7, r18
    1460:	2a e0       	ldi	r18, 0x0A	; 10
    1462:	30 e0       	ldi	r19, 0x00	; 0
    1464:	a4 01       	movw	r20, r8
    1466:	b3 d2       	rcall	.+1382   	; 0x19ce <__ultoa_invert>
    1468:	a8 2e       	mov	r10, r24
    146a:	a8 18       	sub	r10, r8
    146c:	43 c0       	rjmp	.+134    	; 0x14f4 <vfprintf+0x2aa>
    146e:	85 37       	cpi	r24, 0x75	; 117
    1470:	29 f4       	brne	.+10     	; 0x147c <vfprintf+0x232>
    1472:	2f 7e       	andi	r18, 0xEF	; 239
    1474:	b2 2e       	mov	r11, r18
    1476:	2a e0       	ldi	r18, 0x0A	; 10
    1478:	30 e0       	ldi	r19, 0x00	; 0
    147a:	25 c0       	rjmp	.+74     	; 0x14c6 <vfprintf+0x27c>
    147c:	f2 2f       	mov	r31, r18
    147e:	f9 7f       	andi	r31, 0xF9	; 249
    1480:	bf 2e       	mov	r11, r31
    1482:	8f 36       	cpi	r24, 0x6F	; 111
    1484:	c1 f0       	breq	.+48     	; 0x14b6 <vfprintf+0x26c>
    1486:	18 f4       	brcc	.+6      	; 0x148e <vfprintf+0x244>
    1488:	88 35       	cpi	r24, 0x58	; 88
    148a:	79 f0       	breq	.+30     	; 0x14aa <vfprintf+0x260>
    148c:	ad c0       	rjmp	.+346    	; 0x15e8 <vfprintf+0x39e>
    148e:	80 37       	cpi	r24, 0x70	; 112
    1490:	19 f0       	breq	.+6      	; 0x1498 <vfprintf+0x24e>
    1492:	88 37       	cpi	r24, 0x78	; 120
    1494:	21 f0       	breq	.+8      	; 0x149e <vfprintf+0x254>
    1496:	a8 c0       	rjmp	.+336    	; 0x15e8 <vfprintf+0x39e>
    1498:	2f 2f       	mov	r18, r31
    149a:	20 61       	ori	r18, 0x10	; 16
    149c:	b2 2e       	mov	r11, r18
    149e:	b4 fe       	sbrs	r11, 4
    14a0:	0d c0       	rjmp	.+26     	; 0x14bc <vfprintf+0x272>
    14a2:	8b 2d       	mov	r24, r11
    14a4:	84 60       	ori	r24, 0x04	; 4
    14a6:	b8 2e       	mov	r11, r24
    14a8:	09 c0       	rjmp	.+18     	; 0x14bc <vfprintf+0x272>
    14aa:	24 ff       	sbrs	r18, 4
    14ac:	0a c0       	rjmp	.+20     	; 0x14c2 <vfprintf+0x278>
    14ae:	9f 2f       	mov	r25, r31
    14b0:	96 60       	ori	r25, 0x06	; 6
    14b2:	b9 2e       	mov	r11, r25
    14b4:	06 c0       	rjmp	.+12     	; 0x14c2 <vfprintf+0x278>
    14b6:	28 e0       	ldi	r18, 0x08	; 8
    14b8:	30 e0       	ldi	r19, 0x00	; 0
    14ba:	05 c0       	rjmp	.+10     	; 0x14c6 <vfprintf+0x27c>
    14bc:	20 e1       	ldi	r18, 0x10	; 16
    14be:	30 e0       	ldi	r19, 0x00	; 0
    14c0:	02 c0       	rjmp	.+4      	; 0x14c6 <vfprintf+0x27c>
    14c2:	20 e1       	ldi	r18, 0x10	; 16
    14c4:	32 e0       	ldi	r19, 0x02	; 2
    14c6:	f8 01       	movw	r30, r16
    14c8:	b7 fe       	sbrs	r11, 7
    14ca:	07 c0       	rjmp	.+14     	; 0x14da <vfprintf+0x290>
    14cc:	60 81       	ld	r22, Z
    14ce:	71 81       	ldd	r23, Z+1	; 0x01
    14d0:	82 81       	ldd	r24, Z+2	; 0x02
    14d2:	93 81       	ldd	r25, Z+3	; 0x03
    14d4:	0c 5f       	subi	r16, 0xFC	; 252
    14d6:	1f 4f       	sbci	r17, 0xFF	; 255
    14d8:	06 c0       	rjmp	.+12     	; 0x14e6 <vfprintf+0x29c>
    14da:	60 81       	ld	r22, Z
    14dc:	71 81       	ldd	r23, Z+1	; 0x01
    14de:	80 e0       	ldi	r24, 0x00	; 0
    14e0:	90 e0       	ldi	r25, 0x00	; 0
    14e2:	0e 5f       	subi	r16, 0xFE	; 254
    14e4:	1f 4f       	sbci	r17, 0xFF	; 255
    14e6:	a4 01       	movw	r20, r8
    14e8:	72 d2       	rcall	.+1252   	; 0x19ce <__ultoa_invert>
    14ea:	a8 2e       	mov	r10, r24
    14ec:	a8 18       	sub	r10, r8
    14ee:	fb 2d       	mov	r31, r11
    14f0:	ff 77       	andi	r31, 0x7F	; 127
    14f2:	7f 2e       	mov	r7, r31
    14f4:	76 fe       	sbrs	r7, 6
    14f6:	0b c0       	rjmp	.+22     	; 0x150e <vfprintf+0x2c4>
    14f8:	37 2d       	mov	r19, r7
    14fa:	3e 7f       	andi	r19, 0xFE	; 254
    14fc:	a5 14       	cp	r10, r5
    14fe:	50 f4       	brcc	.+20     	; 0x1514 <vfprintf+0x2ca>
    1500:	74 fe       	sbrs	r7, 4
    1502:	0a c0       	rjmp	.+20     	; 0x1518 <vfprintf+0x2ce>
    1504:	72 fc       	sbrc	r7, 2
    1506:	08 c0       	rjmp	.+16     	; 0x1518 <vfprintf+0x2ce>
    1508:	37 2d       	mov	r19, r7
    150a:	3e 7e       	andi	r19, 0xEE	; 238
    150c:	05 c0       	rjmp	.+10     	; 0x1518 <vfprintf+0x2ce>
    150e:	ba 2c       	mov	r11, r10
    1510:	37 2d       	mov	r19, r7
    1512:	03 c0       	rjmp	.+6      	; 0x151a <vfprintf+0x2d0>
    1514:	ba 2c       	mov	r11, r10
    1516:	01 c0       	rjmp	.+2      	; 0x151a <vfprintf+0x2d0>
    1518:	b5 2c       	mov	r11, r5
    151a:	34 ff       	sbrs	r19, 4
    151c:	0d c0       	rjmp	.+26     	; 0x1538 <vfprintf+0x2ee>
    151e:	fe 01       	movw	r30, r28
    1520:	ea 0d       	add	r30, r10
    1522:	f1 1d       	adc	r31, r1
    1524:	80 81       	ld	r24, Z
    1526:	80 33       	cpi	r24, 0x30	; 48
    1528:	11 f4       	brne	.+4      	; 0x152e <vfprintf+0x2e4>
    152a:	39 7e       	andi	r19, 0xE9	; 233
    152c:	09 c0       	rjmp	.+18     	; 0x1540 <vfprintf+0x2f6>
    152e:	32 ff       	sbrs	r19, 2
    1530:	06 c0       	rjmp	.+12     	; 0x153e <vfprintf+0x2f4>
    1532:	b3 94       	inc	r11
    1534:	b3 94       	inc	r11
    1536:	04 c0       	rjmp	.+8      	; 0x1540 <vfprintf+0x2f6>
    1538:	83 2f       	mov	r24, r19
    153a:	86 78       	andi	r24, 0x86	; 134
    153c:	09 f0       	breq	.+2      	; 0x1540 <vfprintf+0x2f6>
    153e:	b3 94       	inc	r11
    1540:	33 fd       	sbrc	r19, 3
    1542:	12 c0       	rjmp	.+36     	; 0x1568 <vfprintf+0x31e>
    1544:	30 ff       	sbrs	r19, 0
    1546:	06 c0       	rjmp	.+12     	; 0x1554 <vfprintf+0x30a>
    1548:	5a 2c       	mov	r5, r10
    154a:	b3 14       	cp	r11, r3
    154c:	18 f4       	brcc	.+6      	; 0x1554 <vfprintf+0x30a>
    154e:	53 0c       	add	r5, r3
    1550:	5b 18       	sub	r5, r11
    1552:	b3 2c       	mov	r11, r3
    1554:	b3 14       	cp	r11, r3
    1556:	60 f4       	brcc	.+24     	; 0x1570 <vfprintf+0x326>
    1558:	b7 01       	movw	r22, r14
    155a:	80 e2       	ldi	r24, 0x20	; 32
    155c:	90 e0       	ldi	r25, 0x00	; 0
    155e:	3c 87       	std	Y+12, r19	; 0x0c
    1560:	fe d1       	rcall	.+1020   	; 0x195e <fputc>
    1562:	b3 94       	inc	r11
    1564:	3c 85       	ldd	r19, Y+12	; 0x0c
    1566:	f6 cf       	rjmp	.-20     	; 0x1554 <vfprintf+0x30a>
    1568:	b3 14       	cp	r11, r3
    156a:	10 f4       	brcc	.+4      	; 0x1570 <vfprintf+0x326>
    156c:	3b 18       	sub	r3, r11
    156e:	01 c0       	rjmp	.+2      	; 0x1572 <vfprintf+0x328>
    1570:	31 2c       	mov	r3, r1
    1572:	34 ff       	sbrs	r19, 4
    1574:	11 c0       	rjmp	.+34     	; 0x1598 <vfprintf+0x34e>
    1576:	b7 01       	movw	r22, r14
    1578:	80 e3       	ldi	r24, 0x30	; 48
    157a:	90 e0       	ldi	r25, 0x00	; 0
    157c:	3c 87       	std	Y+12, r19	; 0x0c
    157e:	ef d1       	rcall	.+990    	; 0x195e <fputc>
    1580:	3c 85       	ldd	r19, Y+12	; 0x0c
    1582:	32 ff       	sbrs	r19, 2
    1584:	16 c0       	rjmp	.+44     	; 0x15b2 <vfprintf+0x368>
    1586:	31 fd       	sbrc	r19, 1
    1588:	03 c0       	rjmp	.+6      	; 0x1590 <vfprintf+0x346>
    158a:	88 e7       	ldi	r24, 0x78	; 120
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	02 c0       	rjmp	.+4      	; 0x1594 <vfprintf+0x34a>
    1590:	88 e5       	ldi	r24, 0x58	; 88
    1592:	90 e0       	ldi	r25, 0x00	; 0
    1594:	b7 01       	movw	r22, r14
    1596:	0c c0       	rjmp	.+24     	; 0x15b0 <vfprintf+0x366>
    1598:	83 2f       	mov	r24, r19
    159a:	86 78       	andi	r24, 0x86	; 134
    159c:	51 f0       	breq	.+20     	; 0x15b2 <vfprintf+0x368>
    159e:	31 ff       	sbrs	r19, 1
    15a0:	02 c0       	rjmp	.+4      	; 0x15a6 <vfprintf+0x35c>
    15a2:	8b e2       	ldi	r24, 0x2B	; 43
    15a4:	01 c0       	rjmp	.+2      	; 0x15a8 <vfprintf+0x35e>
    15a6:	80 e2       	ldi	r24, 0x20	; 32
    15a8:	37 fd       	sbrc	r19, 7
    15aa:	8d e2       	ldi	r24, 0x2D	; 45
    15ac:	b7 01       	movw	r22, r14
    15ae:	90 e0       	ldi	r25, 0x00	; 0
    15b0:	d6 d1       	rcall	.+940    	; 0x195e <fputc>
    15b2:	a5 14       	cp	r10, r5
    15b4:	30 f4       	brcc	.+12     	; 0x15c2 <vfprintf+0x378>
    15b6:	b7 01       	movw	r22, r14
    15b8:	80 e3       	ldi	r24, 0x30	; 48
    15ba:	90 e0       	ldi	r25, 0x00	; 0
    15bc:	d0 d1       	rcall	.+928    	; 0x195e <fputc>
    15be:	5a 94       	dec	r5
    15c0:	f8 cf       	rjmp	.-16     	; 0x15b2 <vfprintf+0x368>
    15c2:	aa 94       	dec	r10
    15c4:	f4 01       	movw	r30, r8
    15c6:	ea 0d       	add	r30, r10
    15c8:	f1 1d       	adc	r31, r1
    15ca:	80 81       	ld	r24, Z
    15cc:	b7 01       	movw	r22, r14
    15ce:	90 e0       	ldi	r25, 0x00	; 0
    15d0:	c6 d1       	rcall	.+908    	; 0x195e <fputc>
    15d2:	a1 10       	cpse	r10, r1
    15d4:	f6 cf       	rjmp	.-20     	; 0x15c2 <vfprintf+0x378>
    15d6:	33 20       	and	r3, r3
    15d8:	09 f4       	brne	.+2      	; 0x15dc <vfprintf+0x392>
    15da:	5d ce       	rjmp	.-838    	; 0x1296 <vfprintf+0x4c>
    15dc:	b7 01       	movw	r22, r14
    15de:	80 e2       	ldi	r24, 0x20	; 32
    15e0:	90 e0       	ldi	r25, 0x00	; 0
    15e2:	bd d1       	rcall	.+890    	; 0x195e <fputc>
    15e4:	3a 94       	dec	r3
    15e6:	f7 cf       	rjmp	.-18     	; 0x15d6 <vfprintf+0x38c>
    15e8:	f7 01       	movw	r30, r14
    15ea:	86 81       	ldd	r24, Z+6	; 0x06
    15ec:	97 81       	ldd	r25, Z+7	; 0x07
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <vfprintf+0x3aa>
    15f0:	8f ef       	ldi	r24, 0xFF	; 255
    15f2:	9f ef       	ldi	r25, 0xFF	; 255
    15f4:	2c 96       	adiw	r28, 0x0c	; 12
    15f6:	0f b6       	in	r0, 0x3f	; 63
    15f8:	f8 94       	cli
    15fa:	de bf       	out	0x3e, r29	; 62
    15fc:	0f be       	out	0x3f, r0	; 63
    15fe:	cd bf       	out	0x3d, r28	; 61
    1600:	df 91       	pop	r29
    1602:	cf 91       	pop	r28
    1604:	1f 91       	pop	r17
    1606:	0f 91       	pop	r16
    1608:	ff 90       	pop	r15
    160a:	ef 90       	pop	r14
    160c:	df 90       	pop	r13
    160e:	cf 90       	pop	r12
    1610:	bf 90       	pop	r11
    1612:	af 90       	pop	r10
    1614:	9f 90       	pop	r9
    1616:	8f 90       	pop	r8
    1618:	7f 90       	pop	r7
    161a:	6f 90       	pop	r6
    161c:	5f 90       	pop	r5
    161e:	4f 90       	pop	r4
    1620:	3f 90       	pop	r3
    1622:	2f 90       	pop	r2
    1624:	08 95       	ret

00001626 <strtod>:
    1626:	6f 92       	push	r6
    1628:	7f 92       	push	r7
    162a:	8f 92       	push	r8
    162c:	9f 92       	push	r9
    162e:	af 92       	push	r10
    1630:	bf 92       	push	r11
    1632:	cf 92       	push	r12
    1634:	df 92       	push	r13
    1636:	ef 92       	push	r14
    1638:	ff 92       	push	r15
    163a:	0f 93       	push	r16
    163c:	1f 93       	push	r17
    163e:	cf 93       	push	r28
    1640:	df 93       	push	r29
    1642:	ec 01       	movw	r28, r24
    1644:	7b 01       	movw	r14, r22
    1646:	61 15       	cp	r22, r1
    1648:	71 05       	cpc	r23, r1
    164a:	19 f0       	breq	.+6      	; 0x1652 <strtod+0x2c>
    164c:	db 01       	movw	r26, r22
    164e:	8d 93       	st	X+, r24
    1650:	9c 93       	st	X, r25
    1652:	8e 01       	movw	r16, r28
    1654:	0f 5f       	subi	r16, 0xFF	; 255
    1656:	1f 4f       	sbci	r17, 0xFF	; 255
    1658:	78 80       	ld	r7, Y
    165a:	87 2d       	mov	r24, r7
    165c:	90 e0       	ldi	r25, 0x00	; 0
    165e:	49 d1       	rcall	.+658    	; 0x18f2 <isspace>
    1660:	89 2b       	or	r24, r25
    1662:	11 f0       	breq	.+4      	; 0x1668 <strtod+0x42>
    1664:	e8 01       	movw	r28, r16
    1666:	f5 cf       	rjmp	.-22     	; 0x1652 <strtod+0x2c>
    1668:	bd e2       	ldi	r27, 0x2D	; 45
    166a:	7b 12       	cpse	r7, r27
    166c:	05 c0       	rjmp	.+10     	; 0x1678 <strtod+0x52>
    166e:	0f 5f       	subi	r16, 0xFF	; 255
    1670:	1f 4f       	sbci	r17, 0xFF	; 255
    1672:	79 80       	ldd	r7, Y+1	; 0x01
    1674:	c1 e0       	ldi	r28, 0x01	; 1
    1676:	08 c0       	rjmp	.+16     	; 0x1688 <strtod+0x62>
    1678:	eb e2       	ldi	r30, 0x2B	; 43
    167a:	7e 12       	cpse	r7, r30
    167c:	04 c0       	rjmp	.+8      	; 0x1686 <strtod+0x60>
    167e:	8e 01       	movw	r16, r28
    1680:	0e 5f       	subi	r16, 0xFE	; 254
    1682:	1f 4f       	sbci	r17, 0xFF	; 255
    1684:	79 80       	ldd	r7, Y+1	; 0x01
    1686:	c0 e0       	ldi	r28, 0x00	; 0
    1688:	68 01       	movw	r12, r16
    168a:	f1 e0       	ldi	r31, 0x01	; 1
    168c:	cf 1a       	sub	r12, r31
    168e:	d1 08       	sbc	r13, r1
    1690:	43 e0       	ldi	r20, 0x03	; 3
    1692:	50 e0       	ldi	r21, 0x00	; 0
    1694:	64 e9       	ldi	r22, 0x94	; 148
    1696:	70 e0       	ldi	r23, 0x00	; 0
    1698:	c6 01       	movw	r24, r12
    169a:	33 d1       	rcall	.+614    	; 0x1902 <strncasecmp_P>
    169c:	89 2b       	or	r24, r25
    169e:	e9 f4       	brne	.+58     	; 0x16da <strtod+0xb4>
    16a0:	68 01       	movw	r12, r16
    16a2:	22 e0       	ldi	r18, 0x02	; 2
    16a4:	c2 0e       	add	r12, r18
    16a6:	d1 1c       	adc	r13, r1
    16a8:	45 e0       	ldi	r20, 0x05	; 5
    16aa:	50 e0       	ldi	r21, 0x00	; 0
    16ac:	6f e8       	ldi	r22, 0x8F	; 143
    16ae:	70 e0       	ldi	r23, 0x00	; 0
    16b0:	c6 01       	movw	r24, r12
    16b2:	27 d1       	rcall	.+590    	; 0x1902 <strncasecmp_P>
    16b4:	89 2b       	or	r24, r25
    16b6:	21 f4       	brne	.+8      	; 0x16c0 <strtod+0x9a>
    16b8:	68 01       	movw	r12, r16
    16ba:	87 e0       	ldi	r24, 0x07	; 7
    16bc:	c8 0e       	add	r12, r24
    16be:	d1 1c       	adc	r13, r1
    16c0:	e1 14       	cp	r14, r1
    16c2:	f1 04       	cpc	r15, r1
    16c4:	19 f0       	breq	.+6      	; 0x16cc <strtod+0xa6>
    16c6:	d7 01       	movw	r26, r14
    16c8:	cd 92       	st	X+, r12
    16ca:	dc 92       	st	X, r13
    16cc:	c1 11       	cpse	r28, r1
    16ce:	f9 c0       	rjmp	.+498    	; 0x18c2 <strtod+0x29c>
    16d0:	60 e0       	ldi	r22, 0x00	; 0
    16d2:	70 e0       	ldi	r23, 0x00	; 0
    16d4:	80 e8       	ldi	r24, 0x80	; 128
    16d6:	9f e7       	ldi	r25, 0x7F	; 127
    16d8:	fd c0       	rjmp	.+506    	; 0x18d4 <strtod+0x2ae>
    16da:	43 e0       	ldi	r20, 0x03	; 3
    16dc:	50 e0       	ldi	r21, 0x00	; 0
    16de:	6c e8       	ldi	r22, 0x8C	; 140
    16e0:	70 e0       	ldi	r23, 0x00	; 0
    16e2:	c6 01       	movw	r24, r12
    16e4:	0e d1       	rcall	.+540    	; 0x1902 <strncasecmp_P>
    16e6:	89 2b       	or	r24, r25
    16e8:	51 f4       	brne	.+20     	; 0x16fe <strtod+0xd8>
    16ea:	e1 14       	cp	r14, r1
    16ec:	f1 04       	cpc	r15, r1
    16ee:	09 f4       	brne	.+2      	; 0x16f2 <strtod+0xcc>
    16f0:	ed c0       	rjmp	.+474    	; 0x18cc <strtod+0x2a6>
    16f2:	0e 5f       	subi	r16, 0xFE	; 254
    16f4:	1f 4f       	sbci	r17, 0xFF	; 255
    16f6:	f7 01       	movw	r30, r14
    16f8:	11 83       	std	Z+1, r17	; 0x01
    16fa:	00 83       	st	Z, r16
    16fc:	e7 c0       	rjmp	.+462    	; 0x18cc <strtod+0x2a6>
    16fe:	68 01       	movw	r12, r16
    1700:	60 e0       	ldi	r22, 0x00	; 0
    1702:	70 e0       	ldi	r23, 0x00	; 0
    1704:	cb 01       	movw	r24, r22
    1706:	00 e0       	ldi	r16, 0x00	; 0
    1708:	10 e0       	ldi	r17, 0x00	; 0
    170a:	f6 01       	movw	r30, r12
    170c:	d0 ed       	ldi	r29, 0xD0	; 208
    170e:	d7 0d       	add	r29, r7
    1710:	da 30       	cpi	r29, 0x0A	; 10
    1712:	50 f5       	brcc	.+84     	; 0x1768 <strtod+0x142>
    1714:	2c 2f       	mov	r18, r28
    1716:	22 60       	ori	r18, 0x02	; 2
    1718:	62 2e       	mov	r6, r18
    171a:	2c 2f       	mov	r18, r28
    171c:	28 70       	andi	r18, 0x08	; 8
    171e:	c2 ff       	sbrs	r28, 2
    1720:	05 c0       	rjmp	.+10     	; 0x172c <strtod+0x106>
    1722:	21 11       	cpse	r18, r1
    1724:	27 c0       	rjmp	.+78     	; 0x1774 <strtod+0x14e>
    1726:	0f 5f       	subi	r16, 0xFF	; 255
    1728:	1f 4f       	sbci	r17, 0xFF	; 255
    172a:	24 c0       	rjmp	.+72     	; 0x1774 <strtod+0x14e>
    172c:	22 23       	and	r18, r18
    172e:	11 f0       	breq	.+4      	; 0x1734 <strtod+0x10e>
    1730:	01 50       	subi	r16, 0x01	; 1
    1732:	11 09       	sbc	r17, r1
    1734:	a5 e0       	ldi	r26, 0x05	; 5
    1736:	b0 e0       	ldi	r27, 0x00	; 0
    1738:	9b 01       	movw	r18, r22
    173a:	ac 01       	movw	r20, r24
    173c:	c9 d1       	rcall	.+914    	; 0x1ad0 <__muluhisi3>
    173e:	4b 01       	movw	r8, r22
    1740:	5c 01       	movw	r10, r24
    1742:	88 0c       	add	r8, r8
    1744:	99 1c       	adc	r9, r9
    1746:	aa 1c       	adc	r10, r10
    1748:	bb 1c       	adc	r11, r11
    174a:	c5 01       	movw	r24, r10
    174c:	b4 01       	movw	r22, r8
    174e:	6d 0f       	add	r22, r29
    1750:	71 1d       	adc	r23, r1
    1752:	81 1d       	adc	r24, r1
    1754:	91 1d       	adc	r25, r1
    1756:	68 39       	cpi	r22, 0x98	; 152
    1758:	a9 e9       	ldi	r26, 0x99	; 153
    175a:	7a 07       	cpc	r23, r26
    175c:	8a 07       	cpc	r24, r26
    175e:	a9 e1       	ldi	r26, 0x19	; 25
    1760:	9a 07       	cpc	r25, r26
    1762:	40 f0       	brcs	.+16     	; 0x1774 <strtod+0x14e>
    1764:	c6 60       	ori	r28, 0x06	; 6
    1766:	05 c0       	rjmp	.+10     	; 0x1772 <strtod+0x14c>
    1768:	de 3f       	cpi	r29, 0xFE	; 254
    176a:	51 f4       	brne	.+20     	; 0x1780 <strtod+0x15a>
    176c:	c3 fd       	sbrc	r28, 3
    176e:	44 c0       	rjmp	.+136    	; 0x17f8 <strtod+0x1d2>
    1770:	c8 60       	ori	r28, 0x08	; 8
    1772:	6c 2e       	mov	r6, r28
    1774:	bf ef       	ldi	r27, 0xFF	; 255
    1776:	cb 1a       	sub	r12, r27
    1778:	db 0a       	sbc	r13, r27
    177a:	70 80       	ld	r7, Z
    177c:	c6 2d       	mov	r28, r6
    177e:	c5 cf       	rjmp	.-118    	; 0x170a <strtod+0xe4>
    1780:	2d 2f       	mov	r18, r29
    1782:	2f 7d       	andi	r18, 0xDF	; 223
    1784:	25 31       	cpi	r18, 0x15	; 21
    1786:	c1 f5       	brne	.+112    	; 0x17f8 <strtod+0x1d2>
    1788:	40 81       	ld	r20, Z
    178a:	4d 32       	cpi	r20, 0x2D	; 45
    178c:	11 f4       	brne	.+4      	; 0x1792 <strtod+0x16c>
    178e:	c0 61       	ori	r28, 0x10	; 16
    1790:	06 c0       	rjmp	.+12     	; 0x179e <strtod+0x178>
    1792:	4b 32       	cpi	r20, 0x2B	; 43
    1794:	21 f0       	breq	.+8      	; 0x179e <strtod+0x178>
    1796:	31 96       	adiw	r30, 0x01	; 1
    1798:	21 e0       	ldi	r18, 0x01	; 1
    179a:	30 e0       	ldi	r19, 0x00	; 0
    179c:	06 c0       	rjmp	.+12     	; 0x17aa <strtod+0x184>
    179e:	32 96       	adiw	r30, 0x02	; 2
    17a0:	d6 01       	movw	r26, r12
    17a2:	11 96       	adiw	r26, 0x01	; 1
    17a4:	4c 91       	ld	r20, X
    17a6:	22 e0       	ldi	r18, 0x02	; 2
    17a8:	30 e0       	ldi	r19, 0x00	; 0
    17aa:	a0 ed       	ldi	r26, 0xD0	; 208
    17ac:	a4 0f       	add	r26, r20
    17ae:	aa 30       	cpi	r26, 0x0A	; 10
    17b0:	18 f0       	brcs	.+6      	; 0x17b8 <strtod+0x192>
    17b2:	e2 1b       	sub	r30, r18
    17b4:	f3 0b       	sbc	r31, r19
    17b6:	20 c0       	rjmp	.+64     	; 0x17f8 <strtod+0x1d2>
    17b8:	40 e0       	ldi	r20, 0x00	; 0
    17ba:	50 e0       	ldi	r21, 0x00	; 0
    17bc:	40 38       	cpi	r20, 0x80	; 128
    17be:	bc e0       	ldi	r27, 0x0C	; 12
    17c0:	5b 07       	cpc	r21, r27
    17c2:	5c f4       	brge	.+22     	; 0x17da <strtod+0x1b4>
    17c4:	9a 01       	movw	r18, r20
    17c6:	22 0f       	add	r18, r18
    17c8:	33 1f       	adc	r19, r19
    17ca:	22 0f       	add	r18, r18
    17cc:	33 1f       	adc	r19, r19
    17ce:	42 0f       	add	r20, r18
    17d0:	53 1f       	adc	r21, r19
    17d2:	44 0f       	add	r20, r20
    17d4:	55 1f       	adc	r21, r21
    17d6:	4a 0f       	add	r20, r26
    17d8:	51 1d       	adc	r21, r1
    17da:	31 96       	adiw	r30, 0x01	; 1
    17dc:	df 01       	movw	r26, r30
    17de:	11 97       	sbiw	r26, 0x01	; 1
    17e0:	2c 91       	ld	r18, X
    17e2:	a0 ed       	ldi	r26, 0xD0	; 208
    17e4:	a2 0f       	add	r26, r18
    17e6:	aa 30       	cpi	r26, 0x0A	; 10
    17e8:	48 f3       	brcs	.-46     	; 0x17bc <strtod+0x196>
    17ea:	c4 ff       	sbrs	r28, 4
    17ec:	03 c0       	rjmp	.+6      	; 0x17f4 <strtod+0x1ce>
    17ee:	51 95       	neg	r21
    17f0:	41 95       	neg	r20
    17f2:	51 09       	sbc	r21, r1
    17f4:	04 0f       	add	r16, r20
    17f6:	15 1f       	adc	r17, r21
    17f8:	c1 ff       	sbrs	r28, 1
    17fa:	07 c0       	rjmp	.+14     	; 0x180a <strtod+0x1e4>
    17fc:	e1 14       	cp	r14, r1
    17fe:	f1 04       	cpc	r15, r1
    1800:	21 f0       	breq	.+8      	; 0x180a <strtod+0x1e4>
    1802:	31 97       	sbiw	r30, 0x01	; 1
    1804:	d7 01       	movw	r26, r14
    1806:	ed 93       	st	X+, r30
    1808:	fc 93       	st	X, r31
    180a:	ee d9       	rcall	.-3108   	; 0xbe8 <__floatunsisf>
    180c:	c3 70       	andi	r28, 0x03	; 3
    180e:	c3 30       	cpi	r28, 0x03	; 3
    1810:	19 f0       	breq	.+6      	; 0x1818 <strtod+0x1f2>
    1812:	6b 01       	movw	r12, r22
    1814:	7c 01       	movw	r14, r24
    1816:	06 c0       	rjmp	.+12     	; 0x1824 <strtod+0x1fe>
    1818:	6b 01       	movw	r12, r22
    181a:	7c 01       	movw	r14, r24
    181c:	f7 fa       	bst	r15, 7
    181e:	f0 94       	com	r15
    1820:	f7 f8       	bld	r15, 7
    1822:	f0 94       	com	r15
    1824:	20 e0       	ldi	r18, 0x00	; 0
    1826:	30 e0       	ldi	r19, 0x00	; 0
    1828:	a9 01       	movw	r20, r18
    182a:	c7 01       	movw	r24, r14
    182c:	b6 01       	movw	r22, r12
    182e:	2d d1       	rcall	.+602    	; 0x1a8a <__cmpsf2>
    1830:	88 23       	and	r24, r24
    1832:	09 f4       	brne	.+2      	; 0x1836 <strtod+0x210>
    1834:	43 c0       	rjmp	.+134    	; 0x18bc <strtod+0x296>
    1836:	17 ff       	sbrs	r17, 7
    1838:	06 c0       	rjmp	.+12     	; 0x1846 <strtod+0x220>
    183a:	11 95       	neg	r17
    183c:	01 95       	neg	r16
    183e:	11 09       	sbc	r17, r1
    1840:	cb ea       	ldi	r28, 0xAB	; 171
    1842:	d0 e0       	ldi	r29, 0x00	; 0
    1844:	02 c0       	rjmp	.+4      	; 0x184a <strtod+0x224>
    1846:	c3 ec       	ldi	r28, 0xC3	; 195
    1848:	d0 e0       	ldi	r29, 0x00	; 0
    184a:	5e 01       	movw	r10, r28
    184c:	b8 e1       	ldi	r27, 0x18	; 24
    184e:	ab 1a       	sub	r10, r27
    1850:	b1 08       	sbc	r11, r1
    1852:	46 01       	movw	r8, r12
    1854:	be 2d       	mov	r27, r14
    1856:	af 2d       	mov	r26, r15
    1858:	90 e2       	ldi	r25, 0x20	; 32
    185a:	e9 2e       	mov	r14, r25
    185c:	f1 2c       	mov	r15, r1
    185e:	0e 15       	cp	r16, r14
    1860:	1f 05       	cpc	r17, r15
    1862:	7c f0       	brlt	.+30     	; 0x1882 <strtod+0x25c>
    1864:	fe 01       	movw	r30, r28
    1866:	25 91       	lpm	r18, Z+
    1868:	35 91       	lpm	r19, Z+
    186a:	45 91       	lpm	r20, Z+
    186c:	54 91       	lpm	r21, Z
    186e:	b4 01       	movw	r22, r8
    1870:	8b 2f       	mov	r24, r27
    1872:	9a 2f       	mov	r25, r26
    1874:	47 da       	rcall	.-2930   	; 0xd04 <__mulsf3>
    1876:	4b 01       	movw	r8, r22
    1878:	b8 2f       	mov	r27, r24
    187a:	a9 2f       	mov	r26, r25
    187c:	0e 19       	sub	r16, r14
    187e:	1f 09       	sbc	r17, r15
    1880:	ee cf       	rjmp	.-36     	; 0x185e <strtod+0x238>
    1882:	24 97       	sbiw	r28, 0x04	; 4
    1884:	f5 94       	asr	r15
    1886:	e7 94       	ror	r14
    1888:	ca 15       	cp	r28, r10
    188a:	db 05       	cpc	r29, r11
    188c:	41 f7       	brne	.-48     	; 0x185e <strtod+0x238>
    188e:	64 01       	movw	r12, r8
    1890:	eb 2e       	mov	r14, r27
    1892:	fa 2e       	mov	r15, r26
    1894:	8e 2d       	mov	r24, r14
    1896:	88 0f       	add	r24, r24
    1898:	8f 2d       	mov	r24, r15
    189a:	88 1f       	adc	r24, r24
    189c:	8f 3f       	cpi	r24, 0xFF	; 255
    189e:	41 f0       	breq	.+16     	; 0x18b0 <strtod+0x28a>
    18a0:	20 e0       	ldi	r18, 0x00	; 0
    18a2:	30 e0       	ldi	r19, 0x00	; 0
    18a4:	a9 01       	movw	r20, r18
    18a6:	c7 01       	movw	r24, r14
    18a8:	b6 01       	movw	r22, r12
    18aa:	ef d0       	rcall	.+478    	; 0x1a8a <__cmpsf2>
    18ac:	81 11       	cpse	r24, r1
    18ae:	06 c0       	rjmp	.+12     	; 0x18bc <strtod+0x296>
    18b0:	82 e2       	ldi	r24, 0x22	; 34
    18b2:	90 e0       	ldi	r25, 0x00	; 0
    18b4:	90 93 6f 02 	sts	0x026F, r25	; 0x80026f <errno+0x1>
    18b8:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <errno>
    18bc:	c7 01       	movw	r24, r14
    18be:	b6 01       	movw	r22, r12
    18c0:	09 c0       	rjmp	.+18     	; 0x18d4 <strtod+0x2ae>
    18c2:	60 e0       	ldi	r22, 0x00	; 0
    18c4:	70 e0       	ldi	r23, 0x00	; 0
    18c6:	80 e8       	ldi	r24, 0x80	; 128
    18c8:	9f ef       	ldi	r25, 0xFF	; 255
    18ca:	04 c0       	rjmp	.+8      	; 0x18d4 <strtod+0x2ae>
    18cc:	60 e0       	ldi	r22, 0x00	; 0
    18ce:	70 e0       	ldi	r23, 0x00	; 0
    18d0:	80 ec       	ldi	r24, 0xC0	; 192
    18d2:	9f e7       	ldi	r25, 0x7F	; 127
    18d4:	df 91       	pop	r29
    18d6:	cf 91       	pop	r28
    18d8:	1f 91       	pop	r17
    18da:	0f 91       	pop	r16
    18dc:	ff 90       	pop	r15
    18de:	ef 90       	pop	r14
    18e0:	df 90       	pop	r13
    18e2:	cf 90       	pop	r12
    18e4:	bf 90       	pop	r11
    18e6:	af 90       	pop	r10
    18e8:	9f 90       	pop	r9
    18ea:	8f 90       	pop	r8
    18ec:	7f 90       	pop	r7
    18ee:	6f 90       	pop	r6
    18f0:	08 95       	ret

000018f2 <isspace>:
    18f2:	91 11       	cpse	r25, r1
    18f4:	ce c0       	rjmp	.+412    	; 0x1a92 <__ctype_isfalse>
    18f6:	80 32       	cpi	r24, 0x20	; 32
    18f8:	19 f0       	breq	.+6      	; 0x1900 <isspace+0xe>
    18fa:	89 50       	subi	r24, 0x09	; 9
    18fc:	85 50       	subi	r24, 0x05	; 5
    18fe:	d0 f7       	brcc	.-12     	; 0x18f4 <isspace+0x2>
    1900:	08 95       	ret

00001902 <strncasecmp_P>:
    1902:	fb 01       	movw	r30, r22
    1904:	dc 01       	movw	r26, r24
    1906:	41 50       	subi	r20, 0x01	; 1
    1908:	50 40       	sbci	r21, 0x00	; 0
    190a:	88 f0       	brcs	.+34     	; 0x192e <strncasecmp_P+0x2c>
    190c:	8d 91       	ld	r24, X+
    190e:	81 34       	cpi	r24, 0x41	; 65
    1910:	1c f0       	brlt	.+6      	; 0x1918 <strncasecmp_P+0x16>
    1912:	8b 35       	cpi	r24, 0x5B	; 91
    1914:	0c f4       	brge	.+2      	; 0x1918 <strncasecmp_P+0x16>
    1916:	80 5e       	subi	r24, 0xE0	; 224
    1918:	65 91       	lpm	r22, Z+
    191a:	61 34       	cpi	r22, 0x41	; 65
    191c:	1c f0       	brlt	.+6      	; 0x1924 <strncasecmp_P+0x22>
    191e:	6b 35       	cpi	r22, 0x5B	; 91
    1920:	0c f4       	brge	.+2      	; 0x1924 <strncasecmp_P+0x22>
    1922:	60 5e       	subi	r22, 0xE0	; 224
    1924:	86 1b       	sub	r24, r22
    1926:	61 11       	cpse	r22, r1
    1928:	71 f3       	breq	.-36     	; 0x1906 <strncasecmp_P+0x4>
    192a:	99 0b       	sbc	r25, r25
    192c:	08 95       	ret
    192e:	88 1b       	sub	r24, r24
    1930:	fc cf       	rjmp	.-8      	; 0x192a <strncasecmp_P+0x28>

00001932 <strnlen_P>:
    1932:	fc 01       	movw	r30, r24
    1934:	05 90       	lpm	r0, Z+
    1936:	61 50       	subi	r22, 0x01	; 1
    1938:	70 40       	sbci	r23, 0x00	; 0
    193a:	01 10       	cpse	r0, r1
    193c:	d8 f7       	brcc	.-10     	; 0x1934 <strnlen_P+0x2>
    193e:	80 95       	com	r24
    1940:	90 95       	com	r25
    1942:	8e 0f       	add	r24, r30
    1944:	9f 1f       	adc	r25, r31
    1946:	08 95       	ret

00001948 <strnlen>:
    1948:	fc 01       	movw	r30, r24
    194a:	61 50       	subi	r22, 0x01	; 1
    194c:	70 40       	sbci	r23, 0x00	; 0
    194e:	01 90       	ld	r0, Z+
    1950:	01 10       	cpse	r0, r1
    1952:	d8 f7       	brcc	.-10     	; 0x194a <strnlen+0x2>
    1954:	80 95       	com	r24
    1956:	90 95       	com	r25
    1958:	8e 0f       	add	r24, r30
    195a:	9f 1f       	adc	r25, r31
    195c:	08 95       	ret

0000195e <fputc>:
    195e:	0f 93       	push	r16
    1960:	1f 93       	push	r17
    1962:	cf 93       	push	r28
    1964:	df 93       	push	r29
    1966:	fb 01       	movw	r30, r22
    1968:	23 81       	ldd	r18, Z+3	; 0x03
    196a:	21 fd       	sbrc	r18, 1
    196c:	03 c0       	rjmp	.+6      	; 0x1974 <fputc+0x16>
    196e:	8f ef       	ldi	r24, 0xFF	; 255
    1970:	9f ef       	ldi	r25, 0xFF	; 255
    1972:	28 c0       	rjmp	.+80     	; 0x19c4 <fputc+0x66>
    1974:	22 ff       	sbrs	r18, 2
    1976:	16 c0       	rjmp	.+44     	; 0x19a4 <fputc+0x46>
    1978:	46 81       	ldd	r20, Z+6	; 0x06
    197a:	57 81       	ldd	r21, Z+7	; 0x07
    197c:	24 81       	ldd	r18, Z+4	; 0x04
    197e:	35 81       	ldd	r19, Z+5	; 0x05
    1980:	42 17       	cp	r20, r18
    1982:	53 07       	cpc	r21, r19
    1984:	44 f4       	brge	.+16     	; 0x1996 <fputc+0x38>
    1986:	a0 81       	ld	r26, Z
    1988:	b1 81       	ldd	r27, Z+1	; 0x01
    198a:	9d 01       	movw	r18, r26
    198c:	2f 5f       	subi	r18, 0xFF	; 255
    198e:	3f 4f       	sbci	r19, 0xFF	; 255
    1990:	31 83       	std	Z+1, r19	; 0x01
    1992:	20 83       	st	Z, r18
    1994:	8c 93       	st	X, r24
    1996:	26 81       	ldd	r18, Z+6	; 0x06
    1998:	37 81       	ldd	r19, Z+7	; 0x07
    199a:	2f 5f       	subi	r18, 0xFF	; 255
    199c:	3f 4f       	sbci	r19, 0xFF	; 255
    199e:	37 83       	std	Z+7, r19	; 0x07
    19a0:	26 83       	std	Z+6, r18	; 0x06
    19a2:	10 c0       	rjmp	.+32     	; 0x19c4 <fputc+0x66>
    19a4:	eb 01       	movw	r28, r22
    19a6:	09 2f       	mov	r16, r25
    19a8:	18 2f       	mov	r17, r24
    19aa:	00 84       	ldd	r0, Z+8	; 0x08
    19ac:	f1 85       	ldd	r31, Z+9	; 0x09
    19ae:	e0 2d       	mov	r30, r0
    19b0:	09 95       	icall
    19b2:	89 2b       	or	r24, r25
    19b4:	e1 f6       	brne	.-72     	; 0x196e <fputc+0x10>
    19b6:	8e 81       	ldd	r24, Y+6	; 0x06
    19b8:	9f 81       	ldd	r25, Y+7	; 0x07
    19ba:	01 96       	adiw	r24, 0x01	; 1
    19bc:	9f 83       	std	Y+7, r25	; 0x07
    19be:	8e 83       	std	Y+6, r24	; 0x06
    19c0:	81 2f       	mov	r24, r17
    19c2:	90 2f       	mov	r25, r16
    19c4:	df 91       	pop	r29
    19c6:	cf 91       	pop	r28
    19c8:	1f 91       	pop	r17
    19ca:	0f 91       	pop	r16
    19cc:	08 95       	ret

000019ce <__ultoa_invert>:
    19ce:	fa 01       	movw	r30, r20
    19d0:	aa 27       	eor	r26, r26
    19d2:	28 30       	cpi	r18, 0x08	; 8
    19d4:	51 f1       	breq	.+84     	; 0x1a2a <__ultoa_invert+0x5c>
    19d6:	20 31       	cpi	r18, 0x10	; 16
    19d8:	81 f1       	breq	.+96     	; 0x1a3a <__ultoa_invert+0x6c>
    19da:	e8 94       	clt
    19dc:	6f 93       	push	r22
    19de:	6e 7f       	andi	r22, 0xFE	; 254
    19e0:	6e 5f       	subi	r22, 0xFE	; 254
    19e2:	7f 4f       	sbci	r23, 0xFF	; 255
    19e4:	8f 4f       	sbci	r24, 0xFF	; 255
    19e6:	9f 4f       	sbci	r25, 0xFF	; 255
    19e8:	af 4f       	sbci	r26, 0xFF	; 255
    19ea:	b1 e0       	ldi	r27, 0x01	; 1
    19ec:	3e d0       	rcall	.+124    	; 0x1a6a <__ultoa_invert+0x9c>
    19ee:	b4 e0       	ldi	r27, 0x04	; 4
    19f0:	3c d0       	rcall	.+120    	; 0x1a6a <__ultoa_invert+0x9c>
    19f2:	67 0f       	add	r22, r23
    19f4:	78 1f       	adc	r23, r24
    19f6:	89 1f       	adc	r24, r25
    19f8:	9a 1f       	adc	r25, r26
    19fa:	a1 1d       	adc	r26, r1
    19fc:	68 0f       	add	r22, r24
    19fe:	79 1f       	adc	r23, r25
    1a00:	8a 1f       	adc	r24, r26
    1a02:	91 1d       	adc	r25, r1
    1a04:	a1 1d       	adc	r26, r1
    1a06:	6a 0f       	add	r22, r26
    1a08:	71 1d       	adc	r23, r1
    1a0a:	81 1d       	adc	r24, r1
    1a0c:	91 1d       	adc	r25, r1
    1a0e:	a1 1d       	adc	r26, r1
    1a10:	20 d0       	rcall	.+64     	; 0x1a52 <__ultoa_invert+0x84>
    1a12:	09 f4       	brne	.+2      	; 0x1a16 <__ultoa_invert+0x48>
    1a14:	68 94       	set
    1a16:	3f 91       	pop	r19
    1a18:	2a e0       	ldi	r18, 0x0A	; 10
    1a1a:	26 9f       	mul	r18, r22
    1a1c:	11 24       	eor	r1, r1
    1a1e:	30 19       	sub	r19, r0
    1a20:	30 5d       	subi	r19, 0xD0	; 208
    1a22:	31 93       	st	Z+, r19
    1a24:	de f6       	brtc	.-74     	; 0x19dc <__ultoa_invert+0xe>
    1a26:	cf 01       	movw	r24, r30
    1a28:	08 95       	ret
    1a2a:	46 2f       	mov	r20, r22
    1a2c:	47 70       	andi	r20, 0x07	; 7
    1a2e:	40 5d       	subi	r20, 0xD0	; 208
    1a30:	41 93       	st	Z+, r20
    1a32:	b3 e0       	ldi	r27, 0x03	; 3
    1a34:	0f d0       	rcall	.+30     	; 0x1a54 <__ultoa_invert+0x86>
    1a36:	c9 f7       	brne	.-14     	; 0x1a2a <__ultoa_invert+0x5c>
    1a38:	f6 cf       	rjmp	.-20     	; 0x1a26 <__ultoa_invert+0x58>
    1a3a:	46 2f       	mov	r20, r22
    1a3c:	4f 70       	andi	r20, 0x0F	; 15
    1a3e:	40 5d       	subi	r20, 0xD0	; 208
    1a40:	4a 33       	cpi	r20, 0x3A	; 58
    1a42:	18 f0       	brcs	.+6      	; 0x1a4a <__ultoa_invert+0x7c>
    1a44:	49 5d       	subi	r20, 0xD9	; 217
    1a46:	31 fd       	sbrc	r19, 1
    1a48:	40 52       	subi	r20, 0x20	; 32
    1a4a:	41 93       	st	Z+, r20
    1a4c:	02 d0       	rcall	.+4      	; 0x1a52 <__ultoa_invert+0x84>
    1a4e:	a9 f7       	brne	.-22     	; 0x1a3a <__ultoa_invert+0x6c>
    1a50:	ea cf       	rjmp	.-44     	; 0x1a26 <__ultoa_invert+0x58>
    1a52:	b4 e0       	ldi	r27, 0x04	; 4
    1a54:	a6 95       	lsr	r26
    1a56:	97 95       	ror	r25
    1a58:	87 95       	ror	r24
    1a5a:	77 95       	ror	r23
    1a5c:	67 95       	ror	r22
    1a5e:	ba 95       	dec	r27
    1a60:	c9 f7       	brne	.-14     	; 0x1a54 <__ultoa_invert+0x86>
    1a62:	00 97       	sbiw	r24, 0x00	; 0
    1a64:	61 05       	cpc	r22, r1
    1a66:	71 05       	cpc	r23, r1
    1a68:	08 95       	ret
    1a6a:	9b 01       	movw	r18, r22
    1a6c:	ac 01       	movw	r20, r24
    1a6e:	0a 2e       	mov	r0, r26
    1a70:	06 94       	lsr	r0
    1a72:	57 95       	ror	r21
    1a74:	47 95       	ror	r20
    1a76:	37 95       	ror	r19
    1a78:	27 95       	ror	r18
    1a7a:	ba 95       	dec	r27
    1a7c:	c9 f7       	brne	.-14     	; 0x1a70 <__ultoa_invert+0xa2>
    1a7e:	62 0f       	add	r22, r18
    1a80:	73 1f       	adc	r23, r19
    1a82:	84 1f       	adc	r24, r20
    1a84:	95 1f       	adc	r25, r21
    1a86:	a0 1d       	adc	r26, r0
    1a88:	08 95       	ret

00001a8a <__cmpsf2>:
    1a8a:	9f d9       	rcall	.-3266   	; 0xdca <__fp_cmp>
    1a8c:	08 f4       	brcc	.+2      	; 0x1a90 <__cmpsf2+0x6>
    1a8e:	81 e0       	ldi	r24, 0x01	; 1
    1a90:	08 95       	ret

00001a92 <__ctype_isfalse>:
    1a92:	99 27       	eor	r25, r25
    1a94:	88 27       	eor	r24, r24

00001a96 <__ctype_istrue>:
    1a96:	08 95       	ret

00001a98 <__divmodsi4>:
    1a98:	05 2e       	mov	r0, r21
    1a9a:	97 fb       	bst	r25, 7
    1a9c:	16 f4       	brtc	.+4      	; 0x1aa2 <__divmodsi4+0xa>
    1a9e:	00 94       	com	r0
    1aa0:	0f d0       	rcall	.+30     	; 0x1ac0 <__negsi2>
    1aa2:	57 fd       	sbrc	r21, 7
    1aa4:	05 d0       	rcall	.+10     	; 0x1ab0 <__divmodsi4_neg2>
    1aa6:	b5 d9       	rcall	.-3222   	; 0xe12 <__udivmodsi4>
    1aa8:	07 fc       	sbrc	r0, 7
    1aaa:	02 d0       	rcall	.+4      	; 0x1ab0 <__divmodsi4_neg2>
    1aac:	46 f4       	brtc	.+16     	; 0x1abe <__divmodsi4_exit>
    1aae:	08 c0       	rjmp	.+16     	; 0x1ac0 <__negsi2>

00001ab0 <__divmodsi4_neg2>:
    1ab0:	50 95       	com	r21
    1ab2:	40 95       	com	r20
    1ab4:	30 95       	com	r19
    1ab6:	21 95       	neg	r18
    1ab8:	3f 4f       	sbci	r19, 0xFF	; 255
    1aba:	4f 4f       	sbci	r20, 0xFF	; 255
    1abc:	5f 4f       	sbci	r21, 0xFF	; 255

00001abe <__divmodsi4_exit>:
    1abe:	08 95       	ret

00001ac0 <__negsi2>:
    1ac0:	90 95       	com	r25
    1ac2:	80 95       	com	r24
    1ac4:	70 95       	com	r23
    1ac6:	61 95       	neg	r22
    1ac8:	7f 4f       	sbci	r23, 0xFF	; 255
    1aca:	8f 4f       	sbci	r24, 0xFF	; 255
    1acc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ace:	08 95       	ret

00001ad0 <__muluhisi3>:
    1ad0:	0f d0       	rcall	.+30     	; 0x1af0 <__umulhisi3>
    1ad2:	a5 9f       	mul	r26, r21
    1ad4:	90 0d       	add	r25, r0
    1ad6:	b4 9f       	mul	r27, r20
    1ad8:	90 0d       	add	r25, r0
    1ada:	a4 9f       	mul	r26, r20
    1adc:	80 0d       	add	r24, r0
    1ade:	91 1d       	adc	r25, r1
    1ae0:	11 24       	eor	r1, r1
    1ae2:	08 95       	ret

00001ae4 <__mulshisi3>:
    1ae4:	b7 ff       	sbrs	r27, 7
    1ae6:	f4 cf       	rjmp	.-24     	; 0x1ad0 <__muluhisi3>

00001ae8 <__mulohisi3>:
    1ae8:	f3 df       	rcall	.-26     	; 0x1ad0 <__muluhisi3>
    1aea:	82 1b       	sub	r24, r18
    1aec:	93 0b       	sbc	r25, r19
    1aee:	08 95       	ret

00001af0 <__umulhisi3>:
    1af0:	a2 9f       	mul	r26, r18
    1af2:	b0 01       	movw	r22, r0
    1af4:	b3 9f       	mul	r27, r19
    1af6:	c0 01       	movw	r24, r0
    1af8:	a3 9f       	mul	r26, r19
    1afa:	70 0d       	add	r23, r0
    1afc:	81 1d       	adc	r24, r1
    1afe:	11 24       	eor	r1, r1
    1b00:	91 1d       	adc	r25, r1
    1b02:	b2 9f       	mul	r27, r18
    1b04:	70 0d       	add	r23, r0
    1b06:	81 1d       	adc	r24, r1
    1b08:	11 24       	eor	r1, r1
    1b0a:	91 1d       	adc	r25, r1
    1b0c:	08 95       	ret

00001b0e <_exit>:
    1b0e:	f8 94       	cli

00001b10 <__stop_program>:
    1b10:	ff cf       	rjmp	.-2      	; 0x1b10 <__stop_program>

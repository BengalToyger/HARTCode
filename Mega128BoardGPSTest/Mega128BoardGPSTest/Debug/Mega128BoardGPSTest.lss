
Mega128BoardGPSTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000c2  00800100  0000196a  000019fe  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000196a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000010d  008001c2  008001c2  00001ac0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001ac0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001b1c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000110  00000000  00000000  00001b58  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001f37  00000000  00000000  00001c68  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d9a  00000000  00000000  00003b9f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c14  00000000  00000000  00004939  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000003b8  00000000  00000000  00005550  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000719  00000000  00000000  00005908  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000106f  00000000  00000000  00006021  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000d0  00000000  00000000  00007090  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	63 c0       	rjmp	.+198    	; 0xc8 <__ctors_end>
       2:	00 00       	nop
       4:	7f c0       	rjmp	.+254    	; 0x104 <__bad_interrupt>
       6:	00 00       	nop
       8:	7d c0       	rjmp	.+250    	; 0x104 <__bad_interrupt>
       a:	00 00       	nop
       c:	7b c0       	rjmp	.+246    	; 0x104 <__bad_interrupt>
       e:	00 00       	nop
      10:	79 c0       	rjmp	.+242    	; 0x104 <__bad_interrupt>
      12:	00 00       	nop
      14:	77 c0       	rjmp	.+238    	; 0x104 <__bad_interrupt>
      16:	00 00       	nop
      18:	75 c0       	rjmp	.+234    	; 0x104 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	73 c0       	rjmp	.+230    	; 0x104 <__bad_interrupt>
      1e:	00 00       	nop
      20:	71 c0       	rjmp	.+226    	; 0x104 <__bad_interrupt>
      22:	00 00       	nop
      24:	6f c0       	rjmp	.+222    	; 0x104 <__bad_interrupt>
      26:	00 00       	nop
      28:	6d c0       	rjmp	.+218    	; 0x104 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	6b c0       	rjmp	.+214    	; 0x104 <__bad_interrupt>
      2e:	00 00       	nop
      30:	69 c0       	rjmp	.+210    	; 0x104 <__bad_interrupt>
      32:	00 00       	nop
      34:	67 c0       	rjmp	.+206    	; 0x104 <__bad_interrupt>
      36:	00 00       	nop
      38:	65 c0       	rjmp	.+202    	; 0x104 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	63 c0       	rjmp	.+198    	; 0x104 <__bad_interrupt>
      3e:	00 00       	nop
      40:	61 c0       	rjmp	.+194    	; 0x104 <__bad_interrupt>
      42:	00 00       	nop
      44:	5f c0       	rjmp	.+190    	; 0x104 <__bad_interrupt>
      46:	00 00       	nop
      48:	73 c0       	rjmp	.+230    	; 0x130 <__vector_18>
      4a:	00 00       	nop
      4c:	5b c0       	rjmp	.+182    	; 0x104 <__bad_interrupt>
      4e:	00 00       	nop
      50:	59 c0       	rjmp	.+178    	; 0x104 <__bad_interrupt>
      52:	00 00       	nop
      54:	57 c0       	rjmp	.+174    	; 0x104 <__bad_interrupt>
      56:	00 00       	nop
      58:	55 c0       	rjmp	.+170    	; 0x104 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	53 c0       	rjmp	.+166    	; 0x104 <__bad_interrupt>
      5e:	00 00       	nop
      60:	51 c0       	rjmp	.+162    	; 0x104 <__bad_interrupt>
      62:	00 00       	nop
      64:	4f c0       	rjmp	.+158    	; 0x104 <__bad_interrupt>
      66:	00 00       	nop
      68:	4d c0       	rjmp	.+154    	; 0x104 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	4b c0       	rjmp	.+150    	; 0x104 <__bad_interrupt>
      6e:	00 00       	nop
      70:	49 c0       	rjmp	.+146    	; 0x104 <__bad_interrupt>
      72:	00 00       	nop
      74:	47 c0       	rjmp	.+142    	; 0x104 <__bad_interrupt>
      76:	00 00       	nop
      78:	45 c0       	rjmp	.+138    	; 0x104 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	43 c0       	rjmp	.+134    	; 0x104 <__bad_interrupt>
      7e:	00 00       	nop
      80:	41 c0       	rjmp	.+130    	; 0x104 <__bad_interrupt>
      82:	00 00       	nop
      84:	3f c0       	rjmp	.+126    	; 0x104 <__bad_interrupt>
      86:	00 00       	nop
      88:	3d c0       	rjmp	.+122    	; 0x104 <__bad_interrupt>
	...

0000008c <__trampolines_end>:
      8c:	4e 41       	sbci	r20, 0x1E	; 30
      8e:	4e 49       	Address 0x0000008e is out of bounds.
.word	0xffff	; ????

0000008f <pstr_inity>:
      8f:	49 4e 49 54 59                                      INITY

00000094 <pstr_inf>:
      94:	49 4e 46                                            INF

00000097 <pwr_m10>:
      97:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
      a7:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

000000af <pwr_p10>:
      af:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
      bf:	ca 1b 0e 5a ae c5 9d 74 00                          ...Z...t.

000000c8 <__ctors_end>:
      c8:	11 24       	eor	r1, r1
      ca:	1f be       	out	0x3f, r1	; 63
      cc:	cf ef       	ldi	r28, 0xFF	; 255
      ce:	d0 e1       	ldi	r29, 0x10	; 16
      d0:	de bf       	out	0x3e, r29	; 62
      d2:	cd bf       	out	0x3d, r28	; 61

000000d4 <__do_copy_data>:
      d4:	11 e0       	ldi	r17, 0x01	; 1
      d6:	a0 e0       	ldi	r26, 0x00	; 0
      d8:	b1 e0       	ldi	r27, 0x01	; 1
      da:	ea e6       	ldi	r30, 0x6A	; 106
      dc:	f9 e1       	ldi	r31, 0x19	; 25
      de:	00 e0       	ldi	r16, 0x00	; 0
      e0:	0b bf       	out	0x3b, r16	; 59
      e2:	02 c0       	rjmp	.+4      	; 0xe8 <__do_copy_data+0x14>
      e4:	07 90       	elpm	r0, Z+
      e6:	0d 92       	st	X+, r0
      e8:	a2 3c       	cpi	r26, 0xC2	; 194
      ea:	b1 07       	cpc	r27, r17
      ec:	d9 f7       	brne	.-10     	; 0xe4 <__do_copy_data+0x10>

000000ee <__do_clear_bss>:
      ee:	22 e0       	ldi	r18, 0x02	; 2
      f0:	a2 ec       	ldi	r26, 0xC2	; 194
      f2:	b1 e0       	ldi	r27, 0x01	; 1
      f4:	01 c0       	rjmp	.+2      	; 0xf8 <.do_clear_bss_start>

000000f6 <.do_clear_bss_loop>:
      f6:	1d 92       	st	X+, r1

000000f8 <.do_clear_bss_start>:
      f8:	af 3c       	cpi	r26, 0xCF	; 207
      fa:	b2 07       	cpc	r27, r18
      fc:	e1 f7       	brne	.-8      	; 0xf6 <.do_clear_bss_loop>
      fe:	16 d0       	rcall	.+44     	; 0x12c <main>
     100:	0c 94 b3 0c 	jmp	0x1966	; 0x1966 <_exit>

00000104 <__bad_interrupt>:
     104:	7d cf       	rjmp	.-262    	; 0x0 <__vectors>

00000106 <time>:
     106:	fc 01       	movw	r30, r24
     108:	0f b6       	in	r0, 0x3f	; 63
     10a:	f8 94       	cli
     10c:	60 91 c9 02 	lds	r22, 0x02C9	; 0x8002c9 <__system_time>
     110:	70 91 ca 02 	lds	r23, 0x02CA	; 0x8002ca <__system_time+0x1>
     114:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <__system_time+0x2>
     118:	90 91 cc 02 	lds	r25, 0x02CC	; 0x8002cc <__system_time+0x3>
     11c:	0f be       	out	0x3f, r0	; 63
     11e:	30 97       	sbiw	r30, 0x00	; 0
     120:	21 f0       	breq	.+8      	; 0x12a <time+0x24>
     122:	60 83       	st	Z, r22
     124:	71 83       	std	Z+1, r23	; 0x01
     126:	82 83       	std	Z+2, r24	; 0x02
     128:	93 83       	std	Z+3, r25	; 0x03
     12a:	08 95       	ret

0000012c <main>:
#include <avr/interrupt.h>

int main(void)
{
	#ifdef DOUNITTEST
	beginUnitTest();
     12c:	07 d3       	rcall	.+1550   	; 0x73c <beginUnitTest>
	#endif

	while(1){};
     12e:	ff cf       	rjmp	.-2      	; 0x12e <main+0x2>

00000130 <__vector_18>:
	} else if (!checkPUBX(packet)){
		return 0;	
	} else {
		return 1;
	}
}
     130:	1f 92       	push	r1
     132:	0f 92       	push	r0
     134:	0f b6       	in	r0, 0x3f	; 63
     136:	0f 92       	push	r0
     138:	11 24       	eor	r1, r1
     13a:	0b b6       	in	r0, 0x3b	; 59
     13c:	0f 92       	push	r0
     13e:	2f 93       	push	r18
     140:	8f 93       	push	r24
     142:	9f 93       	push	r25
     144:	ef 93       	push	r30
     146:	ff 93       	push	r31
     148:	8c b1       	in	r24, 0x0c	; 12
     14a:	28 b3       	in	r18, 0x18	; 24
     14c:	91 e0       	ldi	r25, 0x01	; 1
     14e:	92 27       	eor	r25, r18
     150:	98 bb       	out	0x18, r25	; 24
     152:	8c b9       	out	0x0c, r24	; 12
     154:	84 32       	cpi	r24, 0x24	; 36
     156:	b1 f4       	brne	.+44     	; 0x184 <__vector_18+0x54>
     158:	90 91 c2 02 	lds	r25, 0x02C2	; 0x8002c2 <msgEndFlag>
     15c:	91 11       	cpse	r25, r1
     15e:	42 c0       	rjmp	.+132    	; 0x1e4 <__vector_18+0xb4>
     160:	81 e0       	ldi	r24, 0x01	; 1
     162:	80 93 c3 02 	sts	0x02C3, r24	; 0x8002c3 <msgBeginFlag>
     166:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <msgIndex>
     16a:	e0 91 c4 02 	lds	r30, 0x02C4	; 0x8002c4 <msgIndex>
     16e:	f0 e0       	ldi	r31, 0x00	; 0
     170:	ee 53       	subi	r30, 0x3E	; 62
     172:	fe 4f       	sbci	r31, 0xFE	; 254
     174:	84 e2       	ldi	r24, 0x24	; 36
     176:	80 83       	st	Z, r24
     178:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <msgIndex>
     17c:	8f 5f       	subi	r24, 0xFF	; 255
     17e:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <msgIndex>
     182:	3f c0       	rjmp	.+126    	; 0x202 <__vector_18+0xd2>
     184:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <msgBeginFlag>
     188:	99 23       	and	r25, r25
     18a:	91 f0       	breq	.+36     	; 0x1b0 <__vector_18+0x80>
     18c:	8a 32       	cpi	r24, 0x2A	; 42
     18e:	79 f1       	breq	.+94     	; 0x1ee <__vector_18+0xbe>
     190:	90 91 c2 02 	lds	r25, 0x02C2	; 0x8002c2 <msgEndFlag>
     194:	91 11       	cpse	r25, r1
     196:	30 c0       	rjmp	.+96     	; 0x1f8 <__vector_18+0xc8>
     198:	e0 91 c4 02 	lds	r30, 0x02C4	; 0x8002c4 <msgIndex>
     19c:	f0 e0       	ldi	r31, 0x00	; 0
     19e:	ee 53       	subi	r30, 0x3E	; 62
     1a0:	fe 4f       	sbci	r31, 0xFE	; 254
     1a2:	80 83       	st	Z, r24
     1a4:	80 91 c4 02 	lds	r24, 0x02C4	; 0x8002c4 <msgIndex>
     1a8:	8f 5f       	subi	r24, 0xFF	; 255
     1aa:	80 93 c4 02 	sts	0x02C4, r24	; 0x8002c4 <msgIndex>
     1ae:	29 c0       	rjmp	.+82     	; 0x202 <__vector_18+0xd2>
     1b0:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <msgBeginFlag>
     1b4:	99 23       	and	r25, r25
     1b6:	29 f1       	breq	.+74     	; 0x202 <__vector_18+0xd2>
     1b8:	8a 32       	cpi	r24, 0x2A	; 42
     1ba:	19 f5       	brne	.+70     	; 0x202 <__vector_18+0xd2>
     1bc:	80 91 c2 02 	lds	r24, 0x02C2	; 0x8002c2 <msgEndFlag>
     1c0:	81 11       	cpse	r24, r1
     1c2:	1f c0       	rjmp	.+62     	; 0x202 <__vector_18+0xd2>
     1c4:	e0 91 c4 02 	lds	r30, 0x02C4	; 0x8002c4 <msgIndex>
     1c8:	f0 e0       	ldi	r31, 0x00	; 0
     1ca:	ee 53       	subi	r30, 0x3E	; 62
     1cc:	fe 4f       	sbci	r31, 0xFE	; 254
     1ce:	8a e2       	ldi	r24, 0x2A	; 42
     1d0:	80 83       	st	Z, r24
     1d2:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <msgIndex>
     1d6:	81 e0       	ldi	r24, 0x01	; 1
     1d8:	80 93 c2 02 	sts	0x02C2, r24	; 0x8002c2 <msgEndFlag>
     1dc:	10 92 c3 02 	sts	0x02C3, r1	; 0x8002c3 <msgBeginFlag>
     1e0:	f8 94       	cli
     1e2:	0f c0       	rjmp	.+30     	; 0x202 <__vector_18+0xd2>
     1e4:	90 91 c3 02 	lds	r25, 0x02C3	; 0x8002c3 <msgBeginFlag>
     1e8:	91 11       	cpse	r25, r1
     1ea:	d2 cf       	rjmp	.-92     	; 0x190 <__vector_18+0x60>
     1ec:	08 c0       	rjmp	.+16     	; 0x1fe <__vector_18+0xce>
     1ee:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <msgBeginFlag>
     1f2:	81 11       	cpse	r24, r1
     1f4:	e3 cf       	rjmp	.-58     	; 0x1bc <__vector_18+0x8c>
     1f6:	05 c0       	rjmp	.+10     	; 0x202 <__vector_18+0xd2>
     1f8:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <msgBeginFlag>
     1fc:	02 c0       	rjmp	.+4      	; 0x202 <__vector_18+0xd2>
     1fe:	80 91 c3 02 	lds	r24, 0x02C3	; 0x8002c3 <msgBeginFlag>
     202:	ff 91       	pop	r31
     204:	ef 91       	pop	r30
     206:	9f 91       	pop	r25
     208:	8f 91       	pop	r24
     20a:	2f 91       	pop	r18
     20c:	0f 90       	pop	r0
     20e:	0b be       	out	0x3b, r0	; 59
     210:	0f 90       	pop	r0
     212:	0f be       	out	0x3f, r0	; 63
     214:	0f 90       	pop	r0
     216:	1f 90       	pop	r1
     218:	18 95       	reti

0000021a <SendGPS>:
     21a:	ef 92       	push	r14
     21c:	ff 92       	push	r15
     21e:	1f 93       	push	r17
     220:	cf 93       	push	r28
     222:	df 93       	push	r29
     224:	1f 92       	push	r1
     226:	cd b7       	in	r28, 0x3d	; 61
     228:	de b7       	in	r29, 0x3e	; 62
     22a:	7c 01       	movw	r14, r24
     22c:	16 2f       	mov	r17, r22
     22e:	60 e0       	ldi	r22, 0x00	; 0
     230:	84 e2       	ldi	r24, 0x24	; 36
     232:	f6 d2       	rcall	.+1516   	; 0x820 <USARTTX>
     234:	19 82       	std	Y+1, r1	; 0x01
     236:	89 81       	ldd	r24, Y+1	; 0x01
     238:	81 17       	cp	r24, r17
     23a:	68 f4       	brcc	.+26     	; 0x256 <SendGPS+0x3c>
     23c:	99 81       	ldd	r25, Y+1	; 0x01
     23e:	f7 01       	movw	r30, r14
     240:	e9 0f       	add	r30, r25
     242:	f1 1d       	adc	r31, r1
     244:	60 e0       	ldi	r22, 0x00	; 0
     246:	80 81       	ld	r24, Z
     248:	eb d2       	rcall	.+1494   	; 0x820 <USARTTX>
     24a:	99 81       	ldd	r25, Y+1	; 0x01
     24c:	9f 5f       	subi	r25, 0xFF	; 255
     24e:	99 83       	std	Y+1, r25	; 0x01
     250:	99 81       	ldd	r25, Y+1	; 0x01
     252:	91 17       	cp	r25, r17
     254:	98 f3       	brcs	.-26     	; 0x23c <SendGPS+0x22>
     256:	60 e0       	ldi	r22, 0x00	; 0
     258:	8d e0       	ldi	r24, 0x0D	; 13
     25a:	e2 d2       	rcall	.+1476   	; 0x820 <USARTTX>
     25c:	60 e0       	ldi	r22, 0x00	; 0
     25e:	8a e0       	ldi	r24, 0x0A	; 10
     260:	df d2       	rcall	.+1470   	; 0x820 <USARTTX>
     262:	0f 90       	pop	r0
     264:	df 91       	pop	r29
     266:	cf 91       	pop	r28
     268:	1f 91       	pop	r17
     26a:	ff 90       	pop	r15
     26c:	ef 90       	pop	r14
     26e:	08 95       	ret

00000270 <CheckSum>:

// Calculates and writes the checksum for an outgoing packet
void CheckSum(char* packet){
     270:	0f 93       	push	r16
     272:	1f 93       	push	r17
     274:	cf 93       	push	r28
     276:	df 93       	push	r29
     278:	00 d0       	rcall	.+0      	; 0x27a <CheckSum+0xa>
     27a:	00 d0       	rcall	.+0      	; 0x27c <CheckSum+0xc>
     27c:	1f 92       	push	r1
     27e:	cd b7       	in	r28, 0x3d	; 61
     280:	de b7       	in	r29, 0x3e	; 62
     282:	8c 01       	movw	r16, r24
	uint8_t volatile i = 0;
     284:	19 82       	std	Y+1, r1	; 0x01
	uint8_t volatile checksum;
	char hexchar[3];
	while(!(packet[i] == '*')){
     286:	89 81       	ldd	r24, Y+1	; 0x01
     288:	f8 01       	movw	r30, r16
     28a:	e8 0f       	add	r30, r24
     28c:	f1 1d       	adc	r31, r1
     28e:	80 81       	ld	r24, Z
     290:	8a 32       	cpi	r24, 0x2A	; 42
     292:	91 f0       	breq	.+36     	; 0x2b8 <CheckSum+0x48>
		checksum ^= packet[i]; //XORs all the packet bytes together to get the checksum
     294:	99 81       	ldd	r25, Y+1	; 0x01
     296:	8a 81       	ldd	r24, Y+2	; 0x02
     298:	f8 01       	movw	r30, r16
     29a:	e9 0f       	add	r30, r25
     29c:	f1 1d       	adc	r31, r1
     29e:	90 81       	ld	r25, Z
     2a0:	98 27       	eor	r25, r24
     2a2:	9a 83       	std	Y+2, r25	; 0x02
		i++;
     2a4:	99 81       	ldd	r25, Y+1	; 0x01
     2a6:	9f 5f       	subi	r25, 0xFF	; 255
     2a8:	99 83       	std	Y+1, r25	; 0x01
// Calculates and writes the checksum for an outgoing packet
void CheckSum(char* packet){
	uint8_t volatile i = 0;
	uint8_t volatile checksum;
	char hexchar[3];
	while(!(packet[i] == '*')){
     2aa:	89 81       	ldd	r24, Y+1	; 0x01
     2ac:	f8 01       	movw	r30, r16
     2ae:	e8 0f       	add	r30, r24
     2b0:	f1 1d       	adc	r31, r1
     2b2:	80 81       	ld	r24, Z
     2b4:	8a 32       	cpi	r24, 0x2A	; 42
     2b6:	71 f7       	brne	.-36     	; 0x294 <CheckSum+0x24>
		checksum ^= packet[i]; //XORs all the packet bytes together to get the checksum
		i++;
	}
	sprintf(hexchar, "%02X", checksum);
     2b8:	8a 81       	ldd	r24, Y+2	; 0x02
     2ba:	1f 92       	push	r1
     2bc:	8f 93       	push	r24
     2be:	80 e3       	ldi	r24, 0x30	; 48
     2c0:	91 e0       	ldi	r25, 0x01	; 1
     2c2:	9f 93       	push	r25
     2c4:	8f 93       	push	r24
     2c6:	ce 01       	movw	r24, r28
     2c8:	03 96       	adiw	r24, 0x03	; 3
     2ca:	9f 93       	push	r25
     2cc:	8f 93       	push	r24
     2ce:	57 d6       	rcall	.+3246   	; 0xf7e <sprintf>
	i++;
     2d0:	89 81       	ldd	r24, Y+1	; 0x01
     2d2:	8f 5f       	subi	r24, 0xFF	; 255
     2d4:	89 83       	std	Y+1, r24	; 0x01
	packet[i] = hexchar[0];
     2d6:	89 81       	ldd	r24, Y+1	; 0x01
     2d8:	f8 01       	movw	r30, r16
     2da:	e8 0f       	add	r30, r24
     2dc:	f1 1d       	adc	r31, r1
     2de:	8b 81       	ldd	r24, Y+3	; 0x03
     2e0:	80 83       	st	Z, r24
	i++;
     2e2:	89 81       	ldd	r24, Y+1	; 0x01
     2e4:	8f 5f       	subi	r24, 0xFF	; 255
     2e6:	89 83       	std	Y+1, r24	; 0x01
	packet[i] = hexchar[1];
     2e8:	89 81       	ldd	r24, Y+1	; 0x01
     2ea:	f8 01       	movw	r30, r16
     2ec:	e8 0f       	add	r30, r24
     2ee:	f1 1d       	adc	r31, r1
     2f0:	8c 81       	ldd	r24, Y+4	; 0x04
     2f2:	80 83       	st	Z, r24
     2f4:	0f 90       	pop	r0
     2f6:	0f 90       	pop	r0
     2f8:	0f 90       	pop	r0
     2fa:	0f 90       	pop	r0
     2fc:	0f 90       	pop	r0
     2fe:	0f 90       	pop	r0
	return;
}
     300:	0f 90       	pop	r0
     302:	0f 90       	pop	r0
     304:	0f 90       	pop	r0
     306:	0f 90       	pop	r0
     308:	0f 90       	pop	r0
     30a:	df 91       	pop	r29
     30c:	cf 91       	pop	r28
     30e:	1f 91       	pop	r17
     310:	0f 91       	pop	r16
     312:	08 95       	ret

00000314 <PUBXCFGSetup>:
//	packet: The packet to be sent, consisting of the config message base. The message name gets modified.
//	msg: The particular identifier of the message to be turned off
// Returns:
//	Nothing

void PUBXCFGSetup(char* packet, char* msg){
     314:	cf 93       	push	r28
     316:	df 93       	push	r29
     318:	00 d0       	rcall	.+0      	; 0x31a <PUBXCFGSetup+0x6>
     31a:	cd b7       	in	r28, 0x3d	; 61
     31c:	de b7       	in	r29, 0x3e	; 62
     31e:	ac 01       	movw	r20, r24
	uint8_t volatile i = MSGSTT; //Sets up the configure message to turn off all the messages we don't want.
     320:	88 e0       	ldi	r24, 0x08	; 8
     322:	89 83       	std	Y+1, r24	; 0x01
	uint8_t volatile j = 0; //Takes the message name
     324:	1a 82       	std	Y+2, r1	; 0x02
	for (i; i < MSGEND; i++){
     326:	89 81       	ldd	r24, Y+1	; 0x01
     328:	89 81       	ldd	r24, Y+1	; 0x01
     32a:	8b 30       	cpi	r24, 0x0B	; 11
     32c:	98 f4       	brcc	.+38     	; 0x354 <PUBXCFGSetup+0x40>
		packet[i] = msg[j];
     32e:	29 81       	ldd	r18, Y+1	; 0x01
     330:	9a 81       	ldd	r25, Y+2	; 0x02
     332:	fb 01       	movw	r30, r22
     334:	e9 0f       	add	r30, r25
     336:	f1 1d       	adc	r31, r1
     338:	90 81       	ld	r25, Z
     33a:	fa 01       	movw	r30, r20
     33c:	e2 0f       	add	r30, r18
     33e:	f1 1d       	adc	r31, r1
     340:	90 83       	st	Z, r25
		j++;
     342:	9a 81       	ldd	r25, Y+2	; 0x02
     344:	9f 5f       	subi	r25, 0xFF	; 255
     346:	9a 83       	std	Y+2, r25	; 0x02
//	Nothing

void PUBXCFGSetup(char* packet, char* msg){
	uint8_t volatile i = MSGSTT; //Sets up the configure message to turn off all the messages we don't want.
	uint8_t volatile j = 0; //Takes the message name
	for (i; i < MSGEND; i++){
     348:	99 81       	ldd	r25, Y+1	; 0x01
     34a:	9f 5f       	subi	r25, 0xFF	; 255
     34c:	99 83       	std	Y+1, r25	; 0x01
     34e:	99 81       	ldd	r25, Y+1	; 0x01
     350:	9b 30       	cpi	r25, 0x0B	; 11
     352:	68 f3       	brcs	.-38     	; 0x32e <PUBXCFGSetup+0x1a>
		packet[i] = msg[j];
		j++;
	}
	CheckSum(packet);
     354:	ca 01       	movw	r24, r20
     356:	8c df       	rcall	.-232    	; 0x270 <CheckSum>
	return;
}
     358:	0f 90       	pop	r0
     35a:	0f 90       	pop	r0
     35c:	df 91       	pop	r29
     35e:	cf 91       	pop	r28
     360:	08 95       	ret

00000362 <InitGPS>:
		return;
	}
}

//Use RATE (PUBX,40)
uint16_t InitGPS(void){
     362:	cf 93       	push	r28
     364:	df 93       	push	r29
     366:	cd b7       	in	r28, 0x3d	; 61
     368:	de b7       	in	r29, 0x3e	; 62
     36a:	6c 97       	sbiw	r28, 0x1c	; 28
     36c:	0f b6       	in	r0, 0x3f	; 63
     36e:	f8 94       	cli
     370:	de bf       	out	0x3e, r29	; 62
     372:	0f be       	out	0x3f, r0	; 63
     374:	cd bf       	out	0x3d, r28	; 61
	uint16_t volatile SetUBRR; //Turns off all the messages we don't want
	msgIndex = 0;
     376:	10 92 c4 02 	sts	0x02C4, r1	; 0x8002c4 <msgIndex>
	msgBeginFlag = 0;
     37a:	10 92 c3 02 	sts	0x02C3, r1	; 0x8002c3 <msgBeginFlag>
	msgEndFlag = 0;
     37e:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <msgEndFlag>
	char CFGMSG[CFGMSGSIZE] = PUBXNOCOMMCFGMSGBASE;
     382:	8a e1       	ldi	r24, 0x1A	; 26
     384:	ea e0       	ldi	r30, 0x0A	; 10
     386:	f1 e0       	ldi	r31, 0x01	; 1
     388:	de 01       	movw	r26, r28
     38a:	13 96       	adiw	r26, 0x03	; 3
     38c:	01 90       	ld	r0, Z+
     38e:	0d 92       	st	X+, r0
     390:	8a 95       	dec	r24
     392:	e1 f7       	brne	.-8      	; 0x38c <InitGPS+0x2a>
	SetUBRR = InitUSART(GPSBAUD, GPSPORT);
     394:	40 e0       	ldi	r20, 0x00	; 0
     396:	60 e8       	ldi	r22, 0x80	; 128
     398:	75 e2       	ldi	r23, 0x25	; 37
     39a:	80 e0       	ldi	r24, 0x00	; 0
     39c:	90 e0       	ldi	r25, 0x00	; 0
     39e:	20 d2       	rcall	.+1088   	; 0x7e0 <InitUSART>
     3a0:	9a 83       	std	Y+2, r25	; 0x02
     3a2:	89 83       	std	Y+1, r24	; 0x01
	if (SetUBRR){
     3a4:	89 81       	ldd	r24, Y+1	; 0x01
     3a6:	9a 81       	ldd	r25, Y+2	; 0x02
     3a8:	00 97       	sbiw	r24, 0x00	; 0
     3aa:	09 f4       	brne	.+2      	; 0x3ae <InitGPS+0x4c>
     3ac:	5d c0       	rjmp	.+186    	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     3ae:	2f ef       	ldi	r18, 0xFF	; 255
     3b0:	87 ea       	ldi	r24, 0xA7	; 167
     3b2:	91 e6       	ldi	r25, 0x61	; 97
     3b4:	21 50       	subi	r18, 0x01	; 1
     3b6:	80 40       	sbci	r24, 0x00	; 0
     3b8:	90 40       	sbci	r25, 0x00	; 0
     3ba:	e1 f7       	brne	.-8      	; 0x3b4 <InitGPS+0x52>
     3bc:	00 c0       	rjmp	.+0      	; 0x3be <InitGPS+0x5c>
     3be:	00 00       	nop
		_delay_ms(2000);
		PUBXCFGSetup(CFGMSG, "GLL");
     3c0:	65 e3       	ldi	r22, 0x35	; 53
     3c2:	71 e0       	ldi	r23, 0x01	; 1
     3c4:	ce 01       	movw	r24, r28
     3c6:	03 96       	adiw	r24, 0x03	; 3
     3c8:	a5 df       	rcall	.-182    	; 0x314 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     3ca:	6a e1       	ldi	r22, 0x1A	; 26
     3cc:	ce 01       	movw	r24, r28
     3ce:	03 96       	adiw	r24, 0x03	; 3
     3d0:	24 df       	rcall	.-440    	; 0x21a <SendGPS>
     3d2:	2f ef       	ldi	r18, 0xFF	; 255
     3d4:	85 ea       	ldi	r24, 0xA5	; 165
     3d6:	9e e0       	ldi	r25, 0x0E	; 14
     3d8:	21 50       	subi	r18, 0x01	; 1
     3da:	80 40       	sbci	r24, 0x00	; 0
     3dc:	90 40       	sbci	r25, 0x00	; 0
     3de:	e1 f7       	brne	.-8      	; 0x3d8 <InitGPS+0x76>
     3e0:	00 c0       	rjmp	.+0      	; 0x3e2 <InitGPS+0x80>
     3e2:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "GSA");
     3e4:	69 e3       	ldi	r22, 0x39	; 57
     3e6:	71 e0       	ldi	r23, 0x01	; 1
     3e8:	ce 01       	movw	r24, r28
     3ea:	03 96       	adiw	r24, 0x03	; 3
     3ec:	93 df       	rcall	.-218    	; 0x314 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     3ee:	6a e1       	ldi	r22, 0x1A	; 26
     3f0:	ce 01       	movw	r24, r28
     3f2:	03 96       	adiw	r24, 0x03	; 3
     3f4:	12 df       	rcall	.-476    	; 0x21a <SendGPS>
     3f6:	2f ef       	ldi	r18, 0xFF	; 255
     3f8:	85 ea       	ldi	r24, 0xA5	; 165
     3fa:	9e e0       	ldi	r25, 0x0E	; 14
     3fc:	21 50       	subi	r18, 0x01	; 1
     3fe:	80 40       	sbci	r24, 0x00	; 0
     400:	90 40       	sbci	r25, 0x00	; 0
     402:	e1 f7       	brne	.-8      	; 0x3fc <InitGPS+0x9a>
     404:	00 c0       	rjmp	.+0      	; 0x406 <__LOCK_REGION_LENGTH__+0x6>
     406:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "GSV");
     408:	6d e3       	ldi	r22, 0x3D	; 61
     40a:	71 e0       	ldi	r23, 0x01	; 1
     40c:	ce 01       	movw	r24, r28
     40e:	03 96       	adiw	r24, 0x03	; 3
     410:	81 df       	rcall	.-254    	; 0x314 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     412:	6a e1       	ldi	r22, 0x1A	; 26
     414:	ce 01       	movw	r24, r28
     416:	03 96       	adiw	r24, 0x03	; 3
     418:	00 df       	rcall	.-512    	; 0x21a <SendGPS>
     41a:	2f ef       	ldi	r18, 0xFF	; 255
     41c:	85 ea       	ldi	r24, 0xA5	; 165
     41e:	9e e0       	ldi	r25, 0x0E	; 14
     420:	21 50       	subi	r18, 0x01	; 1
     422:	80 40       	sbci	r24, 0x00	; 0
     424:	90 40       	sbci	r25, 0x00	; 0
     426:	e1 f7       	brne	.-8      	; 0x420 <__LOCK_REGION_LENGTH__+0x20>
     428:	00 c0       	rjmp	.+0      	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
     42a:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "RMC");
     42c:	61 e4       	ldi	r22, 0x41	; 65
     42e:	71 e0       	ldi	r23, 0x01	; 1
     430:	ce 01       	movw	r24, r28
     432:	03 96       	adiw	r24, 0x03	; 3
     434:	6f df       	rcall	.-290    	; 0x314 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     436:	6a e1       	ldi	r22, 0x1A	; 26
     438:	ce 01       	movw	r24, r28
     43a:	03 96       	adiw	r24, 0x03	; 3
     43c:	ee de       	rcall	.-548    	; 0x21a <SendGPS>
     43e:	2f ef       	ldi	r18, 0xFF	; 255
     440:	85 ea       	ldi	r24, 0xA5	; 165
     442:	9e e0       	ldi	r25, 0x0E	; 14
     444:	21 50       	subi	r18, 0x01	; 1
     446:	80 40       	sbci	r24, 0x00	; 0
     448:	90 40       	sbci	r25, 0x00	; 0
     44a:	e1 f7       	brne	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
     44c:	00 c0       	rjmp	.+0      	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
     44e:	00 00       	nop
		_delay_ms(300);
		PUBXCFGSetup(CFGMSG, "VTG");
     450:	65 e4       	ldi	r22, 0x45	; 69
     452:	71 e0       	ldi	r23, 0x01	; 1
     454:	ce 01       	movw	r24, r28
     456:	03 96       	adiw	r24, 0x03	; 3
     458:	5d df       	rcall	.-326    	; 0x314 <PUBXCFGSetup>
		SendGPS(CFGMSG, CFGMSGSIZE);
     45a:	6a e1       	ldi	r22, 0x1A	; 26
     45c:	ce 01       	movw	r24, r28
     45e:	03 96       	adiw	r24, 0x03	; 3
     460:	dc de       	rcall	.-584    	; 0x21a <SendGPS>
		sei();
     462:	78 94       	sei
		return SetUBRR;
     464:	89 81       	ldd	r24, Y+1	; 0x01
     466:	9a 81       	ldd	r25, Y+2	; 0x02
	} else {
		return 0;
	}
}
     468:	6c 96       	adiw	r28, 0x1c	; 28
     46a:	0f b6       	in	r0, 0x3f	; 63
     46c:	f8 94       	cli
     46e:	de bf       	out	0x3e, r29	; 62
     470:	0f be       	out	0x3f, r0	; 63
     472:	cd bf       	out	0x3d, r28	; 61
     474:	df 91       	pop	r29
     476:	cf 91       	pop	r28
     478:	08 95       	ret

0000047a <parseDegreesMinutes>:
}

// Parses a string in the format: DDMM.MMMMMMM, where DD is degrees, and MM is minutes.
// degLength is the length of the degrees part. For example, degLength of 3 means
// the string will be DDDMM.MMMMMMM.
float parseDegreesMinutes(char *s, int degLength) {
     47a:	af 92       	push	r10
     47c:	bf 92       	push	r11
     47e:	cf 92       	push	r12
     480:	df 92       	push	r13
     482:	ef 92       	push	r14
     484:	ff 92       	push	r15
     486:	0f 93       	push	r16
     488:	1f 93       	push	r17
     48a:	cf 93       	push	r28
     48c:	df 93       	push	r29
     48e:	cd b7       	in	r28, 0x3d	; 61
     490:	de b7       	in	r29, 0x3e	; 62
     492:	28 97       	sbiw	r28, 0x08	; 8
     494:	0f b6       	in	r0, 0x3f	; 63
     496:	f8 94       	cli
     498:	de bf       	out	0x3e, r29	; 62
     49a:	0f be       	out	0x3f, r0	; 63
     49c:	cd bf       	out	0x3d, r28	; 61
     49e:	6c 01       	movw	r12, r24
     4a0:	8b 01       	movw	r16, r22
	degrees = atof(degreesString);
	// Convert the minutes
	minutes = atof(s + degLength);
	// Convert the minutes to decimal degrees
	return degrees + (minutes / 60);
}
     4a2:	ad b6       	in	r10, 0x3d	; 61
     4a4:	be b6       	in	r11, 0x3e	; 62

// Parses a string in the format: DDMM.MMMMMMM, where DD is degrees, and MM is minutes.
// degLength is the length of the degrees part. For example, degLength of 3 means
// the string will be DDDMM.MMMMMMM.
float parseDegreesMinutes(char *s, int degLength) {
	char degreesString[degLength + 1];
     4a6:	cb 01       	movw	r24, r22
     4a8:	01 96       	adiw	r24, 0x01	; 1
     4aa:	2d b7       	in	r18, 0x3d	; 61
     4ac:	3e b7       	in	r19, 0x3e	; 62
     4ae:	28 1b       	sub	r18, r24
     4b0:	39 0b       	sbc	r19, r25
     4b2:	0f b6       	in	r0, 0x3f	; 63
     4b4:	f8 94       	cli
     4b6:	3e bf       	out	0x3e, r19	; 62
     4b8:	0f be       	out	0x3f, r0	; 63
     4ba:	2d bf       	out	0x3d, r18	; 61
     4bc:	8d b7       	in	r24, 0x3d	; 61
     4be:	9e b7       	in	r25, 0x3e	; 62
     4c0:	01 96       	adiw	r24, 0x01	; 1
     4c2:	7c 01       	movw	r14, r24
	float volatile degrees;
	float volatile minutes;
	// Copy the degrees part into degreesString and convert it to a float
	strncpy(degreesString, s, degLength);
     4c4:	ab 01       	movw	r20, r22
     4c6:	b6 01       	movw	r22, r12
     4c8:	33 d5       	rcall	.+2662   	; 0xf30 <strncpy>
	degreesString[degLength] = '\0';
     4ca:	f7 01       	movw	r30, r14
     4cc:	e0 0f       	add	r30, r16
     4ce:	f1 1f       	adc	r31, r17
     4d0:	10 82       	st	Z, r1
	degrees = atof(degreesString);
     4d2:	c7 01       	movw	r24, r14
     4d4:	0b d5       	rcall	.+2582   	; 0xeec <atof>
     4d6:	69 83       	std	Y+1, r22	; 0x01
     4d8:	7a 83       	std	Y+2, r23	; 0x02
     4da:	8b 83       	std	Y+3, r24	; 0x03
     4dc:	9c 83       	std	Y+4, r25	; 0x04
	// Convert the minutes
	minutes = atof(s + degLength);
     4de:	c6 01       	movw	r24, r12
     4e0:	80 0f       	add	r24, r16
     4e2:	91 1f       	adc	r25, r17
     4e4:	03 d5       	rcall	.+2566   	; 0xeec <atof>
     4e6:	6d 83       	std	Y+5, r22	; 0x05
     4e8:	7e 83       	std	Y+6, r23	; 0x06
     4ea:	8f 83       	std	Y+7, r24	; 0x07
     4ec:	98 87       	std	Y+8, r25	; 0x08
	// Convert the minutes to decimal degrees
	return degrees + (minutes / 60);
     4ee:	6d 81       	ldd	r22, Y+5	; 0x05
     4f0:	7e 81       	ldd	r23, Y+6	; 0x06
     4f2:	8f 81       	ldd	r24, Y+7	; 0x07
     4f4:	98 85       	ldd	r25, Y+8	; 0x08
     4f6:	c9 80       	ldd	r12, Y+1	; 0x01
     4f8:	da 80       	ldd	r13, Y+2	; 0x02
     4fa:	eb 80       	ldd	r14, Y+3	; 0x03
     4fc:	fc 80       	ldd	r15, Y+4	; 0x04
     4fe:	20 e0       	ldi	r18, 0x00	; 0
     500:	30 e0       	ldi	r19, 0x00	; 0
     502:	40 e7       	ldi	r20, 0x70	; 112
     504:	52 e4       	ldi	r21, 0x42	; 66
     506:	ff d1       	rcall	.+1022   	; 0x906 <__divsf3>
     508:	a7 01       	movw	r20, r14
     50a:	96 01       	movw	r18, r12
     50c:	98 d1       	rcall	.+816    	; 0x83e <__addsf3>
}
     50e:	0f b6       	in	r0, 0x3f	; 63
     510:	f8 94       	cli
     512:	be be       	out	0x3e, r11	; 62
     514:	0f be       	out	0x3f, r0	; 63
     516:	ad be       	out	0x3d, r10	; 61
     518:	28 96       	adiw	r28, 0x08	; 8
     51a:	0f b6       	in	r0, 0x3f	; 63
     51c:	f8 94       	cli
     51e:	de bf       	out	0x3e, r29	; 62
     520:	0f be       	out	0x3f, r0	; 63
     522:	cd bf       	out	0x3d, r28	; 61
     524:	df 91       	pop	r29
     526:	cf 91       	pop	r28
     528:	1f 91       	pop	r17
     52a:	0f 91       	pop	r16
     52c:	ff 90       	pop	r15
     52e:	ef 90       	pop	r14
     530:	df 90       	pop	r13
     532:	cf 90       	pop	r12
     534:	bf 90       	pop	r11
     536:	af 90       	pop	r10
     538:	08 95       	ret

0000053a <parseGGA>:
// Parameters:
//		packet:		the GGA message string
//		GPSdata:	the struct that accepts the final calculated data
// Returns:
//		Nothing
void parseGGA(char *packet, struct GPSStruct *GPSdata) {
     53a:	ef 92       	push	r14
     53c:	ff 92       	push	r15
     53e:	0f 93       	push	r16
     540:	1f 93       	push	r17
     542:	cf 93       	push	r28
     544:	df 93       	push	r29
     546:	00 d0       	rcall	.+0      	; 0x548 <parseGGA+0xe>
     548:	cd b7       	in	r28, 0x3d	; 61
     54a:	de b7       	in	r29, 0x3e	; 62
     54c:	8b 01       	movw	r16, r22
	char *packetCopy = strdup(packet);
     54e:	d1 d4       	rcall	.+2466   	; 0xef2 <strdup>
     550:	7c 01       	movw	r14, r24
     552:	9a 83       	std	Y+2, r25	; 0x02
     554:	89 83       	std	Y+1, r24	; 0x01
	char *msgPart = packetCopy;
	int i;
	
	// Skip the xxGGA and time fields
	for(i = 0; i < 2; i++) {
		strsep(&packetCopy, ",");
     556:	69 e4       	ldi	r22, 0x49	; 73
     558:	71 e0       	ldi	r23, 0x01	; 1
     55a:	ce 01       	movw	r24, r28
     55c:	01 96       	adiw	r24, 0x01	; 1
     55e:	f7 d4       	rcall	.+2542   	; 0xf4e <strsep>
     560:	69 e4       	ldi	r22, 0x49	; 73
     562:	71 e0       	ldi	r23, 0x01	; 1
     564:	ce 01       	movw	r24, r28
     566:	01 96       	adiw	r24, 0x01	; 1
     568:	f2 d4       	rcall	.+2532   	; 0xf4e <strsep>
	}
	
	// get the latitude
	msgPart = strsep(&packetCopy, ",");
     56a:	69 e4       	ldi	r22, 0x49	; 73
     56c:	71 e0       	ldi	r23, 0x01	; 1
     56e:	ce 01       	movw	r24, r28
     570:	01 96       	adiw	r24, 0x01	; 1
     572:	ed d4       	rcall	.+2522   	; 0xf4e <strsep>
	GPSdata->latitude = parseDegreesMinutes(msgPart, 2);
     574:	62 e0       	ldi	r22, 0x02	; 2
     576:	70 e0       	ldi	r23, 0x00	; 0
     578:	80 df       	rcall	.-256    	; 0x47a <parseDegreesMinutes>
     57a:	f8 01       	movw	r30, r16
     57c:	62 83       	std	Z+2, r22	; 0x02
     57e:	73 83       	std	Z+3, r23	; 0x03
     580:	84 83       	std	Z+4, r24	; 0x04
     582:	95 83       	std	Z+5, r25	; 0x05
	// get the N/S component of the latitude. If it's 'S', then make the latitude negative
	msgPart = strsep(&packetCopy, ",");
     584:	69 e4       	ldi	r22, 0x49	; 73
     586:	71 e0       	ldi	r23, 0x01	; 1
     588:	ce 01       	movw	r24, r28
     58a:	01 96       	adiw	r24, 0x01	; 1
     58c:	e0 d4       	rcall	.+2496   	; 0xf4e <strsep>
	if(*msgPart == 'S') {
     58e:	fc 01       	movw	r30, r24
     590:	80 81       	ld	r24, Z
     592:	83 35       	cpi	r24, 0x53	; 83
     594:	51 f4       	brne	.+20     	; 0x5aa <parseGGA+0x70>
		GPSdata->latitude = -GPSdata->latitude;
     596:	f8 01       	movw	r30, r16
     598:	82 81       	ldd	r24, Z+2	; 0x02
     59a:	93 81       	ldd	r25, Z+3	; 0x03
     59c:	a4 81       	ldd	r26, Z+4	; 0x04
     59e:	b5 81       	ldd	r27, Z+5	; 0x05
     5a0:	b0 58       	subi	r27, 0x80	; 128
     5a2:	82 83       	std	Z+2, r24	; 0x02
     5a4:	93 83       	std	Z+3, r25	; 0x03
     5a6:	a4 83       	std	Z+4, r26	; 0x04
     5a8:	b5 83       	std	Z+5, r27	; 0x05
	}
	
	// get the longitude
	msgPart = strsep(&packetCopy, ",");
     5aa:	69 e4       	ldi	r22, 0x49	; 73
     5ac:	71 e0       	ldi	r23, 0x01	; 1
     5ae:	ce 01       	movw	r24, r28
     5b0:	01 96       	adiw	r24, 0x01	; 1
     5b2:	cd d4       	rcall	.+2458   	; 0xf4e <strsep>
	GPSdata->longitude = parseDegreesMinutes(msgPart, 3);
     5b4:	63 e0       	ldi	r22, 0x03	; 3
     5b6:	70 e0       	ldi	r23, 0x00	; 0
     5b8:	60 df       	rcall	.-320    	; 0x47a <parseDegreesMinutes>
     5ba:	f8 01       	movw	r30, r16
     5bc:	66 83       	std	Z+6, r22	; 0x06
     5be:	77 83       	std	Z+7, r23	; 0x07
     5c0:	80 87       	std	Z+8, r24	; 0x08
     5c2:	91 87       	std	Z+9, r25	; 0x09
	// get the E/W component of the longitude. If it's 'W', then make the longitude negative
	msgPart = strsep(&packetCopy, ",");
     5c4:	69 e4       	ldi	r22, 0x49	; 73
     5c6:	71 e0       	ldi	r23, 0x01	; 1
     5c8:	ce 01       	movw	r24, r28
     5ca:	01 96       	adiw	r24, 0x01	; 1
     5cc:	c0 d4       	rcall	.+2432   	; 0xf4e <strsep>
	if(*msgPart == 'W') {
     5ce:	fc 01       	movw	r30, r24
     5d0:	80 81       	ld	r24, Z
     5d2:	87 35       	cpi	r24, 0x57	; 87
     5d4:	b9 f4       	brne	.+46     	; 0x604 <parseGGA+0xca>
		GPSdata->longitude = -GPSdata->longitude;
     5d6:	f8 01       	movw	r30, r16
     5d8:	86 81       	ldd	r24, Z+6	; 0x06
     5da:	97 81       	ldd	r25, Z+7	; 0x07
     5dc:	a0 85       	ldd	r26, Z+8	; 0x08
     5de:	b1 85       	ldd	r27, Z+9	; 0x09
     5e0:	b0 58       	subi	r27, 0x80	; 128
     5e2:	86 83       	std	Z+6, r24	; 0x06
     5e4:	97 83       	std	Z+7, r25	; 0x07
     5e6:	a0 87       	std	Z+8, r26	; 0x08
     5e8:	b1 87       	std	Z+9, r27	; 0x09
     5ea:	0c c0       	rjmp	.+24     	; 0x604 <parseGGA+0xca>
	}
	
	// Get the altitude. If there is no altitude, then set it to zero.
	msgPart = strsep(&packetCopy, ",");
	if(*msgPart != '\0') {
		GPSdata->GPSAltitude = atof(msgPart);
     5ec:	7f d4       	rcall	.+2302   	; 0xeec <atof>
     5ee:	f8 d1       	rcall	.+1008   	; 0x9e0 <__fixunssfsi>
     5f0:	f8 01       	movw	r30, r16
     5f2:	71 83       	std	Z+1, r23	; 0x01
     5f4:	60 83       	st	Z, r22
     5f6:	03 c0       	rjmp	.+6      	; 0x5fe <parseGGA+0xc4>
	} else {
		GPSdata->GPSAltitude = 0;
     5f8:	f8 01       	movw	r30, r16
     5fa:	11 82       	std	Z+1, r1	; 0x01
     5fc:	10 82       	st	Z, r1
	}
	
	free(originalPacketCopy);
     5fe:	c7 01       	movw	r24, r14
     600:	88 d3       	rcall	.+1808   	; 0xd12 <free>
     602:	19 c0       	rjmp	.+50     	; 0x636 <parseGGA+0xfc>
		GPSdata->longitude = -GPSdata->longitude;
	}
	
	// Skip the quality, numSV, and HDOP fields
	for(i = 0; i < 3; i++) {
		strsep(&packetCopy, ",");
     604:	69 e4       	ldi	r22, 0x49	; 73
     606:	71 e0       	ldi	r23, 0x01	; 1
     608:	ce 01       	movw	r24, r28
     60a:	01 96       	adiw	r24, 0x01	; 1
     60c:	a0 d4       	rcall	.+2368   	; 0xf4e <strsep>
     60e:	69 e4       	ldi	r22, 0x49	; 73
     610:	71 e0       	ldi	r23, 0x01	; 1
     612:	ce 01       	movw	r24, r28
     614:	01 96       	adiw	r24, 0x01	; 1
     616:	9b d4       	rcall	.+2358   	; 0xf4e <strsep>
     618:	69 e4       	ldi	r22, 0x49	; 73
     61a:	71 e0       	ldi	r23, 0x01	; 1
     61c:	ce 01       	movw	r24, r28
     61e:	01 96       	adiw	r24, 0x01	; 1
     620:	96 d4       	rcall	.+2348   	; 0xf4e <strsep>
	}
	
	// Get the altitude. If there is no altitude, then set it to zero.
	msgPart = strsep(&packetCopy, ",");
     622:	69 e4       	ldi	r22, 0x49	; 73
     624:	71 e0       	ldi	r23, 0x01	; 1
     626:	ce 01       	movw	r24, r28
     628:	01 96       	adiw	r24, 0x01	; 1
     62a:	91 d4       	rcall	.+2338   	; 0xf4e <strsep>
	if(*msgPart != '\0') {
     62c:	fc 01       	movw	r30, r24
     62e:	20 81       	ld	r18, Z
     630:	22 23       	and	r18, r18
     632:	11 f3       	breq	.-60     	; 0x5f8 <parseGGA+0xbe>
     634:	db cf       	rjmp	.-74     	; 0x5ec <parseGGA+0xb2>
		GPSdata->GPSAltitude = 0;
	}
	
	free(originalPacketCopy);
		
}
     636:	0f 90       	pop	r0
     638:	0f 90       	pop	r0
     63a:	df 91       	pop	r29
     63c:	cf 91       	pop	r28
     63e:	1f 91       	pop	r17
     640:	0f 91       	pop	r16
     642:	ff 90       	pop	r15
     644:	ef 90       	pop	r14
     646:	08 95       	ret

00000648 <getGPSData>:
// Parameters:
//		GPSdata:	Struct that accepts data
//	Returns:
//		Nothing
void getGPSData(struct GPSStruct *GPSdata){
	if (msgEndFlag){
     648:	20 91 c2 02 	lds	r18, 0x02C2	; 0x8002c2 <msgEndFlag>
     64c:	22 23       	and	r18, r18
     64e:	39 f0       	breq	.+14     	; 0x65e <getGPSData+0x16>
     650:	bc 01       	movw	r22, r24
		parseGGA(gpsBuffer, GPSdata);
     652:	82 ec       	ldi	r24, 0xC2	; 194
     654:	91 e0       	ldi	r25, 0x01	; 1
     656:	71 df       	rcall	.-286    	; 0x53a <parseGGA>
		msgEndFlag = 0;
     658:	10 92 c2 02 	sts	0x02C2, r1	; 0x8002c2 <msgEndFlag>
		sei();
     65c:	78 94       	sei
     65e:	08 95       	ret

00000660 <testGPSInterrupt>:
}

// This function should test the GPS interrupt and parsing ability.
// GPS packets should be sent from laptop over FTDI to the board
// and an evident signal should be sent back if the test passed.
void testGPSInterrupt(void){
     660:	cf 93       	push	r28
     662:	df 93       	push	r29
     664:	cd b7       	in	r28, 0x3d	; 61
     666:	de b7       	in	r29, 0x3e	; 62
     668:	2a 97       	sbiw	r28, 0x0a	; 10
     66a:	0f b6       	in	r0, 0x3f	; 63
     66c:	f8 94       	cli
     66e:	de bf       	out	0x3e, r29	; 62
     670:	0f be       	out	0x3f, r0	; 63
     672:	cd bf       	out	0x3d, r28	; 61
	struct GPSStruct gpsData;
	gpsData.GPSAltitude = 0;
     674:	1a 82       	std	Y+2, r1	; 0x02
     676:	19 82       	std	Y+1, r1	; 0x01
	gpsData.latitude = 0;
     678:	1b 82       	std	Y+3, r1	; 0x03
     67a:	1c 82       	std	Y+4, r1	; 0x04
     67c:	1d 82       	std	Y+5, r1	; 0x05
     67e:	1e 82       	std	Y+6, r1	; 0x06
	gpsData.longitude = 0;
     680:	1f 82       	std	Y+7, r1	; 0x07
     682:	18 86       	std	Y+8, r1	; 0x08
     684:	19 86       	std	Y+9, r1	; 0x09
     686:	1a 86       	std	Y+10, r1	; 0x0a
	DDRB = 255;
     688:	8f ef       	ldi	r24, 0xFF	; 255
     68a:	87 bb       	out	0x17, r24	; 23
	PORTB = 255;
     68c:	88 bb       	out	0x18, r24	; 24
     68e:	2f ef       	ldi	r18, 0xFF	; 255
     690:	89 e6       	ldi	r24, 0x69	; 105
     692:	98 e1       	ldi	r25, 0x18	; 24
     694:	21 50       	subi	r18, 0x01	; 1
     696:	80 40       	sbci	r24, 0x00	; 0
     698:	90 40       	sbci	r25, 0x00	; 0
     69a:	e1 f7       	brne	.-8      	; 0x694 <testGPSInterrupt+0x34>
     69c:	00 c0       	rjmp	.+0      	; 0x69e <testGPSInterrupt+0x3e>
     69e:	00 00       	nop
	_delay_ms(500);
	PORTB = 0;
     6a0:	18 ba       	out	0x18, r1	; 24
	InitGPS();
     6a2:	5f de       	rcall	.-834    	; 0x362 <InitGPS>
	while ((abs(gpsData.latitude - parseDegreesMinutes("4717.11399", 2)) > PARSE_DEGREES_MINUTES_TOLERANCE) && (abs(gpsData.longitude - parseDegreesMinutes("00833.91590", 3)) > PARSE_DEGREES_MINUTES_TOLERANCE)){
     6a4:	03 c0       	rjmp	.+6      	; 0x6ac <testGPSInterrupt+0x4c>
		getGPSData(&gpsData);
     6a6:	ce 01       	movw	r24, r28
     6a8:	01 96       	adiw	r24, 0x01	; 1
     6aa:	ce df       	rcall	.-100    	; 0x648 <getGPSData>
	DDRB = 255;
	PORTB = 255;
	_delay_ms(500);
	PORTB = 0;
	InitGPS();
	while ((abs(gpsData.latitude - parseDegreesMinutes("4717.11399", 2)) > PARSE_DEGREES_MINUTES_TOLERANCE) && (abs(gpsData.longitude - parseDegreesMinutes("00833.91590", 3)) > PARSE_DEGREES_MINUTES_TOLERANCE)){
     6ac:	cb 80       	ldd	r12, Y+3	; 0x03
     6ae:	dc 80       	ldd	r13, Y+4	; 0x04
     6b0:	ed 80       	ldd	r14, Y+5	; 0x05
     6b2:	fe 80       	ldd	r15, Y+6	; 0x06
     6b4:	62 e0       	ldi	r22, 0x02	; 2
     6b6:	70 e0       	ldi	r23, 0x00	; 0
     6b8:	8a ea       	ldi	r24, 0xAA	; 170
     6ba:	91 e0       	ldi	r25, 0x01	; 1
     6bc:	de de       	rcall	.-580    	; 0x47a <parseDegreesMinutes>
     6be:	9b 01       	movw	r18, r22
     6c0:	ac 01       	movw	r20, r24
     6c2:	c7 01       	movw	r24, r14
     6c4:	b6 01       	movw	r22, r12
     6c6:	ba d0       	rcall	.+372    	; 0x83c <__subsf3>
     6c8:	86 d1       	rcall	.+780    	; 0x9d6 <__fixsfsi>
     6ca:	9b 01       	movw	r18, r22
     6cc:	77 23       	and	r23, r23
     6ce:	24 f4       	brge	.+8      	; 0x6d8 <testGPSInterrupt+0x78>
     6d0:	22 27       	eor	r18, r18
     6d2:	33 27       	eor	r19, r19
     6d4:	26 1b       	sub	r18, r22
     6d6:	37 0b       	sbc	r19, r23
     6d8:	b9 01       	movw	r22, r18
     6da:	33 0f       	add	r19, r19
     6dc:	88 0b       	sbc	r24, r24
     6de:	99 0b       	sbc	r25, r25
     6e0:	ad d1       	rcall	.+858    	; 0xa3c <__floatsisf>
     6e2:	27 e1       	ldi	r18, 0x17	; 23
     6e4:	37 eb       	ldi	r19, 0xB7	; 183
     6e6:	41 ed       	ldi	r20, 0xD1	; 209
     6e8:	58 e3       	ldi	r21, 0x38	; 56
     6ea:	34 d2       	rcall	.+1128   	; 0xb54 <__gesf2>
     6ec:	18 16       	cp	r1, r24
     6ee:	1c f5       	brge	.+70     	; 0x736 <testGPSInterrupt+0xd6>
     6f0:	cf 80       	ldd	r12, Y+7	; 0x07
     6f2:	d8 84       	ldd	r13, Y+8	; 0x08
     6f4:	e9 84       	ldd	r14, Y+9	; 0x09
     6f6:	fa 84       	ldd	r15, Y+10	; 0x0a
     6f8:	63 e0       	ldi	r22, 0x03	; 3
     6fa:	70 e0       	ldi	r23, 0x00	; 0
     6fc:	85 eb       	ldi	r24, 0xB5	; 181
     6fe:	91 e0       	ldi	r25, 0x01	; 1
     700:	bc de       	rcall	.-648    	; 0x47a <parseDegreesMinutes>
     702:	9b 01       	movw	r18, r22
     704:	ac 01       	movw	r20, r24
     706:	c7 01       	movw	r24, r14
     708:	b6 01       	movw	r22, r12
     70a:	98 d0       	rcall	.+304    	; 0x83c <__subsf3>
     70c:	64 d1       	rcall	.+712    	; 0x9d6 <__fixsfsi>
     70e:	9b 01       	movw	r18, r22
     710:	77 23       	and	r23, r23
     712:	24 f4       	brge	.+8      	; 0x71c <testGPSInterrupt+0xbc>
     714:	22 27       	eor	r18, r18
     716:	33 27       	eor	r19, r19
     718:	26 1b       	sub	r18, r22
     71a:	37 0b       	sbc	r19, r23
     71c:	b9 01       	movw	r22, r18
     71e:	33 0f       	add	r19, r19
     720:	88 0b       	sbc	r24, r24
     722:	99 0b       	sbc	r25, r25
     724:	8b d1       	rcall	.+790    	; 0xa3c <__floatsisf>
     726:	27 e1       	ldi	r18, 0x17	; 23
     728:	37 eb       	ldi	r19, 0xB7	; 183
     72a:	41 ed       	ldi	r20, 0xD1	; 209
     72c:	58 e3       	ldi	r21, 0x38	; 56
     72e:	12 d2       	rcall	.+1060   	; 0xb54 <__gesf2>
     730:	18 16       	cp	r1, r24
     732:	0c f4       	brge	.+2      	; 0x736 <testGPSInterrupt+0xd6>
     734:	b8 cf       	rjmp	.-144    	; 0x6a6 <testGPSInterrupt+0x46>
		getGPSData(&gpsData);
	}
	PORTB = 255;
     736:	8f ef       	ldi	r24, 0xFF	; 255
     738:	88 bb       	out	0x18, r24	; 24
	while (1){};
     73a:	ff cf       	rjmp	.-2      	; 0x73a <testGPSInterrupt+0xda>

0000073c <beginUnitTest>:
}

void beginUnitTest() {
	srand(time(NULL));
     73c:	80 e0       	ldi	r24, 0x00	; 0
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	e2 dc       	rcall	.-1596   	; 0x106 <time>
     742:	cb 01       	movw	r24, r22
     744:	c8 d3       	rcall	.+1936   	; 0xed6 <srand>
	testGPSInterrupt();
     746:	8c df       	rcall	.-232    	; 0x660 <testGPSInterrupt>

00000748 <SetBR>:
#include "USARTComm.h"

uint16_t SetBR(uint32_t baud, uint8_t port){
     748:	1f 93       	push	r17
     74a:	cf 93       	push	r28
     74c:	df 93       	push	r29
     74e:	00 d0       	rcall	.+0      	; 0x750 <SetBR+0x8>
     750:	cd b7       	in	r28, 0x3d	; 61
     752:	de b7       	in	r29, 0x3e	; 62
     754:	14 2f       	mov	r17, r20
	uint16_t volatile SetUBRR;
	SetUBRR = (F_CPU/(16*baud) - 1);
     756:	dc 01       	movw	r26, r24
     758:	cb 01       	movw	r24, r22
     75a:	88 0f       	add	r24, r24
     75c:	99 1f       	adc	r25, r25
     75e:	aa 1f       	adc	r26, r26
     760:	bb 1f       	adc	r27, r27
     762:	88 0f       	add	r24, r24
     764:	99 1f       	adc	r25, r25
     766:	aa 1f       	adc	r26, r26
     768:	bb 1f       	adc	r27, r27
     76a:	9c 01       	movw	r18, r24
     76c:	ad 01       	movw	r20, r26
     76e:	22 0f       	add	r18, r18
     770:	33 1f       	adc	r19, r19
     772:	44 1f       	adc	r20, r20
     774:	55 1f       	adc	r21, r21
     776:	22 0f       	add	r18, r18
     778:	33 1f       	adc	r19, r19
     77a:	44 1f       	adc	r20, r20
     77c:	55 1f       	adc	r21, r21
     77e:	60 e0       	ldi	r22, 0x00	; 0
     780:	74 e2       	ldi	r23, 0x24	; 36
     782:	84 ef       	ldi	r24, 0xF4	; 244
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	0e d2       	rcall	.+1052   	; 0xba4 <__udivmodsi4>
     788:	21 50       	subi	r18, 0x01	; 1
     78a:	31 09       	sbc	r19, r1
     78c:	3a 83       	std	Y+2, r19	; 0x02
     78e:	29 83       	std	Y+1, r18	; 0x01
	if (SetUBRR > 4095 || !SetUBRR){
     790:	89 81       	ldd	r24, Y+1	; 0x01
     792:	9a 81       	ldd	r25, Y+2	; 0x02
     794:	81 15       	cp	r24, r1
     796:	90 41       	sbci	r25, 0x10	; 16
     798:	d8 f4       	brcc	.+54     	; 0x7d0 <SetBR+0x88>
     79a:	89 81       	ldd	r24, Y+1	; 0x01
     79c:	9a 81       	ldd	r25, Y+2	; 0x02
     79e:	00 97       	sbiw	r24, 0x00	; 0
     7a0:	c9 f0       	breq	.+50     	; 0x7d4 <SetBR+0x8c>
		return 0;
	} else {
		if (port){
     7a2:	11 23       	and	r17, r17
     7a4:	59 f0       	breq	.+22     	; 0x7bc <SetBR+0x74>
			UBRR1H = SetUBRR >> 8;
     7a6:	89 81       	ldd	r24, Y+1	; 0x01
     7a8:	9a 81       	ldd	r25, Y+2	; 0x02
     7aa:	90 93 98 00 	sts	0x0098, r25	; 0x800098 <__TEXT_REGION_LENGTH__+0x7e0098>
			UBRR1L = SetUBRR;
     7ae:	89 81       	ldd	r24, Y+1	; 0x01
     7b0:	9a 81       	ldd	r25, Y+2	; 0x02
     7b2:	80 93 99 00 	sts	0x0099, r24	; 0x800099 <__TEXT_REGION_LENGTH__+0x7e0099>
			return SetUBRR;
     7b6:	89 81       	ldd	r24, Y+1	; 0x01
     7b8:	9a 81       	ldd	r25, Y+2	; 0x02
     7ba:	0c c0       	rjmp	.+24     	; 0x7d4 <SetBR+0x8c>
		} else {
			UBRR0H = SetUBRR >> 8;
     7bc:	89 81       	ldd	r24, Y+1	; 0x01
     7be:	9a 81       	ldd	r25, Y+2	; 0x02
     7c0:	90 93 90 00 	sts	0x0090, r25	; 0x800090 <__TEXT_REGION_LENGTH__+0x7e0090>
			UBRR0L = SetUBRR;
     7c4:	89 81       	ldd	r24, Y+1	; 0x01
     7c6:	9a 81       	ldd	r25, Y+2	; 0x02
     7c8:	89 b9       	out	0x09, r24	; 9
			return SetUBRR;
     7ca:	89 81       	ldd	r24, Y+1	; 0x01
     7cc:	9a 81       	ldd	r25, Y+2	; 0x02
     7ce:	02 c0       	rjmp	.+4      	; 0x7d4 <SetBR+0x8c>

uint16_t SetBR(uint32_t baud, uint8_t port){
	uint16_t volatile SetUBRR;
	SetUBRR = (F_CPU/(16*baud) - 1);
	if (SetUBRR > 4095 || !SetUBRR){
		return 0;
     7d0:	80 e0       	ldi	r24, 0x00	; 0
     7d2:	90 e0       	ldi	r25, 0x00	; 0
			UBRR0H = SetUBRR >> 8;
			UBRR0L = SetUBRR;
			return SetUBRR;
		}
	}
}
     7d4:	0f 90       	pop	r0
     7d6:	0f 90       	pop	r0
     7d8:	df 91       	pop	r29
     7da:	cf 91       	pop	r28
     7dc:	1f 91       	pop	r17
     7de:	08 95       	ret

000007e0 <InitUSART>:

uint16_t InitUSART(uint32_t baud, uint8_t port){
     7e0:	1f 93       	push	r17
     7e2:	cf 93       	push	r28
     7e4:	df 93       	push	r29
     7e6:	00 d0       	rcall	.+0      	; 0x7e8 <InitUSART+0x8>
     7e8:	cd b7       	in	r28, 0x3d	; 61
     7ea:	de b7       	in	r29, 0x3e	; 62
     7ec:	14 2f       	mov	r17, r20
	uint16_t volatile SetUBRR;
	SetUBRR = SetBR(baud, port);
     7ee:	ac df       	rcall	.-168    	; 0x748 <SetBR>
     7f0:	9a 83       	std	Y+2, r25	; 0x02
     7f2:	89 83       	std	Y+1, r24	; 0x01
	if (SetUBRR){
     7f4:	89 81       	ldd	r24, Y+1	; 0x01
     7f6:	9a 81       	ldd	r25, Y+2	; 0x02
     7f8:	00 97       	sbiw	r24, 0x00	; 0
     7fa:	61 f0       	breq	.+24     	; 0x814 <InitUSART+0x34>
		if (port){
     7fc:	11 23       	and	r17, r17
     7fe:	31 f0       	breq	.+12     	; 0x80c <InitUSART+0x2c>
			UCSR1B = (1 << RXEN1)|(1 << TXEN1);
     800:	88 e1       	ldi	r24, 0x18	; 24
     802:	80 93 9a 00 	sts	0x009A, r24	; 0x80009a <__TEXT_REGION_LENGTH__+0x7e009a>
			return SetUBRR;
     806:	89 81       	ldd	r24, Y+1	; 0x01
     808:	9a 81       	ldd	r25, Y+2	; 0x02
     80a:	04 c0       	rjmp	.+8      	; 0x814 <InitUSART+0x34>
		} else {
			UCSR0B = (1 << RXEN0)|(1 << TXEN0)|(1 << RXCIE0);
     80c:	88 e9       	ldi	r24, 0x98	; 152
     80e:	8a b9       	out	0x0a, r24	; 10
			return SetUBRR;
     810:	89 81       	ldd	r24, Y+1	; 0x01
     812:	9a 81       	ldd	r25, Y+2	; 0x02
		}
	} else {
		return 0;
	}
}
     814:	0f 90       	pop	r0
     816:	0f 90       	pop	r0
     818:	df 91       	pop	r29
     81a:	cf 91       	pop	r28
     81c:	1f 91       	pop	r17
     81e:	08 95       	ret

00000820 <USARTTX>:

void USARTTX(uint8_t TXval, uint8_t port){
	if (port){	
     820:	66 23       	and	r22, r22
     822:	41 f0       	breq	.+16     	; 0x834 <USARTTX+0x14>
		while(!(UCSR1A & (1 << UDRE1))){}
     824:	eb e9       	ldi	r30, 0x9B	; 155
     826:	f0 e0       	ldi	r31, 0x00	; 0
     828:	90 81       	ld	r25, Z
     82a:	95 ff       	sbrs	r25, 5
     82c:	fd cf       	rjmp	.-6      	; 0x828 <USARTTX+0x8>
		UDR1 = TXval;
     82e:	80 93 9c 00 	sts	0x009C, r24	; 0x80009c <__TEXT_REGION_LENGTH__+0x7e009c>
     832:	08 95       	ret
	} else {
		while(!(UCSR0A & (1 << UDRE0))){}
     834:	5d 9b       	sbis	0x0b, 5	; 11
     836:	fe cf       	rjmp	.-4      	; 0x834 <USARTTX+0x14>
		UDR0 = TXval;
     838:	8c b9       	out	0x0c, r24	; 12
     83a:	08 95       	ret

0000083c <__subsf3>:
     83c:	50 58       	subi	r21, 0x80	; 128

0000083e <__addsf3>:
     83e:	bb 27       	eor	r27, r27
     840:	aa 27       	eor	r26, r26
     842:	0e d0       	rcall	.+28     	; 0x860 <__addsf3x>
     844:	4d c1       	rjmp	.+666    	; 0xae0 <__fp_round>
     846:	3e d1       	rcall	.+636    	; 0xac4 <__fp_pscA>
     848:	30 f0       	brcs	.+12     	; 0x856 <__addsf3+0x18>
     84a:	43 d1       	rcall	.+646    	; 0xad2 <__fp_pscB>
     84c:	20 f0       	brcs	.+8      	; 0x856 <__addsf3+0x18>
     84e:	31 f4       	brne	.+12     	; 0x85c <__addsf3+0x1e>
     850:	9f 3f       	cpi	r25, 0xFF	; 255
     852:	11 f4       	brne	.+4      	; 0x858 <__addsf3+0x1a>
     854:	1e f4       	brtc	.+6      	; 0x85c <__addsf3+0x1e>
     856:	33 c1       	rjmp	.+614    	; 0xabe <__fp_nan>
     858:	0e f4       	brtc	.+2      	; 0x85c <__addsf3+0x1e>
     85a:	e0 95       	com	r30
     85c:	e7 fb       	bst	r30, 7
     85e:	29 c1       	rjmp	.+594    	; 0xab2 <__fp_inf>

00000860 <__addsf3x>:
     860:	e9 2f       	mov	r30, r25
     862:	4f d1       	rcall	.+670    	; 0xb02 <__fp_split3>
     864:	80 f3       	brcs	.-32     	; 0x846 <__addsf3+0x8>
     866:	ba 17       	cp	r27, r26
     868:	62 07       	cpc	r22, r18
     86a:	73 07       	cpc	r23, r19
     86c:	84 07       	cpc	r24, r20
     86e:	95 07       	cpc	r25, r21
     870:	18 f0       	brcs	.+6      	; 0x878 <__addsf3x+0x18>
     872:	71 f4       	brne	.+28     	; 0x890 <__addsf3x+0x30>
     874:	9e f5       	brtc	.+102    	; 0x8dc <__addsf3x+0x7c>
     876:	67 c1       	rjmp	.+718    	; 0xb46 <__fp_zero>
     878:	0e f4       	brtc	.+2      	; 0x87c <__addsf3x+0x1c>
     87a:	e0 95       	com	r30
     87c:	0b 2e       	mov	r0, r27
     87e:	ba 2f       	mov	r27, r26
     880:	a0 2d       	mov	r26, r0
     882:	0b 01       	movw	r0, r22
     884:	b9 01       	movw	r22, r18
     886:	90 01       	movw	r18, r0
     888:	0c 01       	movw	r0, r24
     88a:	ca 01       	movw	r24, r20
     88c:	a0 01       	movw	r20, r0
     88e:	11 24       	eor	r1, r1
     890:	ff 27       	eor	r31, r31
     892:	59 1b       	sub	r21, r25
     894:	99 f0       	breq	.+38     	; 0x8bc <__addsf3x+0x5c>
     896:	59 3f       	cpi	r21, 0xF9	; 249
     898:	50 f4       	brcc	.+20     	; 0x8ae <__addsf3x+0x4e>
     89a:	50 3e       	cpi	r21, 0xE0	; 224
     89c:	68 f1       	brcs	.+90     	; 0x8f8 <__addsf3x+0x98>
     89e:	1a 16       	cp	r1, r26
     8a0:	f0 40       	sbci	r31, 0x00	; 0
     8a2:	a2 2f       	mov	r26, r18
     8a4:	23 2f       	mov	r18, r19
     8a6:	34 2f       	mov	r19, r20
     8a8:	44 27       	eor	r20, r20
     8aa:	58 5f       	subi	r21, 0xF8	; 248
     8ac:	f3 cf       	rjmp	.-26     	; 0x894 <__addsf3x+0x34>
     8ae:	46 95       	lsr	r20
     8b0:	37 95       	ror	r19
     8b2:	27 95       	ror	r18
     8b4:	a7 95       	ror	r26
     8b6:	f0 40       	sbci	r31, 0x00	; 0
     8b8:	53 95       	inc	r21
     8ba:	c9 f7       	brne	.-14     	; 0x8ae <__addsf3x+0x4e>
     8bc:	7e f4       	brtc	.+30     	; 0x8dc <__addsf3x+0x7c>
     8be:	1f 16       	cp	r1, r31
     8c0:	ba 0b       	sbc	r27, r26
     8c2:	62 0b       	sbc	r22, r18
     8c4:	73 0b       	sbc	r23, r19
     8c6:	84 0b       	sbc	r24, r20
     8c8:	ba f0       	brmi	.+46     	; 0x8f8 <__addsf3x+0x98>
     8ca:	91 50       	subi	r25, 0x01	; 1
     8cc:	a1 f0       	breq	.+40     	; 0x8f6 <__addsf3x+0x96>
     8ce:	ff 0f       	add	r31, r31
     8d0:	bb 1f       	adc	r27, r27
     8d2:	66 1f       	adc	r22, r22
     8d4:	77 1f       	adc	r23, r23
     8d6:	88 1f       	adc	r24, r24
     8d8:	c2 f7       	brpl	.-16     	; 0x8ca <__addsf3x+0x6a>
     8da:	0e c0       	rjmp	.+28     	; 0x8f8 <__addsf3x+0x98>
     8dc:	ba 0f       	add	r27, r26
     8de:	62 1f       	adc	r22, r18
     8e0:	73 1f       	adc	r23, r19
     8e2:	84 1f       	adc	r24, r20
     8e4:	48 f4       	brcc	.+18     	; 0x8f8 <__addsf3x+0x98>
     8e6:	87 95       	ror	r24
     8e8:	77 95       	ror	r23
     8ea:	67 95       	ror	r22
     8ec:	b7 95       	ror	r27
     8ee:	f7 95       	ror	r31
     8f0:	9e 3f       	cpi	r25, 0xFE	; 254
     8f2:	08 f0       	brcs	.+2      	; 0x8f6 <__addsf3x+0x96>
     8f4:	b3 cf       	rjmp	.-154    	; 0x85c <__addsf3+0x1e>
     8f6:	93 95       	inc	r25
     8f8:	88 0f       	add	r24, r24
     8fa:	08 f0       	brcs	.+2      	; 0x8fe <__addsf3x+0x9e>
     8fc:	99 27       	eor	r25, r25
     8fe:	ee 0f       	add	r30, r30
     900:	97 95       	ror	r25
     902:	87 95       	ror	r24
     904:	08 95       	ret

00000906 <__divsf3>:
     906:	0c d0       	rcall	.+24     	; 0x920 <__divsf3x>
     908:	eb c0       	rjmp	.+470    	; 0xae0 <__fp_round>
     90a:	e3 d0       	rcall	.+454    	; 0xad2 <__fp_pscB>
     90c:	40 f0       	brcs	.+16     	; 0x91e <__divsf3+0x18>
     90e:	da d0       	rcall	.+436    	; 0xac4 <__fp_pscA>
     910:	30 f0       	brcs	.+12     	; 0x91e <__divsf3+0x18>
     912:	21 f4       	brne	.+8      	; 0x91c <__divsf3+0x16>
     914:	5f 3f       	cpi	r21, 0xFF	; 255
     916:	19 f0       	breq	.+6      	; 0x91e <__divsf3+0x18>
     918:	cc c0       	rjmp	.+408    	; 0xab2 <__fp_inf>
     91a:	51 11       	cpse	r21, r1
     91c:	15 c1       	rjmp	.+554    	; 0xb48 <__fp_szero>
     91e:	cf c0       	rjmp	.+414    	; 0xabe <__fp_nan>

00000920 <__divsf3x>:
     920:	f0 d0       	rcall	.+480    	; 0xb02 <__fp_split3>
     922:	98 f3       	brcs	.-26     	; 0x90a <__divsf3+0x4>

00000924 <__divsf3_pse>:
     924:	99 23       	and	r25, r25
     926:	c9 f3       	breq	.-14     	; 0x91a <__divsf3+0x14>
     928:	55 23       	and	r21, r21
     92a:	b1 f3       	breq	.-20     	; 0x918 <__divsf3+0x12>
     92c:	95 1b       	sub	r25, r21
     92e:	55 0b       	sbc	r21, r21
     930:	bb 27       	eor	r27, r27
     932:	aa 27       	eor	r26, r26
     934:	62 17       	cp	r22, r18
     936:	73 07       	cpc	r23, r19
     938:	84 07       	cpc	r24, r20
     93a:	38 f0       	brcs	.+14     	; 0x94a <__divsf3_pse+0x26>
     93c:	9f 5f       	subi	r25, 0xFF	; 255
     93e:	5f 4f       	sbci	r21, 0xFF	; 255
     940:	22 0f       	add	r18, r18
     942:	33 1f       	adc	r19, r19
     944:	44 1f       	adc	r20, r20
     946:	aa 1f       	adc	r26, r26
     948:	a9 f3       	breq	.-22     	; 0x934 <__divsf3_pse+0x10>
     94a:	33 d0       	rcall	.+102    	; 0x9b2 <__divsf3_pse+0x8e>
     94c:	0e 2e       	mov	r0, r30
     94e:	3a f0       	brmi	.+14     	; 0x95e <__divsf3_pse+0x3a>
     950:	e0 e8       	ldi	r30, 0x80	; 128
     952:	30 d0       	rcall	.+96     	; 0x9b4 <__divsf3_pse+0x90>
     954:	91 50       	subi	r25, 0x01	; 1
     956:	50 40       	sbci	r21, 0x00	; 0
     958:	e6 95       	lsr	r30
     95a:	00 1c       	adc	r0, r0
     95c:	ca f7       	brpl	.-14     	; 0x950 <__divsf3_pse+0x2c>
     95e:	29 d0       	rcall	.+82     	; 0x9b2 <__divsf3_pse+0x8e>
     960:	fe 2f       	mov	r31, r30
     962:	27 d0       	rcall	.+78     	; 0x9b2 <__divsf3_pse+0x8e>
     964:	66 0f       	add	r22, r22
     966:	77 1f       	adc	r23, r23
     968:	88 1f       	adc	r24, r24
     96a:	bb 1f       	adc	r27, r27
     96c:	26 17       	cp	r18, r22
     96e:	37 07       	cpc	r19, r23
     970:	48 07       	cpc	r20, r24
     972:	ab 07       	cpc	r26, r27
     974:	b0 e8       	ldi	r27, 0x80	; 128
     976:	09 f0       	breq	.+2      	; 0x97a <__divsf3_pse+0x56>
     978:	bb 0b       	sbc	r27, r27
     97a:	80 2d       	mov	r24, r0
     97c:	bf 01       	movw	r22, r30
     97e:	ff 27       	eor	r31, r31
     980:	93 58       	subi	r25, 0x83	; 131
     982:	5f 4f       	sbci	r21, 0xFF	; 255
     984:	2a f0       	brmi	.+10     	; 0x990 <__divsf3_pse+0x6c>
     986:	9e 3f       	cpi	r25, 0xFE	; 254
     988:	51 05       	cpc	r21, r1
     98a:	68 f0       	brcs	.+26     	; 0x9a6 <__divsf3_pse+0x82>
     98c:	92 c0       	rjmp	.+292    	; 0xab2 <__fp_inf>
     98e:	dc c0       	rjmp	.+440    	; 0xb48 <__fp_szero>
     990:	5f 3f       	cpi	r21, 0xFF	; 255
     992:	ec f3       	brlt	.-6      	; 0x98e <__divsf3_pse+0x6a>
     994:	98 3e       	cpi	r25, 0xE8	; 232
     996:	dc f3       	brlt	.-10     	; 0x98e <__divsf3_pse+0x6a>
     998:	86 95       	lsr	r24
     99a:	77 95       	ror	r23
     99c:	67 95       	ror	r22
     99e:	b7 95       	ror	r27
     9a0:	f7 95       	ror	r31
     9a2:	9f 5f       	subi	r25, 0xFF	; 255
     9a4:	c9 f7       	brne	.-14     	; 0x998 <__divsf3_pse+0x74>
     9a6:	88 0f       	add	r24, r24
     9a8:	91 1d       	adc	r25, r1
     9aa:	96 95       	lsr	r25
     9ac:	87 95       	ror	r24
     9ae:	97 f9       	bld	r25, 7
     9b0:	08 95       	ret
     9b2:	e1 e0       	ldi	r30, 0x01	; 1
     9b4:	66 0f       	add	r22, r22
     9b6:	77 1f       	adc	r23, r23
     9b8:	88 1f       	adc	r24, r24
     9ba:	bb 1f       	adc	r27, r27
     9bc:	62 17       	cp	r22, r18
     9be:	73 07       	cpc	r23, r19
     9c0:	84 07       	cpc	r24, r20
     9c2:	ba 07       	cpc	r27, r26
     9c4:	20 f0       	brcs	.+8      	; 0x9ce <__divsf3_pse+0xaa>
     9c6:	62 1b       	sub	r22, r18
     9c8:	73 0b       	sbc	r23, r19
     9ca:	84 0b       	sbc	r24, r20
     9cc:	ba 0b       	sbc	r27, r26
     9ce:	ee 1f       	adc	r30, r30
     9d0:	88 f7       	brcc	.-30     	; 0x9b4 <__divsf3_pse+0x90>
     9d2:	e0 95       	com	r30
     9d4:	08 95       	ret

000009d6 <__fixsfsi>:
     9d6:	04 d0       	rcall	.+8      	; 0x9e0 <__fixunssfsi>
     9d8:	68 94       	set
     9da:	b1 11       	cpse	r27, r1
     9dc:	b5 c0       	rjmp	.+362    	; 0xb48 <__fp_szero>
     9de:	08 95       	ret

000009e0 <__fixunssfsi>:
     9e0:	98 d0       	rcall	.+304    	; 0xb12 <__fp_splitA>
     9e2:	88 f0       	brcs	.+34     	; 0xa06 <__fixunssfsi+0x26>
     9e4:	9f 57       	subi	r25, 0x7F	; 127
     9e6:	90 f0       	brcs	.+36     	; 0xa0c <__fixunssfsi+0x2c>
     9e8:	b9 2f       	mov	r27, r25
     9ea:	99 27       	eor	r25, r25
     9ec:	b7 51       	subi	r27, 0x17	; 23
     9ee:	a0 f0       	brcs	.+40     	; 0xa18 <__fixunssfsi+0x38>
     9f0:	d1 f0       	breq	.+52     	; 0xa26 <__fixunssfsi+0x46>
     9f2:	66 0f       	add	r22, r22
     9f4:	77 1f       	adc	r23, r23
     9f6:	88 1f       	adc	r24, r24
     9f8:	99 1f       	adc	r25, r25
     9fa:	1a f0       	brmi	.+6      	; 0xa02 <__fixunssfsi+0x22>
     9fc:	ba 95       	dec	r27
     9fe:	c9 f7       	brne	.-14     	; 0x9f2 <__fixunssfsi+0x12>
     a00:	12 c0       	rjmp	.+36     	; 0xa26 <__fixunssfsi+0x46>
     a02:	b1 30       	cpi	r27, 0x01	; 1
     a04:	81 f0       	breq	.+32     	; 0xa26 <__fixunssfsi+0x46>
     a06:	9f d0       	rcall	.+318    	; 0xb46 <__fp_zero>
     a08:	b1 e0       	ldi	r27, 0x01	; 1
     a0a:	08 95       	ret
     a0c:	9c c0       	rjmp	.+312    	; 0xb46 <__fp_zero>
     a0e:	67 2f       	mov	r22, r23
     a10:	78 2f       	mov	r23, r24
     a12:	88 27       	eor	r24, r24
     a14:	b8 5f       	subi	r27, 0xF8	; 248
     a16:	39 f0       	breq	.+14     	; 0xa26 <__fixunssfsi+0x46>
     a18:	b9 3f       	cpi	r27, 0xF9	; 249
     a1a:	cc f3       	brlt	.-14     	; 0xa0e <__fixunssfsi+0x2e>
     a1c:	86 95       	lsr	r24
     a1e:	77 95       	ror	r23
     a20:	67 95       	ror	r22
     a22:	b3 95       	inc	r27
     a24:	d9 f7       	brne	.-10     	; 0xa1c <__fixunssfsi+0x3c>
     a26:	3e f4       	brtc	.+14     	; 0xa36 <__fixunssfsi+0x56>
     a28:	90 95       	com	r25
     a2a:	80 95       	com	r24
     a2c:	70 95       	com	r23
     a2e:	61 95       	neg	r22
     a30:	7f 4f       	sbci	r23, 0xFF	; 255
     a32:	8f 4f       	sbci	r24, 0xFF	; 255
     a34:	9f 4f       	sbci	r25, 0xFF	; 255
     a36:	08 95       	ret

00000a38 <__floatunsisf>:
     a38:	e8 94       	clt
     a3a:	09 c0       	rjmp	.+18     	; 0xa4e <__floatsisf+0x12>

00000a3c <__floatsisf>:
     a3c:	97 fb       	bst	r25, 7
     a3e:	3e f4       	brtc	.+14     	; 0xa4e <__floatsisf+0x12>
     a40:	90 95       	com	r25
     a42:	80 95       	com	r24
     a44:	70 95       	com	r23
     a46:	61 95       	neg	r22
     a48:	7f 4f       	sbci	r23, 0xFF	; 255
     a4a:	8f 4f       	sbci	r24, 0xFF	; 255
     a4c:	9f 4f       	sbci	r25, 0xFF	; 255
     a4e:	99 23       	and	r25, r25
     a50:	a9 f0       	breq	.+42     	; 0xa7c <__floatsisf+0x40>
     a52:	f9 2f       	mov	r31, r25
     a54:	96 e9       	ldi	r25, 0x96	; 150
     a56:	bb 27       	eor	r27, r27
     a58:	93 95       	inc	r25
     a5a:	f6 95       	lsr	r31
     a5c:	87 95       	ror	r24
     a5e:	77 95       	ror	r23
     a60:	67 95       	ror	r22
     a62:	b7 95       	ror	r27
     a64:	f1 11       	cpse	r31, r1
     a66:	f8 cf       	rjmp	.-16     	; 0xa58 <__floatsisf+0x1c>
     a68:	fa f4       	brpl	.+62     	; 0xaa8 <__floatsisf+0x6c>
     a6a:	bb 0f       	add	r27, r27
     a6c:	11 f4       	brne	.+4      	; 0xa72 <__floatsisf+0x36>
     a6e:	60 ff       	sbrs	r22, 0
     a70:	1b c0       	rjmp	.+54     	; 0xaa8 <__floatsisf+0x6c>
     a72:	6f 5f       	subi	r22, 0xFF	; 255
     a74:	7f 4f       	sbci	r23, 0xFF	; 255
     a76:	8f 4f       	sbci	r24, 0xFF	; 255
     a78:	9f 4f       	sbci	r25, 0xFF	; 255
     a7a:	16 c0       	rjmp	.+44     	; 0xaa8 <__floatsisf+0x6c>
     a7c:	88 23       	and	r24, r24
     a7e:	11 f0       	breq	.+4      	; 0xa84 <__floatsisf+0x48>
     a80:	96 e9       	ldi	r25, 0x96	; 150
     a82:	11 c0       	rjmp	.+34     	; 0xaa6 <__floatsisf+0x6a>
     a84:	77 23       	and	r23, r23
     a86:	21 f0       	breq	.+8      	; 0xa90 <__floatsisf+0x54>
     a88:	9e e8       	ldi	r25, 0x8E	; 142
     a8a:	87 2f       	mov	r24, r23
     a8c:	76 2f       	mov	r23, r22
     a8e:	05 c0       	rjmp	.+10     	; 0xa9a <__floatsisf+0x5e>
     a90:	66 23       	and	r22, r22
     a92:	71 f0       	breq	.+28     	; 0xab0 <__floatsisf+0x74>
     a94:	96 e8       	ldi	r25, 0x86	; 134
     a96:	86 2f       	mov	r24, r22
     a98:	70 e0       	ldi	r23, 0x00	; 0
     a9a:	60 e0       	ldi	r22, 0x00	; 0
     a9c:	2a f0       	brmi	.+10     	; 0xaa8 <__floatsisf+0x6c>
     a9e:	9a 95       	dec	r25
     aa0:	66 0f       	add	r22, r22
     aa2:	77 1f       	adc	r23, r23
     aa4:	88 1f       	adc	r24, r24
     aa6:	da f7       	brpl	.-10     	; 0xa9e <__floatsisf+0x62>
     aa8:	88 0f       	add	r24, r24
     aaa:	96 95       	lsr	r25
     aac:	87 95       	ror	r24
     aae:	97 f9       	bld	r25, 7
     ab0:	08 95       	ret

00000ab2 <__fp_inf>:
     ab2:	97 f9       	bld	r25, 7
     ab4:	9f 67       	ori	r25, 0x7F	; 127
     ab6:	80 e8       	ldi	r24, 0x80	; 128
     ab8:	70 e0       	ldi	r23, 0x00	; 0
     aba:	60 e0       	ldi	r22, 0x00	; 0
     abc:	08 95       	ret

00000abe <__fp_nan>:
     abe:	9f ef       	ldi	r25, 0xFF	; 255
     ac0:	80 ec       	ldi	r24, 0xC0	; 192
     ac2:	08 95       	ret

00000ac4 <__fp_pscA>:
     ac4:	00 24       	eor	r0, r0
     ac6:	0a 94       	dec	r0
     ac8:	16 16       	cp	r1, r22
     aca:	17 06       	cpc	r1, r23
     acc:	18 06       	cpc	r1, r24
     ace:	09 06       	cpc	r0, r25
     ad0:	08 95       	ret

00000ad2 <__fp_pscB>:
     ad2:	00 24       	eor	r0, r0
     ad4:	0a 94       	dec	r0
     ad6:	12 16       	cp	r1, r18
     ad8:	13 06       	cpc	r1, r19
     ada:	14 06       	cpc	r1, r20
     adc:	05 06       	cpc	r0, r21
     ade:	08 95       	ret

00000ae0 <__fp_round>:
     ae0:	09 2e       	mov	r0, r25
     ae2:	03 94       	inc	r0
     ae4:	00 0c       	add	r0, r0
     ae6:	11 f4       	brne	.+4      	; 0xaec <__fp_round+0xc>
     ae8:	88 23       	and	r24, r24
     aea:	52 f0       	brmi	.+20     	; 0xb00 <__fp_round+0x20>
     aec:	bb 0f       	add	r27, r27
     aee:	40 f4       	brcc	.+16     	; 0xb00 <__fp_round+0x20>
     af0:	bf 2b       	or	r27, r31
     af2:	11 f4       	brne	.+4      	; 0xaf8 <__fp_round+0x18>
     af4:	60 ff       	sbrs	r22, 0
     af6:	04 c0       	rjmp	.+8      	; 0xb00 <__fp_round+0x20>
     af8:	6f 5f       	subi	r22, 0xFF	; 255
     afa:	7f 4f       	sbci	r23, 0xFF	; 255
     afc:	8f 4f       	sbci	r24, 0xFF	; 255
     afe:	9f 4f       	sbci	r25, 0xFF	; 255
     b00:	08 95       	ret

00000b02 <__fp_split3>:
     b02:	57 fd       	sbrc	r21, 7
     b04:	90 58       	subi	r25, 0x80	; 128
     b06:	44 0f       	add	r20, r20
     b08:	55 1f       	adc	r21, r21
     b0a:	59 f0       	breq	.+22     	; 0xb22 <__fp_splitA+0x10>
     b0c:	5f 3f       	cpi	r21, 0xFF	; 255
     b0e:	71 f0       	breq	.+28     	; 0xb2c <__fp_splitA+0x1a>
     b10:	47 95       	ror	r20

00000b12 <__fp_splitA>:
     b12:	88 0f       	add	r24, r24
     b14:	97 fb       	bst	r25, 7
     b16:	99 1f       	adc	r25, r25
     b18:	61 f0       	breq	.+24     	; 0xb32 <__fp_splitA+0x20>
     b1a:	9f 3f       	cpi	r25, 0xFF	; 255
     b1c:	79 f0       	breq	.+30     	; 0xb3c <__fp_splitA+0x2a>
     b1e:	87 95       	ror	r24
     b20:	08 95       	ret
     b22:	12 16       	cp	r1, r18
     b24:	13 06       	cpc	r1, r19
     b26:	14 06       	cpc	r1, r20
     b28:	55 1f       	adc	r21, r21
     b2a:	f2 cf       	rjmp	.-28     	; 0xb10 <__fp_split3+0xe>
     b2c:	46 95       	lsr	r20
     b2e:	f1 df       	rcall	.-30     	; 0xb12 <__fp_splitA>
     b30:	08 c0       	rjmp	.+16     	; 0xb42 <__fp_splitA+0x30>
     b32:	16 16       	cp	r1, r22
     b34:	17 06       	cpc	r1, r23
     b36:	18 06       	cpc	r1, r24
     b38:	99 1f       	adc	r25, r25
     b3a:	f1 cf       	rjmp	.-30     	; 0xb1e <__fp_splitA+0xc>
     b3c:	86 95       	lsr	r24
     b3e:	71 05       	cpc	r23, r1
     b40:	61 05       	cpc	r22, r1
     b42:	08 94       	sec
     b44:	08 95       	ret

00000b46 <__fp_zero>:
     b46:	e8 94       	clt

00000b48 <__fp_szero>:
     b48:	bb 27       	eor	r27, r27
     b4a:	66 27       	eor	r22, r22
     b4c:	77 27       	eor	r23, r23
     b4e:	cb 01       	movw	r24, r22
     b50:	97 f9       	bld	r25, 7
     b52:	08 95       	ret

00000b54 <__gesf2>:
     b54:	03 d0       	rcall	.+6      	; 0xb5c <__fp_cmp>
     b56:	08 f4       	brcc	.+2      	; 0xb5a <__gesf2+0x6>
     b58:	8f ef       	ldi	r24, 0xFF	; 255
     b5a:	08 95       	ret

00000b5c <__fp_cmp>:
     b5c:	99 0f       	add	r25, r25
     b5e:	00 08       	sbc	r0, r0
     b60:	55 0f       	add	r21, r21
     b62:	aa 0b       	sbc	r26, r26
     b64:	e0 e8       	ldi	r30, 0x80	; 128
     b66:	fe ef       	ldi	r31, 0xFE	; 254
     b68:	16 16       	cp	r1, r22
     b6a:	17 06       	cpc	r1, r23
     b6c:	e8 07       	cpc	r30, r24
     b6e:	f9 07       	cpc	r31, r25
     b70:	c0 f0       	brcs	.+48     	; 0xba2 <__fp_cmp+0x46>
     b72:	12 16       	cp	r1, r18
     b74:	13 06       	cpc	r1, r19
     b76:	e4 07       	cpc	r30, r20
     b78:	f5 07       	cpc	r31, r21
     b7a:	98 f0       	brcs	.+38     	; 0xba2 <__fp_cmp+0x46>
     b7c:	62 1b       	sub	r22, r18
     b7e:	73 0b       	sbc	r23, r19
     b80:	84 0b       	sbc	r24, r20
     b82:	95 0b       	sbc	r25, r21
     b84:	39 f4       	brne	.+14     	; 0xb94 <__fp_cmp+0x38>
     b86:	0a 26       	eor	r0, r26
     b88:	61 f0       	breq	.+24     	; 0xba2 <__fp_cmp+0x46>
     b8a:	23 2b       	or	r18, r19
     b8c:	24 2b       	or	r18, r20
     b8e:	25 2b       	or	r18, r21
     b90:	21 f4       	brne	.+8      	; 0xb9a <__fp_cmp+0x3e>
     b92:	08 95       	ret
     b94:	0a 26       	eor	r0, r26
     b96:	09 f4       	brne	.+2      	; 0xb9a <__fp_cmp+0x3e>
     b98:	a1 40       	sbci	r26, 0x01	; 1
     b9a:	a6 95       	lsr	r26
     b9c:	8f ef       	ldi	r24, 0xFF	; 255
     b9e:	81 1d       	adc	r24, r1
     ba0:	81 1d       	adc	r24, r1
     ba2:	08 95       	ret

00000ba4 <__udivmodsi4>:
     ba4:	a1 e2       	ldi	r26, 0x21	; 33
     ba6:	1a 2e       	mov	r1, r26
     ba8:	aa 1b       	sub	r26, r26
     baa:	bb 1b       	sub	r27, r27
     bac:	fd 01       	movw	r30, r26
     bae:	0d c0       	rjmp	.+26     	; 0xbca <__udivmodsi4_ep>

00000bb0 <__udivmodsi4_loop>:
     bb0:	aa 1f       	adc	r26, r26
     bb2:	bb 1f       	adc	r27, r27
     bb4:	ee 1f       	adc	r30, r30
     bb6:	ff 1f       	adc	r31, r31
     bb8:	a2 17       	cp	r26, r18
     bba:	b3 07       	cpc	r27, r19
     bbc:	e4 07       	cpc	r30, r20
     bbe:	f5 07       	cpc	r31, r21
     bc0:	20 f0       	brcs	.+8      	; 0xbca <__udivmodsi4_ep>
     bc2:	a2 1b       	sub	r26, r18
     bc4:	b3 0b       	sbc	r27, r19
     bc6:	e4 0b       	sbc	r30, r20
     bc8:	f5 0b       	sbc	r31, r21

00000bca <__udivmodsi4_ep>:
     bca:	66 1f       	adc	r22, r22
     bcc:	77 1f       	adc	r23, r23
     bce:	88 1f       	adc	r24, r24
     bd0:	99 1f       	adc	r25, r25
     bd2:	1a 94       	dec	r1
     bd4:	69 f7       	brne	.-38     	; 0xbb0 <__udivmodsi4_loop>
     bd6:	60 95       	com	r22
     bd8:	70 95       	com	r23
     bda:	80 95       	com	r24
     bdc:	90 95       	com	r25
     bde:	9b 01       	movw	r18, r22
     be0:	ac 01       	movw	r20, r24
     be2:	bd 01       	movw	r22, r26
     be4:	cf 01       	movw	r24, r30
     be6:	08 95       	ret

00000be8 <malloc>:
     be8:	cf 93       	push	r28
     bea:	df 93       	push	r29
     bec:	82 30       	cpi	r24, 0x02	; 2
     bee:	91 05       	cpc	r25, r1
     bf0:	10 f4       	brcc	.+4      	; 0xbf6 <malloc+0xe>
     bf2:	82 e0       	ldi	r24, 0x02	; 2
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	e0 91 c7 02 	lds	r30, 0x02C7	; 0x8002c7 <__flp>
     bfa:	f0 91 c8 02 	lds	r31, 0x02C8	; 0x8002c8 <__flp+0x1>
     bfe:	20 e0       	ldi	r18, 0x00	; 0
     c00:	30 e0       	ldi	r19, 0x00	; 0
     c02:	c0 e0       	ldi	r28, 0x00	; 0
     c04:	d0 e0       	ldi	r29, 0x00	; 0
     c06:	30 97       	sbiw	r30, 0x00	; 0
     c08:	11 f1       	breq	.+68     	; 0xc4e <malloc+0x66>
     c0a:	40 81       	ld	r20, Z
     c0c:	51 81       	ldd	r21, Z+1	; 0x01
     c0e:	48 17       	cp	r20, r24
     c10:	59 07       	cpc	r21, r25
     c12:	c0 f0       	brcs	.+48     	; 0xc44 <malloc+0x5c>
     c14:	48 17       	cp	r20, r24
     c16:	59 07       	cpc	r21, r25
     c18:	61 f4       	brne	.+24     	; 0xc32 <malloc+0x4a>
     c1a:	82 81       	ldd	r24, Z+2	; 0x02
     c1c:	93 81       	ldd	r25, Z+3	; 0x03
     c1e:	20 97       	sbiw	r28, 0x00	; 0
     c20:	19 f0       	breq	.+6      	; 0xc28 <malloc+0x40>
     c22:	9b 83       	std	Y+3, r25	; 0x03
     c24:	8a 83       	std	Y+2, r24	; 0x02
     c26:	2b c0       	rjmp	.+86     	; 0xc7e <malloc+0x96>
     c28:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <__flp+0x1>
     c2c:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <__flp>
     c30:	26 c0       	rjmp	.+76     	; 0xc7e <malloc+0x96>
     c32:	21 15       	cp	r18, r1
     c34:	31 05       	cpc	r19, r1
     c36:	19 f0       	breq	.+6      	; 0xc3e <malloc+0x56>
     c38:	42 17       	cp	r20, r18
     c3a:	53 07       	cpc	r21, r19
     c3c:	18 f4       	brcc	.+6      	; 0xc44 <malloc+0x5c>
     c3e:	9a 01       	movw	r18, r20
     c40:	be 01       	movw	r22, r28
     c42:	df 01       	movw	r26, r30
     c44:	ef 01       	movw	r28, r30
     c46:	02 80       	ldd	r0, Z+2	; 0x02
     c48:	f3 81       	ldd	r31, Z+3	; 0x03
     c4a:	e0 2d       	mov	r30, r0
     c4c:	dc cf       	rjmp	.-72     	; 0xc06 <malloc+0x1e>
     c4e:	21 15       	cp	r18, r1
     c50:	31 05       	cpc	r19, r1
     c52:	09 f1       	breq	.+66     	; 0xc96 <malloc+0xae>
     c54:	28 1b       	sub	r18, r24
     c56:	39 0b       	sbc	r19, r25
     c58:	24 30       	cpi	r18, 0x04	; 4
     c5a:	31 05       	cpc	r19, r1
     c5c:	90 f4       	brcc	.+36     	; 0xc82 <malloc+0x9a>
     c5e:	12 96       	adiw	r26, 0x02	; 2
     c60:	8d 91       	ld	r24, X+
     c62:	9c 91       	ld	r25, X
     c64:	13 97       	sbiw	r26, 0x03	; 3
     c66:	61 15       	cp	r22, r1
     c68:	71 05       	cpc	r23, r1
     c6a:	21 f0       	breq	.+8      	; 0xc74 <malloc+0x8c>
     c6c:	fb 01       	movw	r30, r22
     c6e:	93 83       	std	Z+3, r25	; 0x03
     c70:	82 83       	std	Z+2, r24	; 0x02
     c72:	04 c0       	rjmp	.+8      	; 0xc7c <malloc+0x94>
     c74:	90 93 c8 02 	sts	0x02C8, r25	; 0x8002c8 <__flp+0x1>
     c78:	80 93 c7 02 	sts	0x02C7, r24	; 0x8002c7 <__flp>
     c7c:	fd 01       	movw	r30, r26
     c7e:	32 96       	adiw	r30, 0x02	; 2
     c80:	44 c0       	rjmp	.+136    	; 0xd0a <malloc+0x122>
     c82:	fd 01       	movw	r30, r26
     c84:	e2 0f       	add	r30, r18
     c86:	f3 1f       	adc	r31, r19
     c88:	81 93       	st	Z+, r24
     c8a:	91 93       	st	Z+, r25
     c8c:	22 50       	subi	r18, 0x02	; 2
     c8e:	31 09       	sbc	r19, r1
     c90:	2d 93       	st	X+, r18
     c92:	3c 93       	st	X, r19
     c94:	3a c0       	rjmp	.+116    	; 0xd0a <malloc+0x122>
     c96:	20 91 c5 02 	lds	r18, 0x02C5	; 0x8002c5 <__brkval>
     c9a:	30 91 c6 02 	lds	r19, 0x02C6	; 0x8002c6 <__brkval+0x1>
     c9e:	23 2b       	or	r18, r19
     ca0:	41 f4       	brne	.+16     	; 0xcb2 <malloc+0xca>
     ca2:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
     ca6:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
     caa:	30 93 c6 02 	sts	0x02C6, r19	; 0x8002c6 <__brkval+0x1>
     cae:	20 93 c5 02 	sts	0x02C5, r18	; 0x8002c5 <__brkval>
     cb2:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
     cb6:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
     cba:	21 15       	cp	r18, r1
     cbc:	31 05       	cpc	r19, r1
     cbe:	41 f4       	brne	.+16     	; 0xcd0 <malloc+0xe8>
     cc0:	2d b7       	in	r18, 0x3d	; 61
     cc2:	3e b7       	in	r19, 0x3e	; 62
     cc4:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
     cc8:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
     ccc:	24 1b       	sub	r18, r20
     cce:	35 0b       	sbc	r19, r21
     cd0:	e0 91 c5 02 	lds	r30, 0x02C5	; 0x8002c5 <__brkval>
     cd4:	f0 91 c6 02 	lds	r31, 0x02C6	; 0x8002c6 <__brkval+0x1>
     cd8:	e2 17       	cp	r30, r18
     cda:	f3 07       	cpc	r31, r19
     cdc:	a0 f4       	brcc	.+40     	; 0xd06 <malloc+0x11e>
     cde:	2e 1b       	sub	r18, r30
     ce0:	3f 0b       	sbc	r19, r31
     ce2:	28 17       	cp	r18, r24
     ce4:	39 07       	cpc	r19, r25
     ce6:	78 f0       	brcs	.+30     	; 0xd06 <malloc+0x11e>
     ce8:	ac 01       	movw	r20, r24
     cea:	4e 5f       	subi	r20, 0xFE	; 254
     cec:	5f 4f       	sbci	r21, 0xFF	; 255
     cee:	24 17       	cp	r18, r20
     cf0:	35 07       	cpc	r19, r21
     cf2:	48 f0       	brcs	.+18     	; 0xd06 <malloc+0x11e>
     cf4:	4e 0f       	add	r20, r30
     cf6:	5f 1f       	adc	r21, r31
     cf8:	50 93 c6 02 	sts	0x02C6, r21	; 0x8002c6 <__brkval+0x1>
     cfc:	40 93 c5 02 	sts	0x02C5, r20	; 0x8002c5 <__brkval>
     d00:	81 93       	st	Z+, r24
     d02:	91 93       	st	Z+, r25
     d04:	02 c0       	rjmp	.+4      	; 0xd0a <malloc+0x122>
     d06:	e0 e0       	ldi	r30, 0x00	; 0
     d08:	f0 e0       	ldi	r31, 0x00	; 0
     d0a:	cf 01       	movw	r24, r30
     d0c:	df 91       	pop	r29
     d0e:	cf 91       	pop	r28
     d10:	08 95       	ret

00000d12 <free>:
     d12:	0f 93       	push	r16
     d14:	1f 93       	push	r17
     d16:	cf 93       	push	r28
     d18:	df 93       	push	r29
     d1a:	00 97       	sbiw	r24, 0x00	; 0
     d1c:	09 f4       	brne	.+2      	; 0xd20 <free+0xe>
     d1e:	8c c0       	rjmp	.+280    	; 0xe38 <free+0x126>
     d20:	fc 01       	movw	r30, r24
     d22:	32 97       	sbiw	r30, 0x02	; 2
     d24:	13 82       	std	Z+3, r1	; 0x03
     d26:	12 82       	std	Z+2, r1	; 0x02
     d28:	00 91 c7 02 	lds	r16, 0x02C7	; 0x8002c7 <__flp>
     d2c:	10 91 c8 02 	lds	r17, 0x02C8	; 0x8002c8 <__flp+0x1>
     d30:	01 15       	cp	r16, r1
     d32:	11 05       	cpc	r17, r1
     d34:	81 f4       	brne	.+32     	; 0xd56 <free+0x44>
     d36:	20 81       	ld	r18, Z
     d38:	31 81       	ldd	r19, Z+1	; 0x01
     d3a:	82 0f       	add	r24, r18
     d3c:	93 1f       	adc	r25, r19
     d3e:	20 91 c5 02 	lds	r18, 0x02C5	; 0x8002c5 <__brkval>
     d42:	30 91 c6 02 	lds	r19, 0x02C6	; 0x8002c6 <__brkval+0x1>
     d46:	28 17       	cp	r18, r24
     d48:	39 07       	cpc	r19, r25
     d4a:	79 f5       	brne	.+94     	; 0xdaa <free+0x98>
     d4c:	f0 93 c6 02 	sts	0x02C6, r31	; 0x8002c6 <__brkval+0x1>
     d50:	e0 93 c5 02 	sts	0x02C5, r30	; 0x8002c5 <__brkval>
     d54:	71 c0       	rjmp	.+226    	; 0xe38 <free+0x126>
     d56:	d8 01       	movw	r26, r16
     d58:	40 e0       	ldi	r20, 0x00	; 0
     d5a:	50 e0       	ldi	r21, 0x00	; 0
     d5c:	ae 17       	cp	r26, r30
     d5e:	bf 07       	cpc	r27, r31
     d60:	50 f4       	brcc	.+20     	; 0xd76 <free+0x64>
     d62:	12 96       	adiw	r26, 0x02	; 2
     d64:	2d 91       	ld	r18, X+
     d66:	3c 91       	ld	r19, X
     d68:	13 97       	sbiw	r26, 0x03	; 3
     d6a:	ad 01       	movw	r20, r26
     d6c:	21 15       	cp	r18, r1
     d6e:	31 05       	cpc	r19, r1
     d70:	09 f1       	breq	.+66     	; 0xdb4 <free+0xa2>
     d72:	d9 01       	movw	r26, r18
     d74:	f3 cf       	rjmp	.-26     	; 0xd5c <free+0x4a>
     d76:	9d 01       	movw	r18, r26
     d78:	da 01       	movw	r26, r20
     d7a:	33 83       	std	Z+3, r19	; 0x03
     d7c:	22 83       	std	Z+2, r18	; 0x02
     d7e:	60 81       	ld	r22, Z
     d80:	71 81       	ldd	r23, Z+1	; 0x01
     d82:	86 0f       	add	r24, r22
     d84:	97 1f       	adc	r25, r23
     d86:	82 17       	cp	r24, r18
     d88:	93 07       	cpc	r25, r19
     d8a:	69 f4       	brne	.+26     	; 0xda6 <free+0x94>
     d8c:	ec 01       	movw	r28, r24
     d8e:	28 81       	ld	r18, Y
     d90:	39 81       	ldd	r19, Y+1	; 0x01
     d92:	26 0f       	add	r18, r22
     d94:	37 1f       	adc	r19, r23
     d96:	2e 5f       	subi	r18, 0xFE	; 254
     d98:	3f 4f       	sbci	r19, 0xFF	; 255
     d9a:	31 83       	std	Z+1, r19	; 0x01
     d9c:	20 83       	st	Z, r18
     d9e:	8a 81       	ldd	r24, Y+2	; 0x02
     da0:	9b 81       	ldd	r25, Y+3	; 0x03
     da2:	93 83       	std	Z+3, r25	; 0x03
     da4:	82 83       	std	Z+2, r24	; 0x02
     da6:	45 2b       	or	r20, r21
     da8:	29 f4       	brne	.+10     	; 0xdb4 <free+0xa2>
     daa:	f0 93 c8 02 	sts	0x02C8, r31	; 0x8002c8 <__flp+0x1>
     dae:	e0 93 c7 02 	sts	0x02C7, r30	; 0x8002c7 <__flp>
     db2:	42 c0       	rjmp	.+132    	; 0xe38 <free+0x126>
     db4:	13 96       	adiw	r26, 0x03	; 3
     db6:	fc 93       	st	X, r31
     db8:	ee 93       	st	-X, r30
     dba:	12 97       	sbiw	r26, 0x02	; 2
     dbc:	ed 01       	movw	r28, r26
     dbe:	49 91       	ld	r20, Y+
     dc0:	59 91       	ld	r21, Y+
     dc2:	9e 01       	movw	r18, r28
     dc4:	24 0f       	add	r18, r20
     dc6:	35 1f       	adc	r19, r21
     dc8:	e2 17       	cp	r30, r18
     dca:	f3 07       	cpc	r31, r19
     dcc:	71 f4       	brne	.+28     	; 0xdea <free+0xd8>
     dce:	80 81       	ld	r24, Z
     dd0:	91 81       	ldd	r25, Z+1	; 0x01
     dd2:	84 0f       	add	r24, r20
     dd4:	95 1f       	adc	r25, r21
     dd6:	02 96       	adiw	r24, 0x02	; 2
     dd8:	11 96       	adiw	r26, 0x01	; 1
     dda:	9c 93       	st	X, r25
     ddc:	8e 93       	st	-X, r24
     dde:	82 81       	ldd	r24, Z+2	; 0x02
     de0:	93 81       	ldd	r25, Z+3	; 0x03
     de2:	13 96       	adiw	r26, 0x03	; 3
     de4:	9c 93       	st	X, r25
     de6:	8e 93       	st	-X, r24
     de8:	12 97       	sbiw	r26, 0x02	; 2
     dea:	e0 e0       	ldi	r30, 0x00	; 0
     dec:	f0 e0       	ldi	r31, 0x00	; 0
     dee:	d8 01       	movw	r26, r16
     df0:	12 96       	adiw	r26, 0x02	; 2
     df2:	8d 91       	ld	r24, X+
     df4:	9c 91       	ld	r25, X
     df6:	13 97       	sbiw	r26, 0x03	; 3
     df8:	00 97       	sbiw	r24, 0x00	; 0
     dfa:	19 f0       	breq	.+6      	; 0xe02 <free+0xf0>
     dfc:	f8 01       	movw	r30, r16
     dfe:	8c 01       	movw	r16, r24
     e00:	f6 cf       	rjmp	.-20     	; 0xdee <free+0xdc>
     e02:	8d 91       	ld	r24, X+
     e04:	9c 91       	ld	r25, X
     e06:	98 01       	movw	r18, r16
     e08:	2e 5f       	subi	r18, 0xFE	; 254
     e0a:	3f 4f       	sbci	r19, 0xFF	; 255
     e0c:	82 0f       	add	r24, r18
     e0e:	93 1f       	adc	r25, r19
     e10:	20 91 c5 02 	lds	r18, 0x02C5	; 0x8002c5 <__brkval>
     e14:	30 91 c6 02 	lds	r19, 0x02C6	; 0x8002c6 <__brkval+0x1>
     e18:	28 17       	cp	r18, r24
     e1a:	39 07       	cpc	r19, r25
     e1c:	69 f4       	brne	.+26     	; 0xe38 <free+0x126>
     e1e:	30 97       	sbiw	r30, 0x00	; 0
     e20:	29 f4       	brne	.+10     	; 0xe2c <free+0x11a>
     e22:	10 92 c8 02 	sts	0x02C8, r1	; 0x8002c8 <__flp+0x1>
     e26:	10 92 c7 02 	sts	0x02C7, r1	; 0x8002c7 <__flp>
     e2a:	02 c0       	rjmp	.+4      	; 0xe30 <free+0x11e>
     e2c:	13 82       	std	Z+3, r1	; 0x03
     e2e:	12 82       	std	Z+2, r1	; 0x02
     e30:	10 93 c6 02 	sts	0x02C6, r17	; 0x8002c6 <__brkval+0x1>
     e34:	00 93 c5 02 	sts	0x02C5, r16	; 0x8002c5 <__brkval>
     e38:	df 91       	pop	r29
     e3a:	cf 91       	pop	r28
     e3c:	1f 91       	pop	r17
     e3e:	0f 91       	pop	r16
     e40:	08 95       	ret

00000e42 <do_rand>:
     e42:	8f 92       	push	r8
     e44:	9f 92       	push	r9
     e46:	af 92       	push	r10
     e48:	bf 92       	push	r11
     e4a:	cf 92       	push	r12
     e4c:	df 92       	push	r13
     e4e:	ef 92       	push	r14
     e50:	ff 92       	push	r15
     e52:	cf 93       	push	r28
     e54:	df 93       	push	r29
     e56:	ec 01       	movw	r28, r24
     e58:	68 81       	ld	r22, Y
     e5a:	79 81       	ldd	r23, Y+1	; 0x01
     e5c:	8a 81       	ldd	r24, Y+2	; 0x02
     e5e:	9b 81       	ldd	r25, Y+3	; 0x03
     e60:	61 15       	cp	r22, r1
     e62:	71 05       	cpc	r23, r1
     e64:	81 05       	cpc	r24, r1
     e66:	91 05       	cpc	r25, r1
     e68:	21 f4       	brne	.+8      	; 0xe72 <do_rand+0x30>
     e6a:	64 e2       	ldi	r22, 0x24	; 36
     e6c:	79 ed       	ldi	r23, 0xD9	; 217
     e6e:	8b e5       	ldi	r24, 0x5B	; 91
     e70:	97 e0       	ldi	r25, 0x07	; 7
     e72:	2d e1       	ldi	r18, 0x1D	; 29
     e74:	33 ef       	ldi	r19, 0xF3	; 243
     e76:	41 e0       	ldi	r20, 0x01	; 1
     e78:	50 e0       	ldi	r21, 0x00	; 0
     e7a:	3a d5       	rcall	.+2676   	; 0x18f0 <__divmodsi4>
     e7c:	49 01       	movw	r8, r18
     e7e:	5a 01       	movw	r10, r20
     e80:	9b 01       	movw	r18, r22
     e82:	ac 01       	movw	r20, r24
     e84:	a7 ea       	ldi	r26, 0xA7	; 167
     e86:	b1 e4       	ldi	r27, 0x41	; 65
     e88:	4f d5       	rcall	.+2718   	; 0x1928 <__muluhisi3>
     e8a:	6b 01       	movw	r12, r22
     e8c:	7c 01       	movw	r14, r24
     e8e:	ac ee       	ldi	r26, 0xEC	; 236
     e90:	b4 ef       	ldi	r27, 0xF4	; 244
     e92:	a5 01       	movw	r20, r10
     e94:	94 01       	movw	r18, r8
     e96:	54 d5       	rcall	.+2728   	; 0x1940 <__mulohisi3>
     e98:	dc 01       	movw	r26, r24
     e9a:	cb 01       	movw	r24, r22
     e9c:	8c 0d       	add	r24, r12
     e9e:	9d 1d       	adc	r25, r13
     ea0:	ae 1d       	adc	r26, r14
     ea2:	bf 1d       	adc	r27, r15
     ea4:	b7 ff       	sbrs	r27, 7
     ea6:	03 c0       	rjmp	.+6      	; 0xeae <do_rand+0x6c>
     ea8:	01 97       	sbiw	r24, 0x01	; 1
     eaa:	a1 09       	sbc	r26, r1
     eac:	b0 48       	sbci	r27, 0x80	; 128
     eae:	88 83       	st	Y, r24
     eb0:	99 83       	std	Y+1, r25	; 0x01
     eb2:	aa 83       	std	Y+2, r26	; 0x02
     eb4:	bb 83       	std	Y+3, r27	; 0x03
     eb6:	9f 77       	andi	r25, 0x7F	; 127
     eb8:	df 91       	pop	r29
     eba:	cf 91       	pop	r28
     ebc:	ff 90       	pop	r15
     ebe:	ef 90       	pop	r14
     ec0:	df 90       	pop	r13
     ec2:	cf 90       	pop	r12
     ec4:	bf 90       	pop	r11
     ec6:	af 90       	pop	r10
     ec8:	9f 90       	pop	r9
     eca:	8f 90       	pop	r8
     ecc:	08 95       	ret

00000ece <rand_r>:
     ece:	b9 cf       	rjmp	.-142    	; 0xe42 <do_rand>

00000ed0 <rand>:
     ed0:	86 e0       	ldi	r24, 0x06	; 6
     ed2:	91 e0       	ldi	r25, 0x01	; 1
     ed4:	b6 cf       	rjmp	.-148    	; 0xe42 <do_rand>

00000ed6 <srand>:
     ed6:	a0 e0       	ldi	r26, 0x00	; 0
     ed8:	b0 e0       	ldi	r27, 0x00	; 0
     eda:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <next>
     ede:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <next+0x1>
     ee2:	a0 93 08 01 	sts	0x0108, r26	; 0x800108 <next+0x2>
     ee6:	b0 93 09 01 	sts	0x0109, r27	; 0x800109 <next+0x3>
     eea:	08 95       	ret

00000eec <atof>:
     eec:	66 27       	eor	r22, r22
     eee:	77 27       	eor	r23, r23
     ef0:	63 c2       	rjmp	.+1222   	; 0x13b8 <strtod>

00000ef2 <strdup>:
     ef2:	0f 93       	push	r16
     ef4:	1f 93       	push	r17
     ef6:	cf 93       	push	r28
     ef8:	df 93       	push	r29
     efa:	8c 01       	movw	r16, r24
     efc:	fc 01       	movw	r30, r24
     efe:	01 90       	ld	r0, Z+
     f00:	00 20       	and	r0, r0
     f02:	e9 f7       	brne	.-6      	; 0xefe <strdup+0xc>
     f04:	cf 01       	movw	r24, r30
     f06:	80 1b       	sub	r24, r16
     f08:	91 0b       	sbc	r25, r17
     f0a:	6e de       	rcall	.-804    	; 0xbe8 <malloc>
     f0c:	ec 01       	movw	r28, r24
     f0e:	00 97       	sbiw	r24, 0x00	; 0
     f10:	11 f0       	breq	.+4      	; 0xf16 <strdup+0x24>
     f12:	b8 01       	movw	r22, r16
     f14:	06 d0       	rcall	.+12     	; 0xf22 <strcpy>
     f16:	ce 01       	movw	r24, r28
     f18:	df 91       	pop	r29
     f1a:	cf 91       	pop	r28
     f1c:	1f 91       	pop	r17
     f1e:	0f 91       	pop	r16
     f20:	08 95       	ret

00000f22 <strcpy>:
     f22:	fb 01       	movw	r30, r22
     f24:	dc 01       	movw	r26, r24
     f26:	01 90       	ld	r0, Z+
     f28:	0d 92       	st	X+, r0
     f2a:	00 20       	and	r0, r0
     f2c:	e1 f7       	brne	.-8      	; 0xf26 <strcpy+0x4>
     f2e:	08 95       	ret

00000f30 <strncpy>:
     f30:	fb 01       	movw	r30, r22
     f32:	dc 01       	movw	r26, r24
     f34:	41 50       	subi	r20, 0x01	; 1
     f36:	50 40       	sbci	r21, 0x00	; 0
     f38:	48 f0       	brcs	.+18     	; 0xf4c <strncpy+0x1c>
     f3a:	01 90       	ld	r0, Z+
     f3c:	0d 92       	st	X+, r0
     f3e:	00 20       	and	r0, r0
     f40:	c9 f7       	brne	.-14     	; 0xf34 <strncpy+0x4>
     f42:	01 c0       	rjmp	.+2      	; 0xf46 <strncpy+0x16>
     f44:	1d 92       	st	X+, r1
     f46:	41 50       	subi	r20, 0x01	; 1
     f48:	50 40       	sbci	r21, 0x00	; 0
     f4a:	e0 f7       	brcc	.-8      	; 0xf44 <strncpy+0x14>
     f4c:	08 95       	ret

00000f4e <strsep>:
     f4e:	fc 01       	movw	r30, r24
     f50:	a0 81       	ld	r26, Z
     f52:	b1 81       	ldd	r27, Z+1	; 0x01
     f54:	ad 01       	movw	r20, r26
     f56:	10 96       	adiw	r26, 0x00	; 0
     f58:	81 f0       	breq	.+32     	; 0xf7a <strsep+0x2c>
     f5a:	3d 91       	ld	r19, X+
     f5c:	fb 01       	movw	r30, r22
     f5e:	01 90       	ld	r0, Z+
     f60:	03 16       	cp	r0, r19
     f62:	01 10       	cpse	r0, r1
     f64:	e1 f7       	brne	.-8      	; 0xf5e <strsep+0x10>
     f66:	c9 f7       	brne	.-14     	; 0xf5a <strsep+0xc>
     f68:	00 20       	and	r0, r0
     f6a:	11 f4       	brne	.+4      	; 0xf70 <strsep+0x22>
     f6c:	d0 01       	movw	r26, r0
     f6e:	02 c0       	rjmp	.+4      	; 0xf74 <strsep+0x26>
     f70:	1e 92       	st	-X, r1
     f72:	11 96       	adiw	r26, 0x01	; 1
     f74:	fc 01       	movw	r30, r24
     f76:	a0 83       	st	Z, r26
     f78:	b1 83       	std	Z+1, r27	; 0x01
     f7a:	ca 01       	movw	r24, r20
     f7c:	08 95       	ret

00000f7e <sprintf>:
     f7e:	0f 93       	push	r16
     f80:	1f 93       	push	r17
     f82:	cf 93       	push	r28
     f84:	df 93       	push	r29
     f86:	cd b7       	in	r28, 0x3d	; 61
     f88:	de b7       	in	r29, 0x3e	; 62
     f8a:	2e 97       	sbiw	r28, 0x0e	; 14
     f8c:	0f b6       	in	r0, 0x3f	; 63
     f8e:	f8 94       	cli
     f90:	de bf       	out	0x3e, r29	; 62
     f92:	0f be       	out	0x3f, r0	; 63
     f94:	cd bf       	out	0x3d, r28	; 61
     f96:	0d 89       	ldd	r16, Y+21	; 0x15
     f98:	1e 89       	ldd	r17, Y+22	; 0x16
     f9a:	86 e0       	ldi	r24, 0x06	; 6
     f9c:	8c 83       	std	Y+4, r24	; 0x04
     f9e:	1a 83       	std	Y+2, r17	; 0x02
     fa0:	09 83       	std	Y+1, r16	; 0x01
     fa2:	8f ef       	ldi	r24, 0xFF	; 255
     fa4:	9f e7       	ldi	r25, 0x7F	; 127
     fa6:	9e 83       	std	Y+6, r25	; 0x06
     fa8:	8d 83       	std	Y+5, r24	; 0x05
     faa:	ae 01       	movw	r20, r28
     fac:	47 5e       	subi	r20, 0xE7	; 231
     fae:	5f 4f       	sbci	r21, 0xFF	; 255
     fb0:	6f 89       	ldd	r22, Y+23	; 0x17
     fb2:	78 8d       	ldd	r23, Y+24	; 0x18
     fb4:	ce 01       	movw	r24, r28
     fb6:	01 96       	adiw	r24, 0x01	; 1
     fb8:	11 d0       	rcall	.+34     	; 0xfdc <vfprintf>
     fba:	2f 81       	ldd	r18, Y+7	; 0x07
     fbc:	38 85       	ldd	r19, Y+8	; 0x08
     fbe:	f8 01       	movw	r30, r16
     fc0:	e2 0f       	add	r30, r18
     fc2:	f3 1f       	adc	r31, r19
     fc4:	10 82       	st	Z, r1
     fc6:	2e 96       	adiw	r28, 0x0e	; 14
     fc8:	0f b6       	in	r0, 0x3f	; 63
     fca:	f8 94       	cli
     fcc:	de bf       	out	0x3e, r29	; 62
     fce:	0f be       	out	0x3f, r0	; 63
     fd0:	cd bf       	out	0x3d, r28	; 61
     fd2:	df 91       	pop	r29
     fd4:	cf 91       	pop	r28
     fd6:	1f 91       	pop	r17
     fd8:	0f 91       	pop	r16
     fda:	08 95       	ret

00000fdc <vfprintf>:
     fdc:	2f 92       	push	r2
     fde:	3f 92       	push	r3
     fe0:	4f 92       	push	r4
     fe2:	5f 92       	push	r5
     fe4:	6f 92       	push	r6
     fe6:	7f 92       	push	r7
     fe8:	8f 92       	push	r8
     fea:	9f 92       	push	r9
     fec:	af 92       	push	r10
     fee:	bf 92       	push	r11
     ff0:	cf 92       	push	r12
     ff2:	df 92       	push	r13
     ff4:	ef 92       	push	r14
     ff6:	ff 92       	push	r15
     ff8:	0f 93       	push	r16
     ffa:	1f 93       	push	r17
     ffc:	cf 93       	push	r28
     ffe:	df 93       	push	r29
    1000:	cd b7       	in	r28, 0x3d	; 61
    1002:	de b7       	in	r29, 0x3e	; 62
    1004:	2c 97       	sbiw	r28, 0x0c	; 12
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	f8 94       	cli
    100a:	de bf       	out	0x3e, r29	; 62
    100c:	0f be       	out	0x3f, r0	; 63
    100e:	cd bf       	out	0x3d, r28	; 61
    1010:	7c 01       	movw	r14, r24
    1012:	6b 01       	movw	r12, r22
    1014:	8a 01       	movw	r16, r20
    1016:	fc 01       	movw	r30, r24
    1018:	17 82       	std	Z+7, r1	; 0x07
    101a:	16 82       	std	Z+6, r1	; 0x06
    101c:	83 81       	ldd	r24, Z+3	; 0x03
    101e:	81 ff       	sbrs	r24, 1
    1020:	b0 c1       	rjmp	.+864    	; 0x1382 <__stack+0x283>
    1022:	ce 01       	movw	r24, r28
    1024:	01 96       	adiw	r24, 0x01	; 1
    1026:	4c 01       	movw	r8, r24
    1028:	f7 01       	movw	r30, r14
    102a:	93 81       	ldd	r25, Z+3	; 0x03
    102c:	f6 01       	movw	r30, r12
    102e:	93 fd       	sbrc	r25, 3
    1030:	85 91       	lpm	r24, Z+
    1032:	93 ff       	sbrs	r25, 3
    1034:	81 91       	ld	r24, Z+
    1036:	6f 01       	movw	r12, r30
    1038:	88 23       	and	r24, r24
    103a:	09 f4       	brne	.+2      	; 0x103e <vfprintf+0x62>
    103c:	9e c1       	rjmp	.+828    	; 0x137a <__stack+0x27b>
    103e:	85 32       	cpi	r24, 0x25	; 37
    1040:	39 f4       	brne	.+14     	; 0x1050 <vfprintf+0x74>
    1042:	93 fd       	sbrc	r25, 3
    1044:	85 91       	lpm	r24, Z+
    1046:	93 ff       	sbrs	r25, 3
    1048:	81 91       	ld	r24, Z+
    104a:	6f 01       	movw	r12, r30
    104c:	85 32       	cpi	r24, 0x25	; 37
    104e:	21 f4       	brne	.+8      	; 0x1058 <vfprintf+0x7c>
    1050:	b7 01       	movw	r22, r14
    1052:	90 e0       	ldi	r25, 0x00	; 0
    1054:	4d d3       	rcall	.+1690   	; 0x16f0 <fputc>
    1056:	e8 cf       	rjmp	.-48     	; 0x1028 <vfprintf+0x4c>
    1058:	51 2c       	mov	r5, r1
    105a:	31 2c       	mov	r3, r1
    105c:	20 e0       	ldi	r18, 0x00	; 0
    105e:	20 32       	cpi	r18, 0x20	; 32
    1060:	a0 f4       	brcc	.+40     	; 0x108a <vfprintf+0xae>
    1062:	8b 32       	cpi	r24, 0x2B	; 43
    1064:	69 f0       	breq	.+26     	; 0x1080 <vfprintf+0xa4>
    1066:	30 f4       	brcc	.+12     	; 0x1074 <vfprintf+0x98>
    1068:	80 32       	cpi	r24, 0x20	; 32
    106a:	59 f0       	breq	.+22     	; 0x1082 <vfprintf+0xa6>
    106c:	83 32       	cpi	r24, 0x23	; 35
    106e:	69 f4       	brne	.+26     	; 0x108a <vfprintf+0xae>
    1070:	20 61       	ori	r18, 0x10	; 16
    1072:	2c c0       	rjmp	.+88     	; 0x10cc <vfprintf+0xf0>
    1074:	8d 32       	cpi	r24, 0x2D	; 45
    1076:	39 f0       	breq	.+14     	; 0x1086 <vfprintf+0xaa>
    1078:	80 33       	cpi	r24, 0x30	; 48
    107a:	39 f4       	brne	.+14     	; 0x108a <vfprintf+0xae>
    107c:	21 60       	ori	r18, 0x01	; 1
    107e:	26 c0       	rjmp	.+76     	; 0x10cc <vfprintf+0xf0>
    1080:	22 60       	ori	r18, 0x02	; 2
    1082:	24 60       	ori	r18, 0x04	; 4
    1084:	23 c0       	rjmp	.+70     	; 0x10cc <vfprintf+0xf0>
    1086:	28 60       	ori	r18, 0x08	; 8
    1088:	21 c0       	rjmp	.+66     	; 0x10cc <vfprintf+0xf0>
    108a:	27 fd       	sbrc	r18, 7
    108c:	27 c0       	rjmp	.+78     	; 0x10dc <vfprintf+0x100>
    108e:	30 ed       	ldi	r19, 0xD0	; 208
    1090:	38 0f       	add	r19, r24
    1092:	3a 30       	cpi	r19, 0x0A	; 10
    1094:	78 f4       	brcc	.+30     	; 0x10b4 <vfprintf+0xd8>
    1096:	26 ff       	sbrs	r18, 6
    1098:	06 c0       	rjmp	.+12     	; 0x10a6 <vfprintf+0xca>
    109a:	fa e0       	ldi	r31, 0x0A	; 10
    109c:	5f 9e       	mul	r5, r31
    109e:	30 0d       	add	r19, r0
    10a0:	11 24       	eor	r1, r1
    10a2:	53 2e       	mov	r5, r19
    10a4:	13 c0       	rjmp	.+38     	; 0x10cc <vfprintf+0xf0>
    10a6:	8a e0       	ldi	r24, 0x0A	; 10
    10a8:	38 9e       	mul	r3, r24
    10aa:	30 0d       	add	r19, r0
    10ac:	11 24       	eor	r1, r1
    10ae:	33 2e       	mov	r3, r19
    10b0:	20 62       	ori	r18, 0x20	; 32
    10b2:	0c c0       	rjmp	.+24     	; 0x10cc <vfprintf+0xf0>
    10b4:	8e 32       	cpi	r24, 0x2E	; 46
    10b6:	21 f4       	brne	.+8      	; 0x10c0 <vfprintf+0xe4>
    10b8:	26 fd       	sbrc	r18, 6
    10ba:	5f c1       	rjmp	.+702    	; 0x137a <__stack+0x27b>
    10bc:	20 64       	ori	r18, 0x40	; 64
    10be:	06 c0       	rjmp	.+12     	; 0x10cc <vfprintf+0xf0>
    10c0:	8c 36       	cpi	r24, 0x6C	; 108
    10c2:	11 f4       	brne	.+4      	; 0x10c8 <vfprintf+0xec>
    10c4:	20 68       	ori	r18, 0x80	; 128
    10c6:	02 c0       	rjmp	.+4      	; 0x10cc <vfprintf+0xf0>
    10c8:	88 36       	cpi	r24, 0x68	; 104
    10ca:	41 f4       	brne	.+16     	; 0x10dc <vfprintf+0x100>
    10cc:	f6 01       	movw	r30, r12
    10ce:	93 fd       	sbrc	r25, 3
    10d0:	85 91       	lpm	r24, Z+
    10d2:	93 ff       	sbrs	r25, 3
    10d4:	81 91       	ld	r24, Z+
    10d6:	6f 01       	movw	r12, r30
    10d8:	81 11       	cpse	r24, r1
    10da:	c1 cf       	rjmp	.-126    	; 0x105e <vfprintf+0x82>
    10dc:	98 2f       	mov	r25, r24
    10de:	9f 7d       	andi	r25, 0xDF	; 223
    10e0:	95 54       	subi	r25, 0x45	; 69
    10e2:	93 30       	cpi	r25, 0x03	; 3
    10e4:	28 f4       	brcc	.+10     	; 0x10f0 <vfprintf+0x114>
    10e6:	0c 5f       	subi	r16, 0xFC	; 252
    10e8:	1f 4f       	sbci	r17, 0xFF	; 255
    10ea:	ff e3       	ldi	r31, 0x3F	; 63
    10ec:	f9 83       	std	Y+1, r31	; 0x01
    10ee:	0d c0       	rjmp	.+26     	; 0x110a <__stack+0xb>
    10f0:	83 36       	cpi	r24, 0x63	; 99
    10f2:	31 f0       	breq	.+12     	; 0x1100 <__stack+0x1>
    10f4:	83 37       	cpi	r24, 0x73	; 115
    10f6:	71 f0       	breq	.+28     	; 0x1114 <__stack+0x15>
    10f8:	83 35       	cpi	r24, 0x53	; 83
    10fa:	09 f0       	breq	.+2      	; 0x10fe <vfprintf+0x122>
    10fc:	57 c0       	rjmp	.+174    	; 0x11ac <__stack+0xad>
    10fe:	21 c0       	rjmp	.+66     	; 0x1142 <__stack+0x43>
    1100:	f8 01       	movw	r30, r16
    1102:	80 81       	ld	r24, Z
    1104:	89 83       	std	Y+1, r24	; 0x01
    1106:	0e 5f       	subi	r16, 0xFE	; 254
    1108:	1f 4f       	sbci	r17, 0xFF	; 255
    110a:	44 24       	eor	r4, r4
    110c:	43 94       	inc	r4
    110e:	51 2c       	mov	r5, r1
    1110:	54 01       	movw	r10, r8
    1112:	14 c0       	rjmp	.+40     	; 0x113c <__stack+0x3d>
    1114:	38 01       	movw	r6, r16
    1116:	f2 e0       	ldi	r31, 0x02	; 2
    1118:	6f 0e       	add	r6, r31
    111a:	71 1c       	adc	r7, r1
    111c:	f8 01       	movw	r30, r16
    111e:	a0 80       	ld	r10, Z
    1120:	b1 80       	ldd	r11, Z+1	; 0x01
    1122:	26 ff       	sbrs	r18, 6
    1124:	03 c0       	rjmp	.+6      	; 0x112c <__stack+0x2d>
    1126:	65 2d       	mov	r22, r5
    1128:	70 e0       	ldi	r23, 0x00	; 0
    112a:	02 c0       	rjmp	.+4      	; 0x1130 <__stack+0x31>
    112c:	6f ef       	ldi	r22, 0xFF	; 255
    112e:	7f ef       	ldi	r23, 0xFF	; 255
    1130:	c5 01       	movw	r24, r10
    1132:	2c 87       	std	Y+12, r18	; 0x0c
    1134:	d2 d2       	rcall	.+1444   	; 0x16da <strnlen>
    1136:	2c 01       	movw	r4, r24
    1138:	83 01       	movw	r16, r6
    113a:	2c 85       	ldd	r18, Y+12	; 0x0c
    113c:	2f 77       	andi	r18, 0x7F	; 127
    113e:	22 2e       	mov	r2, r18
    1140:	16 c0       	rjmp	.+44     	; 0x116e <__stack+0x6f>
    1142:	38 01       	movw	r6, r16
    1144:	f2 e0       	ldi	r31, 0x02	; 2
    1146:	6f 0e       	add	r6, r31
    1148:	71 1c       	adc	r7, r1
    114a:	f8 01       	movw	r30, r16
    114c:	a0 80       	ld	r10, Z
    114e:	b1 80       	ldd	r11, Z+1	; 0x01
    1150:	26 ff       	sbrs	r18, 6
    1152:	03 c0       	rjmp	.+6      	; 0x115a <__stack+0x5b>
    1154:	65 2d       	mov	r22, r5
    1156:	70 e0       	ldi	r23, 0x00	; 0
    1158:	02 c0       	rjmp	.+4      	; 0x115e <__stack+0x5f>
    115a:	6f ef       	ldi	r22, 0xFF	; 255
    115c:	7f ef       	ldi	r23, 0xFF	; 255
    115e:	c5 01       	movw	r24, r10
    1160:	2c 87       	std	Y+12, r18	; 0x0c
    1162:	b0 d2       	rcall	.+1376   	; 0x16c4 <strnlen_P>
    1164:	2c 01       	movw	r4, r24
    1166:	2c 85       	ldd	r18, Y+12	; 0x0c
    1168:	20 68       	ori	r18, 0x80	; 128
    116a:	22 2e       	mov	r2, r18
    116c:	83 01       	movw	r16, r6
    116e:	23 fc       	sbrc	r2, 3
    1170:	19 c0       	rjmp	.+50     	; 0x11a4 <__stack+0xa5>
    1172:	83 2d       	mov	r24, r3
    1174:	90 e0       	ldi	r25, 0x00	; 0
    1176:	48 16       	cp	r4, r24
    1178:	59 06       	cpc	r5, r25
    117a:	a0 f4       	brcc	.+40     	; 0x11a4 <__stack+0xa5>
    117c:	b7 01       	movw	r22, r14
    117e:	80 e2       	ldi	r24, 0x20	; 32
    1180:	90 e0       	ldi	r25, 0x00	; 0
    1182:	b6 d2       	rcall	.+1388   	; 0x16f0 <fputc>
    1184:	3a 94       	dec	r3
    1186:	f5 cf       	rjmp	.-22     	; 0x1172 <__stack+0x73>
    1188:	f5 01       	movw	r30, r10
    118a:	27 fc       	sbrc	r2, 7
    118c:	85 91       	lpm	r24, Z+
    118e:	27 fe       	sbrs	r2, 7
    1190:	81 91       	ld	r24, Z+
    1192:	5f 01       	movw	r10, r30
    1194:	b7 01       	movw	r22, r14
    1196:	90 e0       	ldi	r25, 0x00	; 0
    1198:	ab d2       	rcall	.+1366   	; 0x16f0 <fputc>
    119a:	31 10       	cpse	r3, r1
    119c:	3a 94       	dec	r3
    119e:	f1 e0       	ldi	r31, 0x01	; 1
    11a0:	4f 1a       	sub	r4, r31
    11a2:	51 08       	sbc	r5, r1
    11a4:	41 14       	cp	r4, r1
    11a6:	51 04       	cpc	r5, r1
    11a8:	79 f7       	brne	.-34     	; 0x1188 <__stack+0x89>
    11aa:	de c0       	rjmp	.+444    	; 0x1368 <__stack+0x269>
    11ac:	84 36       	cpi	r24, 0x64	; 100
    11ae:	11 f0       	breq	.+4      	; 0x11b4 <__stack+0xb5>
    11b0:	89 36       	cpi	r24, 0x69	; 105
    11b2:	31 f5       	brne	.+76     	; 0x1200 <__stack+0x101>
    11b4:	f8 01       	movw	r30, r16
    11b6:	27 ff       	sbrs	r18, 7
    11b8:	07 c0       	rjmp	.+14     	; 0x11c8 <__stack+0xc9>
    11ba:	60 81       	ld	r22, Z
    11bc:	71 81       	ldd	r23, Z+1	; 0x01
    11be:	82 81       	ldd	r24, Z+2	; 0x02
    11c0:	93 81       	ldd	r25, Z+3	; 0x03
    11c2:	0c 5f       	subi	r16, 0xFC	; 252
    11c4:	1f 4f       	sbci	r17, 0xFF	; 255
    11c6:	08 c0       	rjmp	.+16     	; 0x11d8 <__stack+0xd9>
    11c8:	60 81       	ld	r22, Z
    11ca:	71 81       	ldd	r23, Z+1	; 0x01
    11cc:	07 2e       	mov	r0, r23
    11ce:	00 0c       	add	r0, r0
    11d0:	88 0b       	sbc	r24, r24
    11d2:	99 0b       	sbc	r25, r25
    11d4:	0e 5f       	subi	r16, 0xFE	; 254
    11d6:	1f 4f       	sbci	r17, 0xFF	; 255
    11d8:	2f 76       	andi	r18, 0x6F	; 111
    11da:	72 2e       	mov	r7, r18
    11dc:	97 ff       	sbrs	r25, 7
    11de:	09 c0       	rjmp	.+18     	; 0x11f2 <__stack+0xf3>
    11e0:	90 95       	com	r25
    11e2:	80 95       	com	r24
    11e4:	70 95       	com	r23
    11e6:	61 95       	neg	r22
    11e8:	7f 4f       	sbci	r23, 0xFF	; 255
    11ea:	8f 4f       	sbci	r24, 0xFF	; 255
    11ec:	9f 4f       	sbci	r25, 0xFF	; 255
    11ee:	20 68       	ori	r18, 0x80	; 128
    11f0:	72 2e       	mov	r7, r18
    11f2:	2a e0       	ldi	r18, 0x0A	; 10
    11f4:	30 e0       	ldi	r19, 0x00	; 0
    11f6:	a4 01       	movw	r20, r8
    11f8:	b3 d2       	rcall	.+1382   	; 0x1760 <__ultoa_invert>
    11fa:	a8 2e       	mov	r10, r24
    11fc:	a8 18       	sub	r10, r8
    11fe:	43 c0       	rjmp	.+134    	; 0x1286 <__stack+0x187>
    1200:	85 37       	cpi	r24, 0x75	; 117
    1202:	29 f4       	brne	.+10     	; 0x120e <__stack+0x10f>
    1204:	2f 7e       	andi	r18, 0xEF	; 239
    1206:	b2 2e       	mov	r11, r18
    1208:	2a e0       	ldi	r18, 0x0A	; 10
    120a:	30 e0       	ldi	r19, 0x00	; 0
    120c:	25 c0       	rjmp	.+74     	; 0x1258 <__stack+0x159>
    120e:	f2 2f       	mov	r31, r18
    1210:	f9 7f       	andi	r31, 0xF9	; 249
    1212:	bf 2e       	mov	r11, r31
    1214:	8f 36       	cpi	r24, 0x6F	; 111
    1216:	c1 f0       	breq	.+48     	; 0x1248 <__stack+0x149>
    1218:	18 f4       	brcc	.+6      	; 0x1220 <__stack+0x121>
    121a:	88 35       	cpi	r24, 0x58	; 88
    121c:	79 f0       	breq	.+30     	; 0x123c <__stack+0x13d>
    121e:	ad c0       	rjmp	.+346    	; 0x137a <__stack+0x27b>
    1220:	80 37       	cpi	r24, 0x70	; 112
    1222:	19 f0       	breq	.+6      	; 0x122a <__stack+0x12b>
    1224:	88 37       	cpi	r24, 0x78	; 120
    1226:	21 f0       	breq	.+8      	; 0x1230 <__stack+0x131>
    1228:	a8 c0       	rjmp	.+336    	; 0x137a <__stack+0x27b>
    122a:	2f 2f       	mov	r18, r31
    122c:	20 61       	ori	r18, 0x10	; 16
    122e:	b2 2e       	mov	r11, r18
    1230:	b4 fe       	sbrs	r11, 4
    1232:	0d c0       	rjmp	.+26     	; 0x124e <__stack+0x14f>
    1234:	8b 2d       	mov	r24, r11
    1236:	84 60       	ori	r24, 0x04	; 4
    1238:	b8 2e       	mov	r11, r24
    123a:	09 c0       	rjmp	.+18     	; 0x124e <__stack+0x14f>
    123c:	24 ff       	sbrs	r18, 4
    123e:	0a c0       	rjmp	.+20     	; 0x1254 <__stack+0x155>
    1240:	9f 2f       	mov	r25, r31
    1242:	96 60       	ori	r25, 0x06	; 6
    1244:	b9 2e       	mov	r11, r25
    1246:	06 c0       	rjmp	.+12     	; 0x1254 <__stack+0x155>
    1248:	28 e0       	ldi	r18, 0x08	; 8
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	05 c0       	rjmp	.+10     	; 0x1258 <__stack+0x159>
    124e:	20 e1       	ldi	r18, 0x10	; 16
    1250:	30 e0       	ldi	r19, 0x00	; 0
    1252:	02 c0       	rjmp	.+4      	; 0x1258 <__stack+0x159>
    1254:	20 e1       	ldi	r18, 0x10	; 16
    1256:	32 e0       	ldi	r19, 0x02	; 2
    1258:	f8 01       	movw	r30, r16
    125a:	b7 fe       	sbrs	r11, 7
    125c:	07 c0       	rjmp	.+14     	; 0x126c <__stack+0x16d>
    125e:	60 81       	ld	r22, Z
    1260:	71 81       	ldd	r23, Z+1	; 0x01
    1262:	82 81       	ldd	r24, Z+2	; 0x02
    1264:	93 81       	ldd	r25, Z+3	; 0x03
    1266:	0c 5f       	subi	r16, 0xFC	; 252
    1268:	1f 4f       	sbci	r17, 0xFF	; 255
    126a:	06 c0       	rjmp	.+12     	; 0x1278 <__stack+0x179>
    126c:	60 81       	ld	r22, Z
    126e:	71 81       	ldd	r23, Z+1	; 0x01
    1270:	80 e0       	ldi	r24, 0x00	; 0
    1272:	90 e0       	ldi	r25, 0x00	; 0
    1274:	0e 5f       	subi	r16, 0xFE	; 254
    1276:	1f 4f       	sbci	r17, 0xFF	; 255
    1278:	a4 01       	movw	r20, r8
    127a:	72 d2       	rcall	.+1252   	; 0x1760 <__ultoa_invert>
    127c:	a8 2e       	mov	r10, r24
    127e:	a8 18       	sub	r10, r8
    1280:	fb 2d       	mov	r31, r11
    1282:	ff 77       	andi	r31, 0x7F	; 127
    1284:	7f 2e       	mov	r7, r31
    1286:	76 fe       	sbrs	r7, 6
    1288:	0b c0       	rjmp	.+22     	; 0x12a0 <__stack+0x1a1>
    128a:	37 2d       	mov	r19, r7
    128c:	3e 7f       	andi	r19, 0xFE	; 254
    128e:	a5 14       	cp	r10, r5
    1290:	50 f4       	brcc	.+20     	; 0x12a6 <__stack+0x1a7>
    1292:	74 fe       	sbrs	r7, 4
    1294:	0a c0       	rjmp	.+20     	; 0x12aa <__stack+0x1ab>
    1296:	72 fc       	sbrc	r7, 2
    1298:	08 c0       	rjmp	.+16     	; 0x12aa <__stack+0x1ab>
    129a:	37 2d       	mov	r19, r7
    129c:	3e 7e       	andi	r19, 0xEE	; 238
    129e:	05 c0       	rjmp	.+10     	; 0x12aa <__stack+0x1ab>
    12a0:	ba 2c       	mov	r11, r10
    12a2:	37 2d       	mov	r19, r7
    12a4:	03 c0       	rjmp	.+6      	; 0x12ac <__stack+0x1ad>
    12a6:	ba 2c       	mov	r11, r10
    12a8:	01 c0       	rjmp	.+2      	; 0x12ac <__stack+0x1ad>
    12aa:	b5 2c       	mov	r11, r5
    12ac:	34 ff       	sbrs	r19, 4
    12ae:	0d c0       	rjmp	.+26     	; 0x12ca <__stack+0x1cb>
    12b0:	fe 01       	movw	r30, r28
    12b2:	ea 0d       	add	r30, r10
    12b4:	f1 1d       	adc	r31, r1
    12b6:	80 81       	ld	r24, Z
    12b8:	80 33       	cpi	r24, 0x30	; 48
    12ba:	11 f4       	brne	.+4      	; 0x12c0 <__stack+0x1c1>
    12bc:	39 7e       	andi	r19, 0xE9	; 233
    12be:	09 c0       	rjmp	.+18     	; 0x12d2 <__stack+0x1d3>
    12c0:	32 ff       	sbrs	r19, 2
    12c2:	06 c0       	rjmp	.+12     	; 0x12d0 <__stack+0x1d1>
    12c4:	b3 94       	inc	r11
    12c6:	b3 94       	inc	r11
    12c8:	04 c0       	rjmp	.+8      	; 0x12d2 <__stack+0x1d3>
    12ca:	83 2f       	mov	r24, r19
    12cc:	86 78       	andi	r24, 0x86	; 134
    12ce:	09 f0       	breq	.+2      	; 0x12d2 <__stack+0x1d3>
    12d0:	b3 94       	inc	r11
    12d2:	33 fd       	sbrc	r19, 3
    12d4:	12 c0       	rjmp	.+36     	; 0x12fa <__stack+0x1fb>
    12d6:	30 ff       	sbrs	r19, 0
    12d8:	06 c0       	rjmp	.+12     	; 0x12e6 <__stack+0x1e7>
    12da:	5a 2c       	mov	r5, r10
    12dc:	b3 14       	cp	r11, r3
    12de:	18 f4       	brcc	.+6      	; 0x12e6 <__stack+0x1e7>
    12e0:	53 0c       	add	r5, r3
    12e2:	5b 18       	sub	r5, r11
    12e4:	b3 2c       	mov	r11, r3
    12e6:	b3 14       	cp	r11, r3
    12e8:	60 f4       	brcc	.+24     	; 0x1302 <__stack+0x203>
    12ea:	b7 01       	movw	r22, r14
    12ec:	80 e2       	ldi	r24, 0x20	; 32
    12ee:	90 e0       	ldi	r25, 0x00	; 0
    12f0:	3c 87       	std	Y+12, r19	; 0x0c
    12f2:	fe d1       	rcall	.+1020   	; 0x16f0 <fputc>
    12f4:	b3 94       	inc	r11
    12f6:	3c 85       	ldd	r19, Y+12	; 0x0c
    12f8:	f6 cf       	rjmp	.-20     	; 0x12e6 <__stack+0x1e7>
    12fa:	b3 14       	cp	r11, r3
    12fc:	10 f4       	brcc	.+4      	; 0x1302 <__stack+0x203>
    12fe:	3b 18       	sub	r3, r11
    1300:	01 c0       	rjmp	.+2      	; 0x1304 <__stack+0x205>
    1302:	31 2c       	mov	r3, r1
    1304:	34 ff       	sbrs	r19, 4
    1306:	11 c0       	rjmp	.+34     	; 0x132a <__stack+0x22b>
    1308:	b7 01       	movw	r22, r14
    130a:	80 e3       	ldi	r24, 0x30	; 48
    130c:	90 e0       	ldi	r25, 0x00	; 0
    130e:	3c 87       	std	Y+12, r19	; 0x0c
    1310:	ef d1       	rcall	.+990    	; 0x16f0 <fputc>
    1312:	3c 85       	ldd	r19, Y+12	; 0x0c
    1314:	32 ff       	sbrs	r19, 2
    1316:	16 c0       	rjmp	.+44     	; 0x1344 <__stack+0x245>
    1318:	31 fd       	sbrc	r19, 1
    131a:	03 c0       	rjmp	.+6      	; 0x1322 <__stack+0x223>
    131c:	88 e7       	ldi	r24, 0x78	; 120
    131e:	90 e0       	ldi	r25, 0x00	; 0
    1320:	02 c0       	rjmp	.+4      	; 0x1326 <__stack+0x227>
    1322:	88 e5       	ldi	r24, 0x58	; 88
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	b7 01       	movw	r22, r14
    1328:	0c c0       	rjmp	.+24     	; 0x1342 <__stack+0x243>
    132a:	83 2f       	mov	r24, r19
    132c:	86 78       	andi	r24, 0x86	; 134
    132e:	51 f0       	breq	.+20     	; 0x1344 <__stack+0x245>
    1330:	31 ff       	sbrs	r19, 1
    1332:	02 c0       	rjmp	.+4      	; 0x1338 <__stack+0x239>
    1334:	8b e2       	ldi	r24, 0x2B	; 43
    1336:	01 c0       	rjmp	.+2      	; 0x133a <__stack+0x23b>
    1338:	80 e2       	ldi	r24, 0x20	; 32
    133a:	37 fd       	sbrc	r19, 7
    133c:	8d e2       	ldi	r24, 0x2D	; 45
    133e:	b7 01       	movw	r22, r14
    1340:	90 e0       	ldi	r25, 0x00	; 0
    1342:	d6 d1       	rcall	.+940    	; 0x16f0 <fputc>
    1344:	a5 14       	cp	r10, r5
    1346:	30 f4       	brcc	.+12     	; 0x1354 <__stack+0x255>
    1348:	b7 01       	movw	r22, r14
    134a:	80 e3       	ldi	r24, 0x30	; 48
    134c:	90 e0       	ldi	r25, 0x00	; 0
    134e:	d0 d1       	rcall	.+928    	; 0x16f0 <fputc>
    1350:	5a 94       	dec	r5
    1352:	f8 cf       	rjmp	.-16     	; 0x1344 <__stack+0x245>
    1354:	aa 94       	dec	r10
    1356:	f4 01       	movw	r30, r8
    1358:	ea 0d       	add	r30, r10
    135a:	f1 1d       	adc	r31, r1
    135c:	80 81       	ld	r24, Z
    135e:	b7 01       	movw	r22, r14
    1360:	90 e0       	ldi	r25, 0x00	; 0
    1362:	c6 d1       	rcall	.+908    	; 0x16f0 <fputc>
    1364:	a1 10       	cpse	r10, r1
    1366:	f6 cf       	rjmp	.-20     	; 0x1354 <__stack+0x255>
    1368:	33 20       	and	r3, r3
    136a:	09 f4       	brne	.+2      	; 0x136e <__stack+0x26f>
    136c:	5d ce       	rjmp	.-838    	; 0x1028 <vfprintf+0x4c>
    136e:	b7 01       	movw	r22, r14
    1370:	80 e2       	ldi	r24, 0x20	; 32
    1372:	90 e0       	ldi	r25, 0x00	; 0
    1374:	bd d1       	rcall	.+890    	; 0x16f0 <fputc>
    1376:	3a 94       	dec	r3
    1378:	f7 cf       	rjmp	.-18     	; 0x1368 <__stack+0x269>
    137a:	f7 01       	movw	r30, r14
    137c:	86 81       	ldd	r24, Z+6	; 0x06
    137e:	97 81       	ldd	r25, Z+7	; 0x07
    1380:	02 c0       	rjmp	.+4      	; 0x1386 <__stack+0x287>
    1382:	8f ef       	ldi	r24, 0xFF	; 255
    1384:	9f ef       	ldi	r25, 0xFF	; 255
    1386:	2c 96       	adiw	r28, 0x0c	; 12
    1388:	0f b6       	in	r0, 0x3f	; 63
    138a:	f8 94       	cli
    138c:	de bf       	out	0x3e, r29	; 62
    138e:	0f be       	out	0x3f, r0	; 63
    1390:	cd bf       	out	0x3d, r28	; 61
    1392:	df 91       	pop	r29
    1394:	cf 91       	pop	r28
    1396:	1f 91       	pop	r17
    1398:	0f 91       	pop	r16
    139a:	ff 90       	pop	r15
    139c:	ef 90       	pop	r14
    139e:	df 90       	pop	r13
    13a0:	cf 90       	pop	r12
    13a2:	bf 90       	pop	r11
    13a4:	af 90       	pop	r10
    13a6:	9f 90       	pop	r9
    13a8:	8f 90       	pop	r8
    13aa:	7f 90       	pop	r7
    13ac:	6f 90       	pop	r6
    13ae:	5f 90       	pop	r5
    13b0:	4f 90       	pop	r4
    13b2:	3f 90       	pop	r3
    13b4:	2f 90       	pop	r2
    13b6:	08 95       	ret

000013b8 <strtod>:
    13b8:	6f 92       	push	r6
    13ba:	7f 92       	push	r7
    13bc:	8f 92       	push	r8
    13be:	9f 92       	push	r9
    13c0:	af 92       	push	r10
    13c2:	bf 92       	push	r11
    13c4:	cf 92       	push	r12
    13c6:	df 92       	push	r13
    13c8:	ef 92       	push	r14
    13ca:	ff 92       	push	r15
    13cc:	0f 93       	push	r16
    13ce:	1f 93       	push	r17
    13d0:	cf 93       	push	r28
    13d2:	df 93       	push	r29
    13d4:	ec 01       	movw	r28, r24
    13d6:	7b 01       	movw	r14, r22
    13d8:	61 15       	cp	r22, r1
    13da:	71 05       	cpc	r23, r1
    13dc:	19 f0       	breq	.+6      	; 0x13e4 <strtod+0x2c>
    13de:	db 01       	movw	r26, r22
    13e0:	8d 93       	st	X+, r24
    13e2:	9c 93       	st	X, r25
    13e4:	8e 01       	movw	r16, r28
    13e6:	0f 5f       	subi	r16, 0xFF	; 255
    13e8:	1f 4f       	sbci	r17, 0xFF	; 255
    13ea:	78 80       	ld	r7, Y
    13ec:	87 2d       	mov	r24, r7
    13ee:	90 e0       	ldi	r25, 0x00	; 0
    13f0:	49 d1       	rcall	.+658    	; 0x1684 <isspace>
    13f2:	89 2b       	or	r24, r25
    13f4:	11 f0       	breq	.+4      	; 0x13fa <strtod+0x42>
    13f6:	e8 01       	movw	r28, r16
    13f8:	f5 cf       	rjmp	.-22     	; 0x13e4 <strtod+0x2c>
    13fa:	bd e2       	ldi	r27, 0x2D	; 45
    13fc:	7b 12       	cpse	r7, r27
    13fe:	05 c0       	rjmp	.+10     	; 0x140a <strtod+0x52>
    1400:	0f 5f       	subi	r16, 0xFF	; 255
    1402:	1f 4f       	sbci	r17, 0xFF	; 255
    1404:	79 80       	ldd	r7, Y+1	; 0x01
    1406:	c1 e0       	ldi	r28, 0x01	; 1
    1408:	08 c0       	rjmp	.+16     	; 0x141a <strtod+0x62>
    140a:	eb e2       	ldi	r30, 0x2B	; 43
    140c:	7e 12       	cpse	r7, r30
    140e:	04 c0       	rjmp	.+8      	; 0x1418 <strtod+0x60>
    1410:	8e 01       	movw	r16, r28
    1412:	0e 5f       	subi	r16, 0xFE	; 254
    1414:	1f 4f       	sbci	r17, 0xFF	; 255
    1416:	79 80       	ldd	r7, Y+1	; 0x01
    1418:	c0 e0       	ldi	r28, 0x00	; 0
    141a:	68 01       	movw	r12, r16
    141c:	f1 e0       	ldi	r31, 0x01	; 1
    141e:	cf 1a       	sub	r12, r31
    1420:	d1 08       	sbc	r13, r1
    1422:	43 e0       	ldi	r20, 0x03	; 3
    1424:	50 e0       	ldi	r21, 0x00	; 0
    1426:	64 e9       	ldi	r22, 0x94	; 148
    1428:	70 e0       	ldi	r23, 0x00	; 0
    142a:	c6 01       	movw	r24, r12
    142c:	33 d1       	rcall	.+614    	; 0x1694 <strncasecmp_P>
    142e:	89 2b       	or	r24, r25
    1430:	e9 f4       	brne	.+58     	; 0x146c <strtod+0xb4>
    1432:	68 01       	movw	r12, r16
    1434:	22 e0       	ldi	r18, 0x02	; 2
    1436:	c2 0e       	add	r12, r18
    1438:	d1 1c       	adc	r13, r1
    143a:	45 e0       	ldi	r20, 0x05	; 5
    143c:	50 e0       	ldi	r21, 0x00	; 0
    143e:	6f e8       	ldi	r22, 0x8F	; 143
    1440:	70 e0       	ldi	r23, 0x00	; 0
    1442:	c6 01       	movw	r24, r12
    1444:	27 d1       	rcall	.+590    	; 0x1694 <strncasecmp_P>
    1446:	89 2b       	or	r24, r25
    1448:	21 f4       	brne	.+8      	; 0x1452 <strtod+0x9a>
    144a:	68 01       	movw	r12, r16
    144c:	87 e0       	ldi	r24, 0x07	; 7
    144e:	c8 0e       	add	r12, r24
    1450:	d1 1c       	adc	r13, r1
    1452:	e1 14       	cp	r14, r1
    1454:	f1 04       	cpc	r15, r1
    1456:	19 f0       	breq	.+6      	; 0x145e <strtod+0xa6>
    1458:	d7 01       	movw	r26, r14
    145a:	cd 92       	st	X+, r12
    145c:	dc 92       	st	X, r13
    145e:	c1 11       	cpse	r28, r1
    1460:	f9 c0       	rjmp	.+498    	; 0x1654 <strtod+0x29c>
    1462:	60 e0       	ldi	r22, 0x00	; 0
    1464:	70 e0       	ldi	r23, 0x00	; 0
    1466:	80 e8       	ldi	r24, 0x80	; 128
    1468:	9f e7       	ldi	r25, 0x7F	; 127
    146a:	fd c0       	rjmp	.+506    	; 0x1666 <strtod+0x2ae>
    146c:	43 e0       	ldi	r20, 0x03	; 3
    146e:	50 e0       	ldi	r21, 0x00	; 0
    1470:	6c e8       	ldi	r22, 0x8C	; 140
    1472:	70 e0       	ldi	r23, 0x00	; 0
    1474:	c6 01       	movw	r24, r12
    1476:	0e d1       	rcall	.+540    	; 0x1694 <strncasecmp_P>
    1478:	89 2b       	or	r24, r25
    147a:	51 f4       	brne	.+20     	; 0x1490 <strtod+0xd8>
    147c:	e1 14       	cp	r14, r1
    147e:	f1 04       	cpc	r15, r1
    1480:	09 f4       	brne	.+2      	; 0x1484 <strtod+0xcc>
    1482:	ed c0       	rjmp	.+474    	; 0x165e <strtod+0x2a6>
    1484:	0e 5f       	subi	r16, 0xFE	; 254
    1486:	1f 4f       	sbci	r17, 0xFF	; 255
    1488:	f7 01       	movw	r30, r14
    148a:	11 83       	std	Z+1, r17	; 0x01
    148c:	00 83       	st	Z, r16
    148e:	e7 c0       	rjmp	.+462    	; 0x165e <strtod+0x2a6>
    1490:	68 01       	movw	r12, r16
    1492:	60 e0       	ldi	r22, 0x00	; 0
    1494:	70 e0       	ldi	r23, 0x00	; 0
    1496:	cb 01       	movw	r24, r22
    1498:	00 e0       	ldi	r16, 0x00	; 0
    149a:	10 e0       	ldi	r17, 0x00	; 0
    149c:	f6 01       	movw	r30, r12
    149e:	d0 ed       	ldi	r29, 0xD0	; 208
    14a0:	d7 0d       	add	r29, r7
    14a2:	da 30       	cpi	r29, 0x0A	; 10
    14a4:	50 f5       	brcc	.+84     	; 0x14fa <strtod+0x142>
    14a6:	2c 2f       	mov	r18, r28
    14a8:	22 60       	ori	r18, 0x02	; 2
    14aa:	62 2e       	mov	r6, r18
    14ac:	2c 2f       	mov	r18, r28
    14ae:	28 70       	andi	r18, 0x08	; 8
    14b0:	c2 ff       	sbrs	r28, 2
    14b2:	05 c0       	rjmp	.+10     	; 0x14be <strtod+0x106>
    14b4:	21 11       	cpse	r18, r1
    14b6:	27 c0       	rjmp	.+78     	; 0x1506 <strtod+0x14e>
    14b8:	0f 5f       	subi	r16, 0xFF	; 255
    14ba:	1f 4f       	sbci	r17, 0xFF	; 255
    14bc:	24 c0       	rjmp	.+72     	; 0x1506 <strtod+0x14e>
    14be:	22 23       	and	r18, r18
    14c0:	11 f0       	breq	.+4      	; 0x14c6 <strtod+0x10e>
    14c2:	01 50       	subi	r16, 0x01	; 1
    14c4:	11 09       	sbc	r17, r1
    14c6:	a5 e0       	ldi	r26, 0x05	; 5
    14c8:	b0 e0       	ldi	r27, 0x00	; 0
    14ca:	9b 01       	movw	r18, r22
    14cc:	ac 01       	movw	r20, r24
    14ce:	2c d2       	rcall	.+1112   	; 0x1928 <__muluhisi3>
    14d0:	4b 01       	movw	r8, r22
    14d2:	5c 01       	movw	r10, r24
    14d4:	88 0c       	add	r8, r8
    14d6:	99 1c       	adc	r9, r9
    14d8:	aa 1c       	adc	r10, r10
    14da:	bb 1c       	adc	r11, r11
    14dc:	c5 01       	movw	r24, r10
    14de:	b4 01       	movw	r22, r8
    14e0:	6d 0f       	add	r22, r29
    14e2:	71 1d       	adc	r23, r1
    14e4:	81 1d       	adc	r24, r1
    14e6:	91 1d       	adc	r25, r1
    14e8:	68 39       	cpi	r22, 0x98	; 152
    14ea:	a9 e9       	ldi	r26, 0x99	; 153
    14ec:	7a 07       	cpc	r23, r26
    14ee:	8a 07       	cpc	r24, r26
    14f0:	a9 e1       	ldi	r26, 0x19	; 25
    14f2:	9a 07       	cpc	r25, r26
    14f4:	40 f0       	brcs	.+16     	; 0x1506 <strtod+0x14e>
    14f6:	c6 60       	ori	r28, 0x06	; 6
    14f8:	05 c0       	rjmp	.+10     	; 0x1504 <strtod+0x14c>
    14fa:	de 3f       	cpi	r29, 0xFE	; 254
    14fc:	51 f4       	brne	.+20     	; 0x1512 <strtod+0x15a>
    14fe:	c3 fd       	sbrc	r28, 3
    1500:	44 c0       	rjmp	.+136    	; 0x158a <strtod+0x1d2>
    1502:	c8 60       	ori	r28, 0x08	; 8
    1504:	6c 2e       	mov	r6, r28
    1506:	bf ef       	ldi	r27, 0xFF	; 255
    1508:	cb 1a       	sub	r12, r27
    150a:	db 0a       	sbc	r13, r27
    150c:	70 80       	ld	r7, Z
    150e:	c6 2d       	mov	r28, r6
    1510:	c5 cf       	rjmp	.-118    	; 0x149c <strtod+0xe4>
    1512:	2d 2f       	mov	r18, r29
    1514:	2f 7d       	andi	r18, 0xDF	; 223
    1516:	25 31       	cpi	r18, 0x15	; 21
    1518:	c1 f5       	brne	.+112    	; 0x158a <strtod+0x1d2>
    151a:	40 81       	ld	r20, Z
    151c:	4d 32       	cpi	r20, 0x2D	; 45
    151e:	11 f4       	brne	.+4      	; 0x1524 <strtod+0x16c>
    1520:	c0 61       	ori	r28, 0x10	; 16
    1522:	06 c0       	rjmp	.+12     	; 0x1530 <strtod+0x178>
    1524:	4b 32       	cpi	r20, 0x2B	; 43
    1526:	21 f0       	breq	.+8      	; 0x1530 <strtod+0x178>
    1528:	31 96       	adiw	r30, 0x01	; 1
    152a:	21 e0       	ldi	r18, 0x01	; 1
    152c:	30 e0       	ldi	r19, 0x00	; 0
    152e:	06 c0       	rjmp	.+12     	; 0x153c <strtod+0x184>
    1530:	32 96       	adiw	r30, 0x02	; 2
    1532:	d6 01       	movw	r26, r12
    1534:	11 96       	adiw	r26, 0x01	; 1
    1536:	4c 91       	ld	r20, X
    1538:	22 e0       	ldi	r18, 0x02	; 2
    153a:	30 e0       	ldi	r19, 0x00	; 0
    153c:	a0 ed       	ldi	r26, 0xD0	; 208
    153e:	a4 0f       	add	r26, r20
    1540:	aa 30       	cpi	r26, 0x0A	; 10
    1542:	18 f0       	brcs	.+6      	; 0x154a <strtod+0x192>
    1544:	e2 1b       	sub	r30, r18
    1546:	f3 0b       	sbc	r31, r19
    1548:	20 c0       	rjmp	.+64     	; 0x158a <strtod+0x1d2>
    154a:	40 e0       	ldi	r20, 0x00	; 0
    154c:	50 e0       	ldi	r21, 0x00	; 0
    154e:	40 38       	cpi	r20, 0x80	; 128
    1550:	bc e0       	ldi	r27, 0x0C	; 12
    1552:	5b 07       	cpc	r21, r27
    1554:	5c f4       	brge	.+22     	; 0x156c <strtod+0x1b4>
    1556:	9a 01       	movw	r18, r20
    1558:	22 0f       	add	r18, r18
    155a:	33 1f       	adc	r19, r19
    155c:	22 0f       	add	r18, r18
    155e:	33 1f       	adc	r19, r19
    1560:	42 0f       	add	r20, r18
    1562:	53 1f       	adc	r21, r19
    1564:	44 0f       	add	r20, r20
    1566:	55 1f       	adc	r21, r21
    1568:	4a 0f       	add	r20, r26
    156a:	51 1d       	adc	r21, r1
    156c:	31 96       	adiw	r30, 0x01	; 1
    156e:	df 01       	movw	r26, r30
    1570:	11 97       	sbiw	r26, 0x01	; 1
    1572:	2c 91       	ld	r18, X
    1574:	a0 ed       	ldi	r26, 0xD0	; 208
    1576:	a2 0f       	add	r26, r18
    1578:	aa 30       	cpi	r26, 0x0A	; 10
    157a:	48 f3       	brcs	.-46     	; 0x154e <strtod+0x196>
    157c:	c4 ff       	sbrs	r28, 4
    157e:	03 c0       	rjmp	.+6      	; 0x1586 <strtod+0x1ce>
    1580:	51 95       	neg	r21
    1582:	41 95       	neg	r20
    1584:	51 09       	sbc	r21, r1
    1586:	04 0f       	add	r16, r20
    1588:	15 1f       	adc	r17, r21
    158a:	c1 ff       	sbrs	r28, 1
    158c:	07 c0       	rjmp	.+14     	; 0x159c <strtod+0x1e4>
    158e:	e1 14       	cp	r14, r1
    1590:	f1 04       	cpc	r15, r1
    1592:	21 f0       	breq	.+8      	; 0x159c <strtod+0x1e4>
    1594:	31 97       	sbiw	r30, 0x01	; 1
    1596:	d7 01       	movw	r26, r14
    1598:	ed 93       	st	X+, r30
    159a:	fc 93       	st	X, r31
    159c:	4d da       	rcall	.-2918   	; 0xa38 <__floatunsisf>
    159e:	c3 70       	andi	r28, 0x03	; 3
    15a0:	c3 30       	cpi	r28, 0x03	; 3
    15a2:	19 f0       	breq	.+6      	; 0x15aa <strtod+0x1f2>
    15a4:	6b 01       	movw	r12, r22
    15a6:	7c 01       	movw	r14, r24
    15a8:	06 c0       	rjmp	.+12     	; 0x15b6 <strtod+0x1fe>
    15aa:	6b 01       	movw	r12, r22
    15ac:	7c 01       	movw	r14, r24
    15ae:	f7 fa       	bst	r15, 7
    15b0:	f0 94       	com	r15
    15b2:	f7 f8       	bld	r15, 7
    15b4:	f0 94       	com	r15
    15b6:	20 e0       	ldi	r18, 0x00	; 0
    15b8:	30 e0       	ldi	r19, 0x00	; 0
    15ba:	a9 01       	movw	r20, r18
    15bc:	c7 01       	movw	r24, r14
    15be:	b6 01       	movw	r22, r12
    15c0:	2d d1       	rcall	.+602    	; 0x181c <__cmpsf2>
    15c2:	88 23       	and	r24, r24
    15c4:	09 f4       	brne	.+2      	; 0x15c8 <strtod+0x210>
    15c6:	43 c0       	rjmp	.+134    	; 0x164e <strtod+0x296>
    15c8:	17 ff       	sbrs	r17, 7
    15ca:	06 c0       	rjmp	.+12     	; 0x15d8 <strtod+0x220>
    15cc:	11 95       	neg	r17
    15ce:	01 95       	neg	r16
    15d0:	11 09       	sbc	r17, r1
    15d2:	cb ea       	ldi	r28, 0xAB	; 171
    15d4:	d0 e0       	ldi	r29, 0x00	; 0
    15d6:	02 c0       	rjmp	.+4      	; 0x15dc <strtod+0x224>
    15d8:	c3 ec       	ldi	r28, 0xC3	; 195
    15da:	d0 e0       	ldi	r29, 0x00	; 0
    15dc:	5e 01       	movw	r10, r28
    15de:	b8 e1       	ldi	r27, 0x18	; 24
    15e0:	ab 1a       	sub	r10, r27
    15e2:	b1 08       	sbc	r11, r1
    15e4:	46 01       	movw	r8, r12
    15e6:	be 2d       	mov	r27, r14
    15e8:	af 2d       	mov	r26, r15
    15ea:	90 e2       	ldi	r25, 0x20	; 32
    15ec:	e9 2e       	mov	r14, r25
    15ee:	f1 2c       	mov	r15, r1
    15f0:	0e 15       	cp	r16, r14
    15f2:	1f 05       	cpc	r17, r15
    15f4:	7c f0       	brlt	.+30     	; 0x1614 <strtod+0x25c>
    15f6:	fe 01       	movw	r30, r28
    15f8:	25 91       	lpm	r18, Z+
    15fa:	35 91       	lpm	r19, Z+
    15fc:	45 91       	lpm	r20, Z+
    15fe:	54 91       	lpm	r21, Z
    1600:	b4 01       	movw	r22, r8
    1602:	8b 2f       	mov	r24, r27
    1604:	9a 2f       	mov	r25, r26
    1606:	0e d1       	rcall	.+540    	; 0x1824 <__mulsf3>
    1608:	4b 01       	movw	r8, r22
    160a:	b8 2f       	mov	r27, r24
    160c:	a9 2f       	mov	r26, r25
    160e:	0e 19       	sub	r16, r14
    1610:	1f 09       	sbc	r17, r15
    1612:	ee cf       	rjmp	.-36     	; 0x15f0 <strtod+0x238>
    1614:	24 97       	sbiw	r28, 0x04	; 4
    1616:	f5 94       	asr	r15
    1618:	e7 94       	ror	r14
    161a:	ca 15       	cp	r28, r10
    161c:	db 05       	cpc	r29, r11
    161e:	41 f7       	brne	.-48     	; 0x15f0 <strtod+0x238>
    1620:	64 01       	movw	r12, r8
    1622:	eb 2e       	mov	r14, r27
    1624:	fa 2e       	mov	r15, r26
    1626:	8e 2d       	mov	r24, r14
    1628:	88 0f       	add	r24, r24
    162a:	8f 2d       	mov	r24, r15
    162c:	88 1f       	adc	r24, r24
    162e:	8f 3f       	cpi	r24, 0xFF	; 255
    1630:	41 f0       	breq	.+16     	; 0x1642 <strtod+0x28a>
    1632:	20 e0       	ldi	r18, 0x00	; 0
    1634:	30 e0       	ldi	r19, 0x00	; 0
    1636:	a9 01       	movw	r20, r18
    1638:	c7 01       	movw	r24, r14
    163a:	b6 01       	movw	r22, r12
    163c:	ef d0       	rcall	.+478    	; 0x181c <__cmpsf2>
    163e:	81 11       	cpse	r24, r1
    1640:	06 c0       	rjmp	.+12     	; 0x164e <strtod+0x296>
    1642:	82 e2       	ldi	r24, 0x22	; 34
    1644:	90 e0       	ldi	r25, 0x00	; 0
    1646:	90 93 ce 02 	sts	0x02CE, r25	; 0x8002ce <errno+0x1>
    164a:	80 93 cd 02 	sts	0x02CD, r24	; 0x8002cd <errno>
    164e:	c7 01       	movw	r24, r14
    1650:	b6 01       	movw	r22, r12
    1652:	09 c0       	rjmp	.+18     	; 0x1666 <strtod+0x2ae>
    1654:	60 e0       	ldi	r22, 0x00	; 0
    1656:	70 e0       	ldi	r23, 0x00	; 0
    1658:	80 e8       	ldi	r24, 0x80	; 128
    165a:	9f ef       	ldi	r25, 0xFF	; 255
    165c:	04 c0       	rjmp	.+8      	; 0x1666 <strtod+0x2ae>
    165e:	60 e0       	ldi	r22, 0x00	; 0
    1660:	70 e0       	ldi	r23, 0x00	; 0
    1662:	80 ec       	ldi	r24, 0xC0	; 192
    1664:	9f e7       	ldi	r25, 0x7F	; 127
    1666:	df 91       	pop	r29
    1668:	cf 91       	pop	r28
    166a:	1f 91       	pop	r17
    166c:	0f 91       	pop	r16
    166e:	ff 90       	pop	r15
    1670:	ef 90       	pop	r14
    1672:	df 90       	pop	r13
    1674:	cf 90       	pop	r12
    1676:	bf 90       	pop	r11
    1678:	af 90       	pop	r10
    167a:	9f 90       	pop	r9
    167c:	8f 90       	pop	r8
    167e:	7f 90       	pop	r7
    1680:	6f 90       	pop	r6
    1682:	08 95       	ret

00001684 <isspace>:
    1684:	91 11       	cpse	r25, r1
    1686:	31 c1       	rjmp	.+610    	; 0x18ea <__ctype_isfalse>
    1688:	80 32       	cpi	r24, 0x20	; 32
    168a:	19 f0       	breq	.+6      	; 0x1692 <isspace+0xe>
    168c:	89 50       	subi	r24, 0x09	; 9
    168e:	85 50       	subi	r24, 0x05	; 5
    1690:	d0 f7       	brcc	.-12     	; 0x1686 <isspace+0x2>
    1692:	08 95       	ret

00001694 <strncasecmp_P>:
    1694:	fb 01       	movw	r30, r22
    1696:	dc 01       	movw	r26, r24
    1698:	41 50       	subi	r20, 0x01	; 1
    169a:	50 40       	sbci	r21, 0x00	; 0
    169c:	88 f0       	brcs	.+34     	; 0x16c0 <strncasecmp_P+0x2c>
    169e:	8d 91       	ld	r24, X+
    16a0:	81 34       	cpi	r24, 0x41	; 65
    16a2:	1c f0       	brlt	.+6      	; 0x16aa <strncasecmp_P+0x16>
    16a4:	8b 35       	cpi	r24, 0x5B	; 91
    16a6:	0c f4       	brge	.+2      	; 0x16aa <strncasecmp_P+0x16>
    16a8:	80 5e       	subi	r24, 0xE0	; 224
    16aa:	65 91       	lpm	r22, Z+
    16ac:	61 34       	cpi	r22, 0x41	; 65
    16ae:	1c f0       	brlt	.+6      	; 0x16b6 <strncasecmp_P+0x22>
    16b0:	6b 35       	cpi	r22, 0x5B	; 91
    16b2:	0c f4       	brge	.+2      	; 0x16b6 <strncasecmp_P+0x22>
    16b4:	60 5e       	subi	r22, 0xE0	; 224
    16b6:	86 1b       	sub	r24, r22
    16b8:	61 11       	cpse	r22, r1
    16ba:	71 f3       	breq	.-36     	; 0x1698 <strncasecmp_P+0x4>
    16bc:	99 0b       	sbc	r25, r25
    16be:	08 95       	ret
    16c0:	88 1b       	sub	r24, r24
    16c2:	fc cf       	rjmp	.-8      	; 0x16bc <strncasecmp_P+0x28>

000016c4 <strnlen_P>:
    16c4:	fc 01       	movw	r30, r24
    16c6:	05 90       	lpm	r0, Z+
    16c8:	61 50       	subi	r22, 0x01	; 1
    16ca:	70 40       	sbci	r23, 0x00	; 0
    16cc:	01 10       	cpse	r0, r1
    16ce:	d8 f7       	brcc	.-10     	; 0x16c6 <strnlen_P+0x2>
    16d0:	80 95       	com	r24
    16d2:	90 95       	com	r25
    16d4:	8e 0f       	add	r24, r30
    16d6:	9f 1f       	adc	r25, r31
    16d8:	08 95       	ret

000016da <strnlen>:
    16da:	fc 01       	movw	r30, r24
    16dc:	61 50       	subi	r22, 0x01	; 1
    16de:	70 40       	sbci	r23, 0x00	; 0
    16e0:	01 90       	ld	r0, Z+
    16e2:	01 10       	cpse	r0, r1
    16e4:	d8 f7       	brcc	.-10     	; 0x16dc <strnlen+0x2>
    16e6:	80 95       	com	r24
    16e8:	90 95       	com	r25
    16ea:	8e 0f       	add	r24, r30
    16ec:	9f 1f       	adc	r25, r31
    16ee:	08 95       	ret

000016f0 <fputc>:
    16f0:	0f 93       	push	r16
    16f2:	1f 93       	push	r17
    16f4:	cf 93       	push	r28
    16f6:	df 93       	push	r29
    16f8:	fb 01       	movw	r30, r22
    16fa:	23 81       	ldd	r18, Z+3	; 0x03
    16fc:	21 fd       	sbrc	r18, 1
    16fe:	03 c0       	rjmp	.+6      	; 0x1706 <fputc+0x16>
    1700:	8f ef       	ldi	r24, 0xFF	; 255
    1702:	9f ef       	ldi	r25, 0xFF	; 255
    1704:	28 c0       	rjmp	.+80     	; 0x1756 <fputc+0x66>
    1706:	22 ff       	sbrs	r18, 2
    1708:	16 c0       	rjmp	.+44     	; 0x1736 <fputc+0x46>
    170a:	46 81       	ldd	r20, Z+6	; 0x06
    170c:	57 81       	ldd	r21, Z+7	; 0x07
    170e:	24 81       	ldd	r18, Z+4	; 0x04
    1710:	35 81       	ldd	r19, Z+5	; 0x05
    1712:	42 17       	cp	r20, r18
    1714:	53 07       	cpc	r21, r19
    1716:	44 f4       	brge	.+16     	; 0x1728 <fputc+0x38>
    1718:	a0 81       	ld	r26, Z
    171a:	b1 81       	ldd	r27, Z+1	; 0x01
    171c:	9d 01       	movw	r18, r26
    171e:	2f 5f       	subi	r18, 0xFF	; 255
    1720:	3f 4f       	sbci	r19, 0xFF	; 255
    1722:	31 83       	std	Z+1, r19	; 0x01
    1724:	20 83       	st	Z, r18
    1726:	8c 93       	st	X, r24
    1728:	26 81       	ldd	r18, Z+6	; 0x06
    172a:	37 81       	ldd	r19, Z+7	; 0x07
    172c:	2f 5f       	subi	r18, 0xFF	; 255
    172e:	3f 4f       	sbci	r19, 0xFF	; 255
    1730:	37 83       	std	Z+7, r19	; 0x07
    1732:	26 83       	std	Z+6, r18	; 0x06
    1734:	10 c0       	rjmp	.+32     	; 0x1756 <fputc+0x66>
    1736:	eb 01       	movw	r28, r22
    1738:	09 2f       	mov	r16, r25
    173a:	18 2f       	mov	r17, r24
    173c:	00 84       	ldd	r0, Z+8	; 0x08
    173e:	f1 85       	ldd	r31, Z+9	; 0x09
    1740:	e0 2d       	mov	r30, r0
    1742:	09 95       	icall
    1744:	89 2b       	or	r24, r25
    1746:	e1 f6       	brne	.-72     	; 0x1700 <fputc+0x10>
    1748:	8e 81       	ldd	r24, Y+6	; 0x06
    174a:	9f 81       	ldd	r25, Y+7	; 0x07
    174c:	01 96       	adiw	r24, 0x01	; 1
    174e:	9f 83       	std	Y+7, r25	; 0x07
    1750:	8e 83       	std	Y+6, r24	; 0x06
    1752:	81 2f       	mov	r24, r17
    1754:	90 2f       	mov	r25, r16
    1756:	df 91       	pop	r29
    1758:	cf 91       	pop	r28
    175a:	1f 91       	pop	r17
    175c:	0f 91       	pop	r16
    175e:	08 95       	ret

00001760 <__ultoa_invert>:
    1760:	fa 01       	movw	r30, r20
    1762:	aa 27       	eor	r26, r26
    1764:	28 30       	cpi	r18, 0x08	; 8
    1766:	51 f1       	breq	.+84     	; 0x17bc <__ultoa_invert+0x5c>
    1768:	20 31       	cpi	r18, 0x10	; 16
    176a:	81 f1       	breq	.+96     	; 0x17cc <__ultoa_invert+0x6c>
    176c:	e8 94       	clt
    176e:	6f 93       	push	r22
    1770:	6e 7f       	andi	r22, 0xFE	; 254
    1772:	6e 5f       	subi	r22, 0xFE	; 254
    1774:	7f 4f       	sbci	r23, 0xFF	; 255
    1776:	8f 4f       	sbci	r24, 0xFF	; 255
    1778:	9f 4f       	sbci	r25, 0xFF	; 255
    177a:	af 4f       	sbci	r26, 0xFF	; 255
    177c:	b1 e0       	ldi	r27, 0x01	; 1
    177e:	3e d0       	rcall	.+124    	; 0x17fc <__ultoa_invert+0x9c>
    1780:	b4 e0       	ldi	r27, 0x04	; 4
    1782:	3c d0       	rcall	.+120    	; 0x17fc <__ultoa_invert+0x9c>
    1784:	67 0f       	add	r22, r23
    1786:	78 1f       	adc	r23, r24
    1788:	89 1f       	adc	r24, r25
    178a:	9a 1f       	adc	r25, r26
    178c:	a1 1d       	adc	r26, r1
    178e:	68 0f       	add	r22, r24
    1790:	79 1f       	adc	r23, r25
    1792:	8a 1f       	adc	r24, r26
    1794:	91 1d       	adc	r25, r1
    1796:	a1 1d       	adc	r26, r1
    1798:	6a 0f       	add	r22, r26
    179a:	71 1d       	adc	r23, r1
    179c:	81 1d       	adc	r24, r1
    179e:	91 1d       	adc	r25, r1
    17a0:	a1 1d       	adc	r26, r1
    17a2:	20 d0       	rcall	.+64     	; 0x17e4 <__ultoa_invert+0x84>
    17a4:	09 f4       	brne	.+2      	; 0x17a8 <__ultoa_invert+0x48>
    17a6:	68 94       	set
    17a8:	3f 91       	pop	r19
    17aa:	2a e0       	ldi	r18, 0x0A	; 10
    17ac:	26 9f       	mul	r18, r22
    17ae:	11 24       	eor	r1, r1
    17b0:	30 19       	sub	r19, r0
    17b2:	30 5d       	subi	r19, 0xD0	; 208
    17b4:	31 93       	st	Z+, r19
    17b6:	de f6       	brtc	.-74     	; 0x176e <__ultoa_invert+0xe>
    17b8:	cf 01       	movw	r24, r30
    17ba:	08 95       	ret
    17bc:	46 2f       	mov	r20, r22
    17be:	47 70       	andi	r20, 0x07	; 7
    17c0:	40 5d       	subi	r20, 0xD0	; 208
    17c2:	41 93       	st	Z+, r20
    17c4:	b3 e0       	ldi	r27, 0x03	; 3
    17c6:	0f d0       	rcall	.+30     	; 0x17e6 <__ultoa_invert+0x86>
    17c8:	c9 f7       	brne	.-14     	; 0x17bc <__ultoa_invert+0x5c>
    17ca:	f6 cf       	rjmp	.-20     	; 0x17b8 <__ultoa_invert+0x58>
    17cc:	46 2f       	mov	r20, r22
    17ce:	4f 70       	andi	r20, 0x0F	; 15
    17d0:	40 5d       	subi	r20, 0xD0	; 208
    17d2:	4a 33       	cpi	r20, 0x3A	; 58
    17d4:	18 f0       	brcs	.+6      	; 0x17dc <__ultoa_invert+0x7c>
    17d6:	49 5d       	subi	r20, 0xD9	; 217
    17d8:	31 fd       	sbrc	r19, 1
    17da:	40 52       	subi	r20, 0x20	; 32
    17dc:	41 93       	st	Z+, r20
    17de:	02 d0       	rcall	.+4      	; 0x17e4 <__ultoa_invert+0x84>
    17e0:	a9 f7       	brne	.-22     	; 0x17cc <__ultoa_invert+0x6c>
    17e2:	ea cf       	rjmp	.-44     	; 0x17b8 <__ultoa_invert+0x58>
    17e4:	b4 e0       	ldi	r27, 0x04	; 4
    17e6:	a6 95       	lsr	r26
    17e8:	97 95       	ror	r25
    17ea:	87 95       	ror	r24
    17ec:	77 95       	ror	r23
    17ee:	67 95       	ror	r22
    17f0:	ba 95       	dec	r27
    17f2:	c9 f7       	brne	.-14     	; 0x17e6 <__ultoa_invert+0x86>
    17f4:	00 97       	sbiw	r24, 0x00	; 0
    17f6:	61 05       	cpc	r22, r1
    17f8:	71 05       	cpc	r23, r1
    17fa:	08 95       	ret
    17fc:	9b 01       	movw	r18, r22
    17fe:	ac 01       	movw	r20, r24
    1800:	0a 2e       	mov	r0, r26
    1802:	06 94       	lsr	r0
    1804:	57 95       	ror	r21
    1806:	47 95       	ror	r20
    1808:	37 95       	ror	r19
    180a:	27 95       	ror	r18
    180c:	ba 95       	dec	r27
    180e:	c9 f7       	brne	.-14     	; 0x1802 <__ultoa_invert+0xa2>
    1810:	62 0f       	add	r22, r18
    1812:	73 1f       	adc	r23, r19
    1814:	84 1f       	adc	r24, r20
    1816:	95 1f       	adc	r25, r21
    1818:	a0 1d       	adc	r26, r0
    181a:	08 95       	ret

0000181c <__cmpsf2>:
    181c:	9f d9       	rcall	.-3266   	; 0xb5c <__fp_cmp>
    181e:	08 f4       	brcc	.+2      	; 0x1822 <__cmpsf2+0x6>
    1820:	81 e0       	ldi	r24, 0x01	; 1
    1822:	08 95       	ret

00001824 <__mulsf3>:
    1824:	0b d0       	rcall	.+22     	; 0x183c <__mulsf3x>
    1826:	5c c9       	rjmp	.-3400   	; 0xae0 <__fp_round>
    1828:	4d d9       	rcall	.-3430   	; 0xac4 <__fp_pscA>
    182a:	28 f0       	brcs	.+10     	; 0x1836 <__mulsf3+0x12>
    182c:	52 d9       	rcall	.-3420   	; 0xad2 <__fp_pscB>
    182e:	18 f0       	brcs	.+6      	; 0x1836 <__mulsf3+0x12>
    1830:	95 23       	and	r25, r21
    1832:	09 f0       	breq	.+2      	; 0x1836 <__mulsf3+0x12>
    1834:	3e c9       	rjmp	.-3460   	; 0xab2 <__fp_inf>
    1836:	43 c9       	rjmp	.-3450   	; 0xabe <__fp_nan>
    1838:	11 24       	eor	r1, r1
    183a:	86 c9       	rjmp	.-3316   	; 0xb48 <__fp_szero>

0000183c <__mulsf3x>:
    183c:	62 d9       	rcall	.-3388   	; 0xb02 <__fp_split3>
    183e:	a0 f3       	brcs	.-24     	; 0x1828 <__mulsf3+0x4>

00001840 <__mulsf3_pse>:
    1840:	95 9f       	mul	r25, r21
    1842:	d1 f3       	breq	.-12     	; 0x1838 <__mulsf3+0x14>
    1844:	95 0f       	add	r25, r21
    1846:	50 e0       	ldi	r21, 0x00	; 0
    1848:	55 1f       	adc	r21, r21
    184a:	62 9f       	mul	r22, r18
    184c:	f0 01       	movw	r30, r0
    184e:	72 9f       	mul	r23, r18
    1850:	bb 27       	eor	r27, r27
    1852:	f0 0d       	add	r31, r0
    1854:	b1 1d       	adc	r27, r1
    1856:	63 9f       	mul	r22, r19
    1858:	aa 27       	eor	r26, r26
    185a:	f0 0d       	add	r31, r0
    185c:	b1 1d       	adc	r27, r1
    185e:	aa 1f       	adc	r26, r26
    1860:	64 9f       	mul	r22, r20
    1862:	66 27       	eor	r22, r22
    1864:	b0 0d       	add	r27, r0
    1866:	a1 1d       	adc	r26, r1
    1868:	66 1f       	adc	r22, r22
    186a:	82 9f       	mul	r24, r18
    186c:	22 27       	eor	r18, r18
    186e:	b0 0d       	add	r27, r0
    1870:	a1 1d       	adc	r26, r1
    1872:	62 1f       	adc	r22, r18
    1874:	73 9f       	mul	r23, r19
    1876:	b0 0d       	add	r27, r0
    1878:	a1 1d       	adc	r26, r1
    187a:	62 1f       	adc	r22, r18
    187c:	83 9f       	mul	r24, r19
    187e:	a0 0d       	add	r26, r0
    1880:	61 1d       	adc	r22, r1
    1882:	22 1f       	adc	r18, r18
    1884:	74 9f       	mul	r23, r20
    1886:	33 27       	eor	r19, r19
    1888:	a0 0d       	add	r26, r0
    188a:	61 1d       	adc	r22, r1
    188c:	23 1f       	adc	r18, r19
    188e:	84 9f       	mul	r24, r20
    1890:	60 0d       	add	r22, r0
    1892:	21 1d       	adc	r18, r1
    1894:	82 2f       	mov	r24, r18
    1896:	76 2f       	mov	r23, r22
    1898:	6a 2f       	mov	r22, r26
    189a:	11 24       	eor	r1, r1
    189c:	9f 57       	subi	r25, 0x7F	; 127
    189e:	50 40       	sbci	r21, 0x00	; 0
    18a0:	8a f0       	brmi	.+34     	; 0x18c4 <__mulsf3_pse+0x84>
    18a2:	e1 f0       	breq	.+56     	; 0x18dc <__mulsf3_pse+0x9c>
    18a4:	88 23       	and	r24, r24
    18a6:	4a f0       	brmi	.+18     	; 0x18ba <__mulsf3_pse+0x7a>
    18a8:	ee 0f       	add	r30, r30
    18aa:	ff 1f       	adc	r31, r31
    18ac:	bb 1f       	adc	r27, r27
    18ae:	66 1f       	adc	r22, r22
    18b0:	77 1f       	adc	r23, r23
    18b2:	88 1f       	adc	r24, r24
    18b4:	91 50       	subi	r25, 0x01	; 1
    18b6:	50 40       	sbci	r21, 0x00	; 0
    18b8:	a9 f7       	brne	.-22     	; 0x18a4 <__mulsf3_pse+0x64>
    18ba:	9e 3f       	cpi	r25, 0xFE	; 254
    18bc:	51 05       	cpc	r21, r1
    18be:	70 f0       	brcs	.+28     	; 0x18dc <__mulsf3_pse+0x9c>
    18c0:	f8 c8       	rjmp	.-3600   	; 0xab2 <__fp_inf>
    18c2:	42 c9       	rjmp	.-3452   	; 0xb48 <__fp_szero>
    18c4:	5f 3f       	cpi	r21, 0xFF	; 255
    18c6:	ec f3       	brlt	.-6      	; 0x18c2 <__mulsf3_pse+0x82>
    18c8:	98 3e       	cpi	r25, 0xE8	; 232
    18ca:	dc f3       	brlt	.-10     	; 0x18c2 <__mulsf3_pse+0x82>
    18cc:	86 95       	lsr	r24
    18ce:	77 95       	ror	r23
    18d0:	67 95       	ror	r22
    18d2:	b7 95       	ror	r27
    18d4:	f7 95       	ror	r31
    18d6:	e7 95       	ror	r30
    18d8:	9f 5f       	subi	r25, 0xFF	; 255
    18da:	c1 f7       	brne	.-16     	; 0x18cc <__mulsf3_pse+0x8c>
    18dc:	fe 2b       	or	r31, r30
    18de:	88 0f       	add	r24, r24
    18e0:	91 1d       	adc	r25, r1
    18e2:	96 95       	lsr	r25
    18e4:	87 95       	ror	r24
    18e6:	97 f9       	bld	r25, 7
    18e8:	08 95       	ret

000018ea <__ctype_isfalse>:
    18ea:	99 27       	eor	r25, r25
    18ec:	88 27       	eor	r24, r24

000018ee <__ctype_istrue>:
    18ee:	08 95       	ret

000018f0 <__divmodsi4>:
    18f0:	05 2e       	mov	r0, r21
    18f2:	97 fb       	bst	r25, 7
    18f4:	16 f4       	brtc	.+4      	; 0x18fa <__divmodsi4+0xa>
    18f6:	00 94       	com	r0
    18f8:	0f d0       	rcall	.+30     	; 0x1918 <__negsi2>
    18fa:	57 fd       	sbrc	r21, 7
    18fc:	05 d0       	rcall	.+10     	; 0x1908 <__divmodsi4_neg2>
    18fe:	52 d9       	rcall	.-3420   	; 0xba4 <__udivmodsi4>
    1900:	07 fc       	sbrc	r0, 7
    1902:	02 d0       	rcall	.+4      	; 0x1908 <__divmodsi4_neg2>
    1904:	46 f4       	brtc	.+16     	; 0x1916 <__divmodsi4_exit>
    1906:	08 c0       	rjmp	.+16     	; 0x1918 <__negsi2>

00001908 <__divmodsi4_neg2>:
    1908:	50 95       	com	r21
    190a:	40 95       	com	r20
    190c:	30 95       	com	r19
    190e:	21 95       	neg	r18
    1910:	3f 4f       	sbci	r19, 0xFF	; 255
    1912:	4f 4f       	sbci	r20, 0xFF	; 255
    1914:	5f 4f       	sbci	r21, 0xFF	; 255

00001916 <__divmodsi4_exit>:
    1916:	08 95       	ret

00001918 <__negsi2>:
    1918:	90 95       	com	r25
    191a:	80 95       	com	r24
    191c:	70 95       	com	r23
    191e:	61 95       	neg	r22
    1920:	7f 4f       	sbci	r23, 0xFF	; 255
    1922:	8f 4f       	sbci	r24, 0xFF	; 255
    1924:	9f 4f       	sbci	r25, 0xFF	; 255
    1926:	08 95       	ret

00001928 <__muluhisi3>:
    1928:	0f d0       	rcall	.+30     	; 0x1948 <__umulhisi3>
    192a:	a5 9f       	mul	r26, r21
    192c:	90 0d       	add	r25, r0
    192e:	b4 9f       	mul	r27, r20
    1930:	90 0d       	add	r25, r0
    1932:	a4 9f       	mul	r26, r20
    1934:	80 0d       	add	r24, r0
    1936:	91 1d       	adc	r25, r1
    1938:	11 24       	eor	r1, r1
    193a:	08 95       	ret

0000193c <__mulshisi3>:
    193c:	b7 ff       	sbrs	r27, 7
    193e:	f4 cf       	rjmp	.-24     	; 0x1928 <__muluhisi3>

00001940 <__mulohisi3>:
    1940:	f3 df       	rcall	.-26     	; 0x1928 <__muluhisi3>
    1942:	82 1b       	sub	r24, r18
    1944:	93 0b       	sbc	r25, r19
    1946:	08 95       	ret

00001948 <__umulhisi3>:
    1948:	a2 9f       	mul	r26, r18
    194a:	b0 01       	movw	r22, r0
    194c:	b3 9f       	mul	r27, r19
    194e:	c0 01       	movw	r24, r0
    1950:	a3 9f       	mul	r26, r19
    1952:	70 0d       	add	r23, r0
    1954:	81 1d       	adc	r24, r1
    1956:	11 24       	eor	r1, r1
    1958:	91 1d       	adc	r25, r1
    195a:	b2 9f       	mul	r27, r18
    195c:	70 0d       	add	r23, r0
    195e:	81 1d       	adc	r24, r1
    1960:	11 24       	eor	r1, r1
    1962:	91 1d       	adc	r25, r1
    1964:	08 95       	ret

00001966 <_exit>:
    1966:	f8 94       	cli

00001968 <__stop_program>:
    1968:	ff cf       	rjmp	.-2      	; 0x1968 <__stop_program>
